<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.data.big.mapper.TrainloactionMapper">
  <resultMap id="BaseResultMap" type="com.data.big.model.Trainloaction">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="trainid" jdbcType="VARCHAR" property="trainid" />
    <result column="trainname" jdbcType="VARCHAR" property="trainname" />
    <result column="ipclocationid" jdbcType="VARCHAR" property="ipclocationid" />
    <result column="kssj" jdbcType="TIMESTAMP" property="kssj" />
    <result column="jssj" jdbcType="TIMESTAMP" property="jssj" />
    <result column="sd" jdbcType="INTEGER" property="sd" />
    <result column="rq" jdbcType="DATE" property="rq" />
    <result column="bz1" jdbcType="VARCHAR" property="bz1" />
    <result column="bz2" jdbcType="VARCHAR" property="bz2" />
    <result column="bz3" jdbcType="VARCHAR" property="bz3" />
    <result column="xssx" jdbcType="INTEGER" property="xssx" />
    <collection property="ipcseelocationList" ofType="com.data.big.model.Ipcseelocation">
      <id column="Ipcseelocation_id" jdbcType="VARCHAR" property="id" />
      <result column="x" jdbcType="VARCHAR" property="x" />
      <result column="y" jdbcType="VARCHAR" property="y" />
      <result column="z" jdbcType="VARCHAR" property="z" />
      <result column="heading" jdbcType="VARCHAR" property="heading" />
      <result column="pitch" jdbcType="VARCHAR" property="pitch" />
      <result column="roll" jdbcType="VARCHAR" property="roll" />
      <result column="ipcid" jdbcType="VARCHAR" property="ipcid" />
      <result column="scenetype" jdbcType="VARCHAR" property="scenetype" />
      <result column="km_start" jdbcType="INTEGER" property="kmStart" />
      <result column="km_end" jdbcType="INTEGER" property="kmEnd" />
      <result column="xm" jdbcType="VARCHAR" property="xm" />
      <result column="xb" jdbcType="VARCHAR" property="xb" />
      <collection property="camera" ofType="com.data.big.model.Camera">
        <id column="device_id" jdbcType="VARCHAR" property="deviceId" />
        <result column="device_name" jdbcType="VARCHAR" property="deviceName" />
        <result column="node_id" jdbcType="VARCHAR" property="nodeId" />
        <result column="device_type" jdbcType="VARCHAR" property="deviceType" />
        <result column="manufacturer" jdbcType="VARCHAR" property="manufacturer" />
        <result column="camera_type" jdbcType="VARCHAR" property="cameraType" />
        <result column="Camera_dpi" jdbcType="VARCHAR" property="cameraDpi" />
        <result column="ip_addr" jdbcType="VARCHAR" property="ipAddr" />
        <result column="ip_port" jdbcType="VARCHAR" property="ipPort" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="install_time" jdbcType="VARCHAR" property="installTime" />
        <result column="affiliation" jdbcType="VARCHAR" property="affiliation" />
        <result column="up_down" jdbcType="VARCHAR" property="upDown" />
        <result column="associated_line" jdbcType="VARCHAR" property="associatedLine" />
        <result column="k_mark" jdbcType="INTEGER" property="kMark" />
        <result column="join_station" jdbcType="VARCHAR" property="joinStation" />
        <result column="direction" jdbcType="VARCHAR" property="direction" />
        <result column="target_location" jdbcType="VARCHAR" property="targetLocation" />
        <result column="catalogue" jdbcType="VARCHAR" property="catalogue" />
        <result column="longitude" jdbcType="VARCHAR" property="longitude" />
        <result column="latitude" jdbcType="VARCHAR" property="latitude" />
      </collection>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, trainid, trainname, ipclocationid, kssj, jssj, sd, rq, bz1, bz2, bz3, xssx
  </sql>
  <select id="selectByPrimaryId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trainloaction
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <insert id="insert" parameterType="com.data.big.model.Trainloaction">
    insert into trainloaction (id, trainid, trainname, 
      ipclocationid, kssj, jssj, 
      sd, rq, bz1, bz2, 
      bz3, xssx)
    values (#{id,jdbcType=VARCHAR}, #{trainid,jdbcType=VARCHAR}, #{trainname,jdbcType=VARCHAR}, 
      #{ipclocationid,jdbcType=VARCHAR}, #{kssj,jdbcType=TIMESTAMP}, #{jssj,jdbcType=TIMESTAMP}, 
      #{sd,jdbcType=INTEGER}, #{rq,jdbcType=DATE}, #{bz1,jdbcType=VARCHAR}, #{bz2,jdbcType=VARCHAR}, 
      #{bz3,jdbcType=VARCHAR}, #{xssx,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.data.big.model.Trainloaction">
    insert into trainloaction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="trainid != null">
        trainid,
      </if>
      <if test="trainname != null">
        trainname,
      </if>
      <if test="ipclocationid != null">
        ipclocationid,
      </if>
      <if test="kssj != null">
        kssj,
      </if>
      <if test="jssj != null">
        jssj,
      </if>
      <if test="sd != null">
        sd,
      </if>
      <if test="rq != null">
        rq,
      </if>
      <if test="bz1 != null">
        bz1,
      </if>
      <if test="bz2 != null">
        bz2,
      </if>
      <if test="bz3 != null">
        bz3,
      </if>
      <if test="xssx != null">
        xssx,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="trainid != null">
        #{trainid,jdbcType=VARCHAR},
      </if>
      <if test="trainname != null">
        #{trainname,jdbcType=VARCHAR},
      </if>
      <if test="ipclocationid != null">
        #{ipclocationid,jdbcType=VARCHAR},
      </if>
      <if test="kssj != null">
        #{kssj,jdbcType=TIMESTAMP},
      </if>
      <if test="jssj != null">
        #{jssj,jdbcType=TIMESTAMP},
      </if>
      <if test="sd != null">
        #{sd,jdbcType=INTEGER},
      </if>
      <if test="rq != null">
        #{rq,jdbcType=DATE},
      </if>
      <if test="bz1 != null">
        #{bz1,jdbcType=VARCHAR},
      </if>
      <if test="bz2 != null">
        #{bz2,jdbcType=VARCHAR},
      </if>
      <if test="bz3 != null">
        #{bz3,jdbcType=VARCHAR},
      </if>
      <if test="xssx != null">
        #{xssx,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <select id="getByExample" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    tr.*,il.id Ipcseelocation_id, il.x, il.y, il.z, il.heading, il.pitch, il.roll, il.ipcid, il.scenetype, il.km_start, il.km_end,
    il.xm, il.xb,c.*
    from trainloaction tr
    left join ipcseelocation il on il.id=tr.ipclocationid
    left join  camera c on il.ipcid=c.device_id
    <where>
      <if test="id != null">
        and tr.id = #{id,jdbcType=VARCHAR}
      </if>
      <if test="trainid != null">
       and tr.trainid = #{trainid,jdbcType=VARCHAR}
      </if>
      <if test="trainname != null">
        and tr.trainname like  concat('%',#{trainname,jdbcType=VARCHAR},'%')
      </if>
      <if test="ipclocationid != null">
       and  tr.ipclocationid = #{ipclocationid,jdbcType=VARCHAR}
      </if>
      <if test="kssj != null">
       and tr.kssj >= #{kssj,jdbcType=TIMESTAMP}
      </if>
      <if test="jssj != null">
       and  #{jssj,jdbcType=TIMESTAMP} >= tr.jssj
      </if>
      <if test="sd != null">
       and tr.sd = #{sd,jdbcType=INTEGER}
      </if>
      <if test="rq != null">
       and tr.rq = #{rq,jdbcType=DATE}
      </if>
      <if test="bz1 != null">
      and tr.bz1 =  #{bz1,jdbcType=VARCHAR}
      </if>
      <if test="bz2 != null">
        and tr.bz2 = #{bz2,jdbcType=VARCHAR}
      </if>
      <if test="bz3 != null">
        and tr.bz3 = #{bz3,jdbcType=VARCHAR}
      </if>
      <if test="xssx != null">
        and tr.xssx  =  #{xssx,jdbcType=INTEGER}
      </if>
    </where>
    order by tr.xssx
  </select>
</mapper>