2020-11-16 14:46:47.866 [background-preinit] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:578] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2020-11-16 14:46:47.879 [background-preinit] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2020-11-16 14:46:47.879 [background-preinit] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2020-11-16 14:46:47.880 [background-preinit] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2020-11-16 14:46:47.880 [background-preinit] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2020-11-16 14:46:47.919 [main] DEBUG [org.springframework.boot.context.logging.ClasspathLoggingApplicationListener:51] - Application started with classpath: [file:/D:/tools/java/jdk-64/jre/lib/charsets.jar, file:/D:/tools/java/jdk-64/jre/lib/deploy.jar, file:/D:/tools/java/jdk-64/jre/lib/ext/access-bridge-64.jar, file:/D:/tools/java/jdk-64/jre/lib/ext/cldrdata.jar, file:/D:/tools/java/jdk-64/jre/lib/ext/dnsns.jar, file:/D:/tools/java/jdk-64/jre/lib/ext/jaccess.jar, file:/D:/tools/java/jdk-64/jre/lib/ext/jfxrt.jar, file:/D:/tools/java/jdk-64/jre/lib/ext/localedata.jar, file:/D:/tools/java/jdk-64/jre/lib/ext/nashorn.jar, file:/D:/tools/java/jdk-64/jre/lib/ext/sunec.jar, file:/D:/tools/java/jdk-64/jre/lib/ext/sunjce_provider.jar, file:/D:/tools/java/jdk-64/jre/lib/ext/sunmscapi.jar, file:/D:/tools/java/jdk-64/jre/lib/ext/sunpkcs11.jar, file:/D:/tools/java/jdk-64/jre/lib/ext/zipfs.jar, file:/D:/tools/java/jdk-64/jre/lib/javaws.jar, file:/D:/tools/java/jdk-64/jre/lib/jce.jar, file:/D:/tools/java/jdk-64/jre/lib/jfr.jar, file:/D:/tools/java/jdk-64/jre/lib/jfxswt.jar, file:/D:/tools/java/jdk-64/jre/lib/jsse.jar, file:/D:/tools/java/jdk-64/jre/lib/management-agent.jar, file:/D:/tools/java/jdk-64/jre/lib/plugin.jar, file:/D:/tools/java/jdk-64/jre/lib/resources.jar, file:/D:/tools/java/jdk-64/jre/lib/rt.jar, file:/D:/workspace/bigWorkspace/big/target/classes/, file:/D:/bigRepository/org/springframework/boot/spring-boot-starter-web/2.2.6.RELEASE/spring-boot-starter-web-2.2.6.RELEASE.jar, file:/D:/bigRepository/org/springframework/boot/spring-boot-starter/2.2.6.RELEASE/spring-boot-starter-2.2.6.RELEASE.jar, file:/D:/bigRepository/org/springframework/boot/spring-boot/2.2.6.RELEASE/spring-boot-2.2.6.RELEASE.jar, file:/D:/bigRepository/org/springframework/boot/spring-boot-autoconfigure/2.2.6.RELEASE/spring-boot-autoconfigure-2.2.6.RELEASE.jar, file:/D:/bigRepository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar, file:/D:/bigRepository/org/springframework/spring-core/5.2.5.RELEASE/spring-core-5.2.5.RELEASE.jar, file:/D:/bigRepository/org/springframework/spring-jcl/5.2.5.RELEASE/spring-jcl-5.2.5.RELEASE.jar, file:/D:/bigRepository/org/yaml/snakeyaml/1.25/snakeyaml-1.25.jar, file:/D:/bigRepository/org/springframework/boot/spring-boot-starter-json/2.2.6.RELEASE/spring-boot-starter-json-2.2.6.RELEASE.jar, file:/D:/bigRepository/com/fasterxml/jackson/core/jackson-databind/2.10.3/jackson-databind-2.10.3.jar, file:/D:/bigRepository/com/fasterxml/jackson/core/jackson-annotations/2.10.3/jackson-annotations-2.10.3.jar, file:/D:/bigRepository/com/fasterxml/jackson/core/jackson-core/2.10.3/jackson-core-2.10.3.jar, file:/D:/bigRepository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.10.3/jackson-datatype-jdk8-2.10.3.jar, file:/D:/bigRepository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.10.3/jackson-datatype-jsr310-2.10.3.jar, file:/D:/bigRepository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.10.3/jackson-module-parameter-names-2.10.3.jar, file:/D:/bigRepository/org/springframework/boot/spring-boot-starter-tomcat/2.2.6.RELEASE/spring-boot-starter-tomcat-2.2.6.RELEASE.jar, file:/D:/bigRepository/org/apache/tomcat/embed/tomcat-embed-core/9.0.33/tomcat-embed-core-9.0.33.jar, file:/D:/bigRepository/org/apache/tomcat/embed/tomcat-embed-el/9.0.33/tomcat-embed-el-9.0.33.jar, file:/D:/bigRepository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.33/tomcat-embed-websocket-9.0.33.jar, file:/D:/bigRepository/org/springframework/boot/spring-boot-starter-validation/2.2.6.RELEASE/spring-boot-starter-validation-2.2.6.RELEASE.jar, file:/D:/bigRepository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, file:/D:/bigRepository/org/hibernate/validator/hibernate-validator/6.0.18.Final/hibernate-validator-6.0.18.Final.jar, file:/D:/bigRepository/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final.jar, file:/D:/bigRepository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar, file:/D:/bigRepository/org/springframework/spring-web/5.2.5.RELEASE/spring-web-5.2.5.RELEASE.jar, file:/D:/bigRepository/org/springframework/spring-beans/5.2.5.RELEASE/spring-beans-5.2.5.RELEASE.jar, file:/D:/bigRepository/org/springframework/spring-webmvc/5.2.5.RELEASE/spring-webmvc-5.2.5.RELEASE.jar, file:/D:/bigRepository/org/springframework/spring-aop/5.2.5.RELEASE/spring-aop-5.2.5.RELEASE.jar, file:/D:/bigRepository/org/springframework/spring-context/5.2.5.RELEASE/spring-context-5.2.5.RELEASE.jar, file:/D:/bigRepository/org/springframework/spring-expression/5.2.5.RELEASE/spring-expression-5.2.5.RELEASE.jar, file:/D:/bigRepository/org/springframework/boot/spring-boot-starter-log4j2/2.2.6.RELEASE/spring-boot-starter-log4j2-2.2.6.RELEASE.jar, file:/D:/bigRepository/org/apache/logging/log4j/log4j-slf4j-impl/2.12.1/log4j-slf4j-impl-2.12.1.jar, file:/D:/bigRepository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar, file:/D:/bigRepository/org/apache/logging/log4j/log4j-api/2.12.1/log4j-api-2.12.1.jar, file:/D:/bigRepository/org/apache/logging/log4j/log4j-core/2.12.1/log4j-core-2.12.1.jar, file:/D:/bigRepository/org/apache/logging/log4j/log4j-jul/2.12.1/log4j-jul-2.12.1.jar, file:/D:/bigRepository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar, file:/D:/bigRepository/org/mybatis/spring/boot/mybatis-spring-boot-starter/2.1.2/mybatis-spring-boot-starter-2.1.2.jar, file:/D:/bigRepository/org/springframework/boot/spring-boot-starter-jdbc/2.2.6.RELEASE/spring-boot-starter-jdbc-2.2.6.RELEASE.jar, file:/D:/bigRepository/com/zaxxer/HikariCP/3.4.2/HikariCP-3.4.2.jar, file:/D:/bigRepository/org/springframework/spring-jdbc/5.2.5.RELEASE/spring-jdbc-5.2.5.RELEASE.jar, file:/D:/bigRepository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/2.1.2/mybatis-spring-boot-autoconfigure-2.1.2.jar, file:/D:/bigRepository/org/mybatis/mybatis/3.5.4/mybatis-3.5.4.jar, file:/D:/bigRepository/org/mybatis/mybatis-spring/2.0.4/mybatis-spring-2.0.4.jar, file:/D:/bigRepository/mysql/mysql-connector-java/8.0.19/mysql-connector-java-8.0.19.jar, file:/D:/bigRepository/com/github/pagehelper/pagehelper-spring-boot-starter/1.2.5/pagehelper-spring-boot-starter-1.2.5.jar, file:/D:/bigRepository/com/github/pagehelper/pagehelper-spring-boot-autoconfigure/1.2.5/pagehelper-spring-boot-autoconfigure-1.2.5.jar, file:/D:/bigRepository/com/github/pagehelper/pagehelper/5.1.4/pagehelper-5.1.4.jar, file:/D:/bigRepository/com/github/jsqlparser/jsqlparser/1.0/jsqlparser-1.0.jar, file:/D:/bigRepository/tk/mybatis/mapper-spring-boot-starter/2.0.2/mapper-spring-boot-starter-2.0.2.jar, file:/D:/bigRepository/tk/mybatis/mapper-core/1.0.2/mapper-core-1.0.2.jar, file:/D:/bigRepository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar, file:/D:/bigRepository/tk/mybatis/mapper-base/1.0.1/mapper-base-1.0.1.jar, file:/D:/bigRepository/tk/mybatis/mapper-weekend/1.1.3/mapper-weekend-1.1.3.jar, file:/D:/bigRepository/tk/mybatis/mapper-spring/1.0.1/mapper-spring-1.0.1.jar, file:/D:/bigRepository/tk/mybatis/mapper-extra/1.0.1/mapper-extra-1.0.1.jar, file:/D:/bigRepository/tk/mybatis/mapper-spring-boot-autoconfigure/2.0.2/mapper-spring-boot-autoconfigure-2.0.2.jar, file:/D:/bigRepository/org/mybatis/generator/mybatis-generator-core/1.3.7/mybatis-generator-core-1.3.7.jar, file:/D:/bigRepository/org/apache/httpcomponents/httpclient/4.5.12/httpclient-4.5.12.jar, file:/D:/bigRepository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar, file:/D:/bigRepository/commons-codec/commons-codec/1.13/commons-codec-1.13.jar, file:/D:/bigRepository/org/apache/httpcomponents/httpmime/4.5.12/httpmime-4.5.12.jar, file:/D:/bigRepository/com/alibaba/fastjson/1.2.62/fastjson-1.2.62.jar, file:/D:/bigRepository/org/apache/cxf/cxf-spring-boot-starter-jaxws/3.2.4/cxf-spring-boot-starter-jaxws-3.2.4.jar, file:/D:/bigRepository/org/apache/cxf/cxf-spring-boot-autoconfigure/3.2.4/cxf-spring-boot-autoconfigure-3.2.4.jar, file:/D:/bigRepository/org/apache/cxf/cxf-rt-transports-http/3.2.4/cxf-rt-transports-http-3.2.4.jar, file:/D:/bigRepository/org/apache/cxf/cxf-core/3.2.4/cxf-core-3.2.4.jar, file:/D:/bigRepository/com/fasterxml/woodstox/woodstox-core/5.0.3/woodstox-core-5.0.3.jar, file:/D:/bigRepository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar, file:/D:/bigRepository/org/apache/ws/xmlschema/xmlschema-core/2.2.3/xmlschema-core-2.2.3.jar, file:/D:/bigRepository/org/apache/cxf/cxf-rt-frontend-jaxws/3.2.4/cxf-rt-frontend-jaxws-3.2.4.jar, file:/D:/bigRepository/xml-resolver/xml-resolver/1.2/xml-resolver-1.2.jar, file:/D:/bigRepository/org/ow2/asm/asm/5.2/asm-5.2.jar, file:/D:/bigRepository/org/apache/cxf/cxf-rt-bindings-soap/3.2.4/cxf-rt-bindings-soap-3.2.4.jar, file:/D:/bigRepository/org/apache/cxf/cxf-rt-wsdl/3.2.4/cxf-rt-wsdl-3.2.4.jar, file:/D:/bigRepository/wsdl4j/wsdl4j/1.6.3/wsdl4j-1.6.3.jar, file:/D:/bigRepository/org/apache/cxf/cxf-rt-databinding-jaxb/3.2.4/cxf-rt-databinding-jaxb-3.2.4.jar, file:/D:/bigRepository/org/apache/cxf/cxf-rt-bindings-xml/3.2.4/cxf-rt-bindings-xml-3.2.4.jar, file:/D:/bigRepository/org/apache/cxf/cxf-rt-frontend-simple/3.2.4/cxf-rt-frontend-simple-3.2.4.jar, file:/D:/bigRepository/org/apache/cxf/cxf-rt-ws-addr/3.2.4/cxf-rt-ws-addr-3.2.4.jar, file:/D:/bigRepository/org/apache/cxf/cxf-rt-ws-policy/3.2.4/cxf-rt-ws-policy-3.2.4.jar, file:/D:/bigRepository/org/apache/neethi/neethi/3.1.1/neethi-3.1.1.jar, file:/D:/bigRepository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar, file:/D:/bigRepository/org/apache/axis/axis/1.4/axis-1.4.jar, file:/D:/bigRepository/commons-discovery/commons-discovery/0.2/commons-discovery-0.2.jar, file:/D:/bigRepository/org/apache/axis/axis-jaxrpc/1.4/axis-jaxrpc-1.4.jar, file:/D:/bigRepository/org/apache/axis/axis-saaj/1.4/axis-saaj-1.4.jar, file:/D:/bigRepository/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar, file:/D:/bigRepository/io/netty/netty-all/4.1.48.Final/netty-all-4.1.48.Final.jar, file:/D:/bigRepository/org/springframework/boot/spring-boot-starter-freemarker/2.2.6.RELEASE/spring-boot-starter-freemarker-2.2.6.RELEASE.jar, file:/D:/bigRepository/org/freemarker/freemarker/2.3.30/freemarker-2.3.30.jar, file:/D:/bigRepository/org/springframework/spring-context-support/5.2.5.RELEASE/spring-context-support-5.2.5.RELEASE.jar, file:/D:/bigRepository/org/springframework/boot/spring-boot-starter-amqp/2.2.6.RELEASE/spring-boot-starter-amqp-2.2.6.RELEASE.jar, file:/D:/bigRepository/org/springframework/spring-messaging/5.2.5.RELEASE/spring-messaging-5.2.5.RELEASE.jar, file:/D:/bigRepository/org/springframework/amqp/spring-rabbit/2.2.5.RELEASE/spring-rabbit-2.2.5.RELEASE.jar, file:/D:/bigRepository/com/rabbitmq/amqp-client/5.7.3/amqp-client-5.7.3.jar, file:/D:/bigRepository/org/springframework/amqp/spring-amqp/2.2.5.RELEASE/spring-amqp-2.2.5.RELEASE.jar, file:/D:/bigRepository/org/springframework/retry/spring-retry/1.2.5.RELEASE/spring-retry-1.2.5.RELEASE.jar, file:/D:/bigRepository/org/springframework/spring-tx/5.2.5.RELEASE/spring-tx-5.2.5.RELEASE.jar, file:/D:/bigRepository/org/projectlombok/lombok/1.18.12/lombok-1.18.12.jar, file:/D:/bigRepository/org/jdom/jdom/2.0.2/jdom-2.0.2.jar, file:/D:/bigRepository/commons-io/commons-io/2.4/commons-io-2.4.jar, file:/D:/Program%20Files/JetBrains/IntelliJ%20IDEA%202020.1.3/lib/idea_rt.jar, file:/C:/Users/61471/AppData/Local/JetBrains/IntelliJIdea2020.1/captureAgent/debugger-agent.jar]
2020-11-16 14:46:48.022 [main] INFO  [com.data.big.MuApplication:55] - Starting MuApplication on DESKTOP-C33QPBF with PID 7776 (D:\workspace\bigWorkspace\big\target\classes started by 61471 in D:\workspace\bigWorkspace\big)
2020-11-16 14:46:48.025 [main] DEBUG [com.data.big.MuApplication:56] - Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2020-11-16 14:46:48.025 [main] INFO  [com.data.big.MuApplication:655] - The following profiles are active: dev
2020-11-16 14:46:48.025 [main] DEBUG [org.springframework.boot.SpringApplication:679] - Loading source class com.data.big.MuApplication
2020-11-16 14:46:48.070 [main] DEBUG [org.springframework.boot.context.config.ConfigFileApplicationListener:222] - Activated activeProfiles dev
2020-11-16 14:46:48.070 [main] DEBUG [org.springframework.boot.context.config.ConfigFileApplicationListener:222] - Loaded config file 'file:/D:/workspace/bigWorkspace/big/target/classes/application.yml' (classpath:/application.yml)
2020-11-16 14:46:48.071 [main] DEBUG [org.springframework.boot.context.config.ConfigFileApplicationListener:222] - Loaded config file 'file:/D:/workspace/bigWorkspace/big/target/classes/application-dev.yml' (classpath:/application-dev.yml) for profile dev
2020-11-16 14:46:48.072 [main] DEBUG [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:595] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b1bb3ab
2020-11-16 14:46:48.618 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\AlarmMapper.class]
2020-11-16 14:46:48.618 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\AnBao3Mapper.class]
2020-11-16 14:46:48.619 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\CameraMapper.class]
2020-11-16 14:46:48.619 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\CameraalarmMapper.class]
2020-11-16 14:46:48.619 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\CamerainfoMapper.class]
2020-11-16 14:46:48.619 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\CamerastatusMapper.class]
2020-11-16 14:46:48.619 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\DictionaryMapper.class]
2020-11-16 14:46:48.619 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\DiskalarmMapper.class]
2020-11-16 14:46:48.620 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\DiskinfoMapper.class]
2020-11-16 14:46:48.620 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\DiskstatusMapper.class]
2020-11-16 14:46:48.620 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\ForeignBodyAlarmMapper.class]
2020-11-16 14:46:48.620 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\HcsjMapper.class]
2020-11-16 14:46:48.621 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\IpcTagMapper.class]
2020-11-16 14:46:48.621 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\IvsalarmMapper.class]
2020-11-16 14:46:48.621 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\LogRestMapper.class]
2020-11-16 14:46:48.621 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\MethodTypeMapper.class]
2020-11-16 14:46:48.622 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\ModularMapper.class]
2020-11-16 14:46:48.622 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\NewForeignBodyAlarmMapper.class]
2020-11-16 14:46:48.622 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\NewRainAlarmMapper.class]
2020-11-16 14:46:48.622 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\NewSnowAlarmMapper.class]
2020-11-16 14:46:48.622 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\NewWindSpeedAlarmMapper.class]
2020-11-16 14:46:48.622 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\NodeinfoMapper.class]
2020-11-16 14:46:48.623 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\QueryTaskMapper.class]
2020-11-16 14:46:48.623 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\RainAlarmMapper.class]
2020-11-16 14:46:48.623 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\RoleMapper.class]
2020-11-16 14:46:48.623 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\SensorStatusAlarmMapper.class]
2020-11-16 14:46:48.623 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\ServeralarmMapper.class]
2020-11-16 14:46:48.623 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\ServerinfoMapper.class]
2020-11-16 14:46:48.624 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\ServerstatusMapper.class]
2020-11-16 14:46:48.624 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\SgjhMapper.class]
2020-11-16 14:46:48.624 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\SnowAlarmMapper.class]
2020-11-16 14:46:48.624 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\SwitchalarmMapper.class]
2020-11-16 14:46:48.624 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\SwitchinfoMapper.class]
2020-11-16 14:46:48.625 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\SwitchstatusMapper.class]
2020-11-16 14:46:48.625 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\TokenMapper.class]
2020-11-16 14:46:48.625 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\TravelMapper.class]
2020-11-16 14:46:48.625 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\UnitEquipmentAlarmMapper.class]
2020-11-16 14:46:48.625 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\UserMapper.class]
2020-11-16 14:46:48.625 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\VideoFileMapper.class]
2020-11-16 14:46:48.626 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\VideoKilometerMapper.class]
2020-11-16 14:46:48.626 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\VideoTagMapper.class]
2020-11-16 14:46:48.626 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\WindSpeedAlarmMapper.class]
2020-11-16 14:46:48.627 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\WxjhMapper.class]
2020-11-16 14:46:48.628 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'alarmMapper' and 'com.data.big.mapper.AlarmMapper' mapperInterface
2020-11-16 14:46:48.628 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'alarmMapper'.
2020-11-16 14:46:48.628 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'anBao3Mapper' and 'com.data.big.mapper.AnBao3Mapper' mapperInterface
2020-11-16 14:46:48.628 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'anBao3Mapper'.
2020-11-16 14:46:48.628 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'cameraMapper' and 'com.data.big.mapper.CameraMapper' mapperInterface
2020-11-16 14:46:48.628 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'cameraMapper'.
2020-11-16 14:46:48.628 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'cameraalarmMapper' and 'com.data.big.mapper.CameraalarmMapper' mapperInterface
2020-11-16 14:46:48.628 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'cameraalarmMapper'.
2020-11-16 14:46:48.629 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'camerainfoMapper' and 'com.data.big.mapper.CamerainfoMapper' mapperInterface
2020-11-16 14:46:48.629 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'camerainfoMapper'.
2020-11-16 14:46:48.629 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'camerastatusMapper' and 'com.data.big.mapper.CamerastatusMapper' mapperInterface
2020-11-16 14:46:48.629 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'camerastatusMapper'.
2020-11-16 14:46:48.629 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'dictionaryMapper' and 'com.data.big.mapper.DictionaryMapper' mapperInterface
2020-11-16 14:46:48.629 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'dictionaryMapper'.
2020-11-16 14:46:48.629 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'diskalarmMapper' and 'com.data.big.mapper.DiskalarmMapper' mapperInterface
2020-11-16 14:46:48.629 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'diskalarmMapper'.
2020-11-16 14:46:48.629 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'diskinfoMapper' and 'com.data.big.mapper.DiskinfoMapper' mapperInterface
2020-11-16 14:46:48.629 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'diskinfoMapper'.
2020-11-16 14:46:48.629 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'diskstatusMapper' and 'com.data.big.mapper.DiskstatusMapper' mapperInterface
2020-11-16 14:46:48.629 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'diskstatusMapper'.
2020-11-16 14:46:48.629 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'foreignBodyAlarmMapper' and 'com.data.big.mapper.ForeignBodyAlarmMapper' mapperInterface
2020-11-16 14:46:48.630 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'foreignBodyAlarmMapper'.
2020-11-16 14:46:48.630 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'hcsjMapper' and 'com.data.big.mapper.HcsjMapper' mapperInterface
2020-11-16 14:46:48.630 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'hcsjMapper'.
2020-11-16 14:46:48.630 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'ipcTagMapper' and 'com.data.big.mapper.IpcTagMapper' mapperInterface
2020-11-16 14:46:48.630 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'ipcTagMapper'.
2020-11-16 14:46:48.630 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'ivsalarmMapper' and 'com.data.big.mapper.IvsalarmMapper' mapperInterface
2020-11-16 14:46:48.630 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'ivsalarmMapper'.
2020-11-16 14:46:48.630 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'logRestMapper' and 'com.data.big.mapper.LogRestMapper' mapperInterface
2020-11-16 14:46:48.630 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'logRestMapper'.
2020-11-16 14:46:48.630 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'methodTypeMapper' and 'com.data.big.mapper.MethodTypeMapper' mapperInterface
2020-11-16 14:46:48.630 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'methodTypeMapper'.
2020-11-16 14:46:48.630 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'modularMapper' and 'com.data.big.mapper.ModularMapper' mapperInterface
2020-11-16 14:46:48.631 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'modularMapper'.
2020-11-16 14:46:48.631 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'newForeignBodyAlarmMapper' and 'com.data.big.mapper.NewForeignBodyAlarmMapper' mapperInterface
2020-11-16 14:46:48.631 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'newForeignBodyAlarmMapper'.
2020-11-16 14:46:48.631 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'newRainAlarmMapper' and 'com.data.big.mapper.NewRainAlarmMapper' mapperInterface
2020-11-16 14:46:48.631 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'newRainAlarmMapper'.
2020-11-16 14:46:48.631 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'newSnowAlarmMapper' and 'com.data.big.mapper.NewSnowAlarmMapper' mapperInterface
2020-11-16 14:46:48.631 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'newSnowAlarmMapper'.
2020-11-16 14:46:48.631 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'newWindSpeedAlarmMapper' and 'com.data.big.mapper.NewWindSpeedAlarmMapper' mapperInterface
2020-11-16 14:46:48.631 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'newWindSpeedAlarmMapper'.
2020-11-16 14:46:48.631 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'nodeinfoMapper' and 'com.data.big.mapper.NodeinfoMapper' mapperInterface
2020-11-16 14:46:48.631 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'nodeinfoMapper'.
2020-11-16 14:46:48.631 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'queryTaskMapper' and 'com.data.big.mapper.QueryTaskMapper' mapperInterface
2020-11-16 14:46:48.631 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'queryTaskMapper'.
2020-11-16 14:46:48.632 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'rainAlarmMapper' and 'com.data.big.mapper.RainAlarmMapper' mapperInterface
2020-11-16 14:46:48.632 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'rainAlarmMapper'.
2020-11-16 14:46:48.632 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'roleMapper' and 'com.data.big.mapper.RoleMapper' mapperInterface
2020-11-16 14:46:48.632 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'roleMapper'.
2020-11-16 14:46:48.632 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'sensorStatusAlarmMapper' and 'com.data.big.mapper.SensorStatusAlarmMapper' mapperInterface
2020-11-16 14:46:48.632 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'sensorStatusAlarmMapper'.
2020-11-16 14:46:48.632 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'serveralarmMapper' and 'com.data.big.mapper.ServeralarmMapper' mapperInterface
2020-11-16 14:46:48.632 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'serveralarmMapper'.
2020-11-16 14:46:48.632 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'serverinfoMapper' and 'com.data.big.mapper.ServerinfoMapper' mapperInterface
2020-11-16 14:46:48.632 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'serverinfoMapper'.
2020-11-16 14:46:48.632 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'serverstatusMapper' and 'com.data.big.mapper.ServerstatusMapper' mapperInterface
2020-11-16 14:46:48.632 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'serverstatusMapper'.
2020-11-16 14:46:48.633 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'sgjhMapper' and 'com.data.big.mapper.SgjhMapper' mapperInterface
2020-11-16 14:46:48.633 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'sgjhMapper'.
2020-11-16 14:46:48.633 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'snowAlarmMapper' and 'com.data.big.mapper.SnowAlarmMapper' mapperInterface
2020-11-16 14:46:48.633 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'snowAlarmMapper'.
2020-11-16 14:46:48.633 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'switchalarmMapper' and 'com.data.big.mapper.SwitchalarmMapper' mapperInterface
2020-11-16 14:46:48.633 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'switchalarmMapper'.
2020-11-16 14:46:48.633 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'switchinfoMapper' and 'com.data.big.mapper.SwitchinfoMapper' mapperInterface
2020-11-16 14:46:48.633 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'switchinfoMapper'.
2020-11-16 14:46:48.634 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'switchstatusMapper' and 'com.data.big.mapper.SwitchstatusMapper' mapperInterface
2020-11-16 14:46:48.634 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'switchstatusMapper'.
2020-11-16 14:46:48.634 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'tokenMapper' and 'com.data.big.mapper.TokenMapper' mapperInterface
2020-11-16 14:46:48.634 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'tokenMapper'.
2020-11-16 14:46:48.634 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'travelMapper' and 'com.data.big.mapper.TravelMapper' mapperInterface
2020-11-16 14:46:48.634 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'travelMapper'.
2020-11-16 14:46:48.634 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'unitEquipmentAlarmMapper' and 'com.data.big.mapper.UnitEquipmentAlarmMapper' mapperInterface
2020-11-16 14:46:48.634 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'unitEquipmentAlarmMapper'.
2020-11-16 14:46:48.634 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'userMapper' and 'com.data.big.mapper.UserMapper' mapperInterface
2020-11-16 14:46:48.634 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2020-11-16 14:46:48.634 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'videoFileMapper' and 'com.data.big.mapper.VideoFileMapper' mapperInterface
2020-11-16 14:46:48.634 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'videoFileMapper'.
2020-11-16 14:46:48.634 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'videoKilometerMapper' and 'com.data.big.mapper.VideoKilometerMapper' mapperInterface
2020-11-16 14:46:48.635 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'videoKilometerMapper'.
2020-11-16 14:46:48.635 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'videoTagMapper' and 'com.data.big.mapper.VideoTagMapper' mapperInterface
2020-11-16 14:46:48.635 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'videoTagMapper'.
2020-11-16 14:46:48.635 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'windSpeedAlarmMapper' and 'com.data.big.mapper.WindSpeedAlarmMapper' mapperInterface
2020-11-16 14:46:48.635 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'windSpeedAlarmMapper'.
2020-11-16 14:46:48.635 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:156] - Creating MapperFactoryBean with name 'wxjhMapper' and 'com.data.big.mapper.WxjhMapper' mapperInterface
2020-11-16 14:46:48.635 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:202] - Enabling autowire by type for MapperFactoryBean with name 'wxjhMapper'.
2020-11-16 14:46:48.712 [main] DEBUG [tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration:188] - Searching for mappers annotated with @Mapper
2020-11-16 14:46:48.721 [main] DEBUG [tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration:200] - Using auto-configuration base package 'com.data.big'
2020-11-16 14:46:48.735 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\AlarmMapper.class]
2020-11-16 14:46:48.735 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\AnBao3Mapper.class]
2020-11-16 14:46:48.736 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\CameraalarmMapper.class]
2020-11-16 14:46:48.736 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\CamerastatusMapper.class]
2020-11-16 14:46:48.736 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\DiskalarmMapper.class]
2020-11-16 14:46:48.736 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\DiskinfoMapper.class]
2020-11-16 14:46:48.736 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\DiskstatusMapper.class]
2020-11-16 14:46:48.737 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\ForeignBodyAlarmMapper.class]
2020-11-16 14:46:48.737 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\IvsalarmMapper.class]
2020-11-16 14:46:48.737 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\LogRestMapper.class]
2020-11-16 14:46:48.737 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\NodeinfoMapper.class]
2020-11-16 14:46:48.738 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\QueryTaskMapper.class]
2020-11-16 14:46:48.738 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\RainAlarmMapper.class]
2020-11-16 14:46:48.738 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\SensorStatusAlarmMapper.class]
2020-11-16 14:46:48.738 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\ServeralarmMapper.class]
2020-11-16 14:46:48.738 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\ServerinfoMapper.class]
2020-11-16 14:46:48.738 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\ServerstatusMapper.class]
2020-11-16 14:46:48.738 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\SnowAlarmMapper.class]
2020-11-16 14:46:48.739 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\SwitchalarmMapper.class]
2020-11-16 14:46:48.739 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\SwitchinfoMapper.class]
2020-11-16 14:46:48.739 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\SwitchstatusMapper.class]
2020-11-16 14:46:48.739 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\UnitEquipmentAlarmMapper.class]
2020-11-16 14:46:48.739 [main] DEBUG [tk.mybatis.spring.mapper.ClassPathMapperScanner:435] - Identified candidate component class: file [D:\workspace\bigWorkspace\big\target\classes\com\data\big\mapper\WindSpeedAlarmMapper.class]
2020-11-16 14:46:48.926 [main] DEBUG [org.apache.ibatis.logging.LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2020-11-16 14:46:49.190 [main] DEBUG [org.springframework.ui.context.support.UiApplicationContextUtils:85] - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@f9f3928]
2020-11-16 14:46:49.432 [main] DEBUG [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory:81] - Code archive: D:\bigRepository\org\springframework\boot\spring-boot\2.2.6.RELEASE\spring-boot-2.2.6.RELEASE.jar
2020-11-16 14:46:49.432 [main] DEBUG [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory:125] - Code archive: D:\bigRepository\org\springframework\boot\spring-boot\2.2.6.RELEASE\spring-boot-2.2.6.RELEASE.jar
2020-11-16 14:46:49.432 [main] DEBUG [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory:149] - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2020-11-16 14:46:49.467 [main] INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer:92] - Tomcat initialized with port(s): 10001 (http)
2020-11-16 14:46:49.476 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-10001"]
2020-11-16 14:46:49.477 [main] INFO  [org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-11-16 14:46:49.478 [main] INFO  [org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-11-16 14:46:49.568 [main] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:173] - Initializing Spring embedded WebApplicationContext
2020-11-16 14:46:49.574 [main] DEBUG [org.hibernate.validator.internal.engine.resolver.TraversableResolvers:70] - Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2020-11-16 14:46:49.575 [main] DEBUG [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator:89] - Loaded expression factory via original TCCL
2020-11-16 14:46:49.575 [main] DEBUG [org.hibernate.validator.internal.engine.resolver.TraversableResolvers:70] - Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2020-11-16 14:46:49.576 [main] DEBUG [org.hibernate.validator.internal.engine.ConfigurationImpl:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2020-11-16 14:46:49.577 [main] DEBUG [org.hibernate.validator.internal.engine.ConfigurationImpl:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2020-11-16 14:46:49.577 [main] DEBUG [org.hibernate.validator.internal.engine.ConfigurationImpl:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2020-11-16 14:46:49.578 [main] DEBUG [org.hibernate.validator.internal.xml.config.ValidationXmlParser:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2020-11-16 14:46:49.578 [main] DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper:53] - Trying to load META-INF/validation.xml via user class loader
2020-11-16 14:46:49.579 [main] DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper:60] - Trying to load META-INF/validation.xml via TCCL
2020-11-16 14:46:49.579 [main] DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2020-11-16 14:46:49.580 [main] DEBUG [org.hibernate.validator.internal.xml.config.ValidationXmlParser:127] - No META-INF/validation.xml found. Using annotation based configuration only.
2020-11-16 14:46:49.585 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2020-11-16 14:46:49.585 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2020-11-16 14:46:49.585 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2020-11-16 14:46:49.586 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2020-11-16 14:46:49.586 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2020-11-16 14:46:49.733 [main] DEBUG [org.hibernate.validator.internal.engine.resolver.TraversableResolvers:70] - Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2020-11-16 14:46:49.733 [main] DEBUG [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator:89] - Loaded expression factory via original TCCL
2020-11-16 14:46:49.735 [main] DEBUG [org.hibernate.validator.internal.engine.resolver.TraversableResolvers:70] - Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2020-11-16 14:46:49.735 [main] DEBUG [org.hibernate.validator.internal.engine.ConfigurationImpl:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2020-11-16 14:46:49.735 [main] DEBUG [org.hibernate.validator.internal.engine.ConfigurationImpl:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2020-11-16 14:46:49.735 [main] DEBUG [org.hibernate.validator.internal.engine.ConfigurationImpl:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2020-11-16 14:46:49.735 [main] DEBUG [org.hibernate.validator.internal.xml.config.ValidationXmlParser:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2020-11-16 14:46:49.736 [main] DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper:53] - Trying to load META-INF/validation.xml via user class loader
2020-11-16 14:46:49.736 [main] DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper:60] - Trying to load META-INF/validation.xml via TCCL
2020-11-16 14:46:49.736 [main] DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2020-11-16 14:46:49.736 [main] DEBUG [org.hibernate.validator.internal.xml.config.ValidationXmlParser:127] - No META-INF/validation.xml found. Using annotation based configuration only.
2020-11-16 14:46:49.743 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2020-11-16 14:46:49.743 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2020-11-16 14:46:49.743 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2020-11-16 14:46:49.743 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2020-11-16 14:46:49.743 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2020-11-16 14:46:49.840 [main] DEBUG [org.springframework.boot.web.servlet.ServletContextInitializerBeans:235] - Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648
2020-11-16 14:46:49.840 [main] DEBUG [org.springframework.boot.web.servlet.ServletContextInitializerBeans:235] - Mapping servlets: dispatcherServlet urls=[/], CXFServlet urls=[/services/*]
2020-11-16 14:46:49.860 [main] DEBUG [org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter:242] - Filter 'characterEncodingFilter' configured for use
2020-11-16 14:46:49.908 [main] DEBUG [com.zaxxer.hikari.HikariConfig:900] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
2020-11-16 14:46:52.235 [main] DEBUG [org.hibernate.validator.internal.engine.resolver.TraversableResolvers:70] - Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2020-11-16 14:46:52.235 [main] DEBUG [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator:89] - Loaded expression factory via original TCCL
2020-11-16 14:46:52.235 [main] DEBUG [org.hibernate.validator.internal.engine.ConfigurationImpl:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2020-11-16 14:46:52.236 [main] DEBUG [org.hibernate.validator.internal.engine.ConfigurationImpl:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2020-11-16 14:46:52.236 [main] DEBUG [org.hibernate.validator.internal.engine.ConfigurationImpl:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2020-11-16 14:46:52.236 [main] DEBUG [org.hibernate.validator.internal.xml.config.ValidationXmlParser:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2020-11-16 14:46:52.236 [main] DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper:53] - Trying to load META-INF/validation.xml via user class loader
2020-11-16 14:46:52.236 [main] DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper:60] - Trying to load META-INF/validation.xml via TCCL
2020-11-16 14:46:52.236 [main] DEBUG [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2020-11-16 14:46:52.237 [main] DEBUG [org.hibernate.validator.internal.xml.config.ValidationXmlParser:127] - No META-INF/validation.xml found. Using annotation based configuration only.
2020-11-16 14:46:52.240 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2020-11-16 14:46:52.240 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2020-11-16 14:46:52.240 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2020-11-16 14:46:52.240 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2020-11-16 14:46:52.240 [main] DEBUG [org.hibernate.validator.internal.engine.ValidatorFactoryImpl:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2020-11-16 14:46:52.293 [main] INFO  [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:181] - Initializing ExecutorService 'taskScheduler'
2020-11-16 14:46:52.422 [main] INFO  [org.apache.cxf.wsdl.service.factory.ReflectionServiceFactoryBean:437] - Creating Service {http://webService.big.data.com/}service from class com.data.big.webService.MuWebService
2020-11-16 14:46:52.722 [main] INFO  [org.apache.cxf.endpoint.ServerImpl:85] - Setting the server's publish address to be /big
2020-11-16 14:46:52.767 [main] DEBUG [tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration:243] - No org.mybatis.spring.mapper.MapperFactoryBean found.
2020-11-16 14:46:52.798 [main] DEBUG [org.springframework.jmx.support.JmxUtils:127] - Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@5dfcfece
2020-11-16 14:46:52.805 [main] DEBUG [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:131] - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2020-11-16 14:46:53.024 [main] DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter:434] - Registering beans for JMX exposure on startup
2020-11-16 14:46:53.024 [main] DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter:541] - Autodetecting user-defined JMX MBeans
2020-11-16 14:46:53.025 [main] DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter:896] - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-11-16 14:46:53.031 [main] DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter:896] - Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2020-11-16 14:46:53.032 [main] DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter:896] - Bean with name 'amqpAdmin' has been autodetected for JMX exposure
2020-11-16 14:46:53.034 [main] DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter:676] - Located managed bean 'amqpAdmin': registering with JMX server as MBean [org.springframework.amqp.rabbit.core:name=amqpAdmin,type=RabbitAdmin]
2020-11-16 14:46:53.061 [main] DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter:669] - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-11-16 14:46:53.062 [main] DEBUG [org.springframework.jmx.export.annotation.AnnotationMBeanExporter:676] - Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2020-11-16 14:46:53.092 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-10001"]
2020-11-16 14:46:53.112 [main] INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 10001 (http) with context path ''
2020-11-16 14:46:53.114 [main] INFO  [com.data.big.MuApplication:61] - Started MuApplication in 5.567 seconds (JVM running for 8.454)
2020-11-16 14:47:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 14:47:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 14:47:00.070 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:00.072 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1020] - DatebookHikariCP - configuration:
2020-11-16 14:47:00.077 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - allowPoolSuspension.............false
2020-11-16 14:47:00.078 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - autoCommit......................true
2020-11-16 14:47:00.078 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - catalog.........................none
2020-11-16 14:47:00.079 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - connectionInitSql...............none
2020-11-16 14:47:00.079 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - connectionTestQuery............."SELECT 1"
2020-11-16 14:47:00.079 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - connectionTimeout...............30000
2020-11-16 14:47:00.080 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - dataSource......................none
2020-11-16 14:47:00.080 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - dataSourceClassName.............none
2020-11-16 14:47:00.080 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - dataSourceJNDI..................none
2020-11-16 14:47:00.081 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - dataSourceProperties............{password=<masked>}
2020-11-16 14:47:00.081 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - driverClassName................."com.mysql.cj.jdbc.Driver"
2020-11-16 14:47:00.082 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - healthCheckProperties...........{}
2020-11-16 14:47:00.082 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - healthCheckRegistry.............none
2020-11-16 14:47:00.082 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - idleTimeout.....................30000
2020-11-16 14:47:00.082 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - initializationFailTimeout.......1
2020-11-16 14:47:00.083 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - isolateInternalQueries..........false
2020-11-16 14:47:00.083 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - jdbcUrl.........................jdbc:mysql://127.0.0.1:3307/video_bigdata?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=GMT%2b8&allowMultiQueries=true
2020-11-16 14:47:00.084 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - leakDetectionThreshold..........0
2020-11-16 14:47:00.084 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - maxLifetime.....................1800000
2020-11-16 14:47:00.084 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - maximumPoolSize.................15
2020-11-16 14:47:00.084 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - metricRegistry..................none
2020-11-16 14:47:00.084 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - metricsTrackerFactory...........none
2020-11-16 14:47:00.084 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - minimumIdle.....................5
2020-11-16 14:47:00.084 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - password........................<masked>
2020-11-16 14:47:00.085 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - poolName........................"DatebookHikariCP"
2020-11-16 14:47:00.085 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - readOnly........................false
2020-11-16 14:47:00.086 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - registerMbeans..................false
2020-11-16 14:47:00.091 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - scheduledExecutor...............none
2020-11-16 14:47:00.092 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - schema..........................none
2020-11-16 14:47:00.092 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - threadFactory...................internal
2020-11-16 14:47:00.092 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - transactionIsolation............default
2020-11-16 14:47:00.111 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - username........................"root"
2020-11-16 14:47:00.112 [taskScheduler-8] DEBUG [com.zaxxer.hikari.HikariConfig:1052] - validationTimeout...............5000
2020-11-16 14:47:00.112 [taskScheduler-8] INFO  [com.zaxxer.hikari.HikariDataSource:110] - DatebookHikariCP - Starting...
2020-11-16 14:47:00.566 [taskScheduler-8] DEBUG [com.zaxxer.hikari.pool.HikariPool:558] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@499cab1a
2020-11-16 14:47:00.568 [taskScheduler-8] INFO  [com.zaxxer.hikari.HikariDataSource:123] - DatebookHikariCP - Start completed.
2020-11-16 14:47:00.576 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:47:00.593 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:47:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 14:47:00.607 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:47:00.609 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 14:47:00.669 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=1, active=0, idle=1, waiting=0)
2020-11-16 14:47:00.669 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=1, active=0, idle=1, waiting=0)
2020-11-16 14:47:00.701 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@146be299
2020-11-16 14:47:00.731 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@3146913f
2020-11-16 14:47:00.757 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d477f68
2020-11-16 14:47:00.782 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@55b6cc7b
2020-11-16 14:47:00.782 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After adding stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:47:30.671 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:47:30.672 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:47:45.162 [http-nio-10001-exec-2] INFO  [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-16 14:47:45.229 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:45.230 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:45.231 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:47:45.251 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:47:45.495 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:45.495 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:45.496 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:47:45.499 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:47:45.539 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.0
2020-11-16 14:47:45.564 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:45.564 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ?)) table_count 
2020-11-16 14:47:45.565 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 3(String)
2020-11-16 14:47:45.573 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:47:49.083 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:49.085 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:49.085 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:49.087 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:47:49.088 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:49.089 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:47:49.091 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:47:49.091 [http-nio-10001-exec-6] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.5
2020-11-16 14:47:49.094 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:49.095 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ?)) table_count 
2020-11-16 14:47:49.095 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:47:49.095 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 3(String)
2020-11-16 14:47:49.097 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:47:52.396 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:52.396 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:52.398 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:52.398 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:52.398 [http-nio-10001-exec-9] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.6666666666666666
2020-11-16 14:47:52.399 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:47:52.399 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:47:52.400 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:47:52.401 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:47:52.404 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:52.404 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 14:47:52.405 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 14:47:52.406 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:47:52.423 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@305ac983
2020-11-16 14:47:54.474 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:54.475 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:54.476 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:54.476 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:54.477 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:54.478 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:47:54.478 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:47:54.480 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:54.481 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:47:54.482 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:47:54.483 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:54.483 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:54.484 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:47:54.484 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:47:54.487 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:47:54.488 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:47:54.489 [http-nio-10001-exec-2] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.5
2020-11-16 14:47:54.491 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:54.492 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 14:47:54.492 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 14:47:54.493 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 14:47:54.494 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 14:47:54.495 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 14:47:54.497 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 14:47:55.827 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:55.827 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:55.828 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.6
2020-11-16 14:47:55.829 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:55.829 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:55.830 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:55.830 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:55.835 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:47:55.835 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:47:55.836 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:55.836 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 14:47:55.836 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 14:47:55.836 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:47:55.837 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:55.840 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:55.840 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 14:47:55.840 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:47:55.840 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:47:55.841 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:47:55.841 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:47:55.842 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 14:47:55.843 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 14:47:55.845 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:47:55.845 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 14:47:57.292 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:57.294 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:57.294 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:57.294 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:47:57.295 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:57.296 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.6666666666666666
2020-11-16 14:47:57.296 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:47:57.297 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:47:57.297 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:57.298 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 14:47:57.299 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:57.299 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:47:57.299 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 14:47:57.299 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:57.299 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:47:57.300 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:47:57.300 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:47:57.300 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 14:47:57.300 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:47:57.302 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 14:47:57.302 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 14:47:57.303 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:47:57.303 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:47:57.305 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 14:48:00.000 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 14:48:00.000 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 14:48:00.002 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:00.003 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:48:00.004 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:48:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 14:48:00.008 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:48:00.008 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 14:48:00.674 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=6, active=0, idle=6, waiting=0)
2020-11-16 14:48:00.674 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=6, active=0, idle=6, waiting=0)
2020-11-16 14:48:00.868 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:00.869 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:00.869 [http-nio-10001-exec-8] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.7142857142857143
2020-11-16 14:48:00.870 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:00.870 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:48:00.870 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:00.870 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:48:00.871 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:00.872 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:00.872 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:00.873 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 14:48:00.873 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 14:48:00.875 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:48:03.618 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:03.619 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:03.620 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:48:03.620 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:03.621 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:03.621 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:03.622 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:48:03.622 [http-nio-10001-exec-10] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.75
2020-11-16 14:48:03.624 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:03.625 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:03.626 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ?)) table_count 
2020-11-16 14:48:03.626 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 3(String)
2020-11-16 14:48:03.630 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:48:06.650 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:06.650 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:06.651 [http-nio-10001-exec-2] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.7777777777777778
2020-11-16 14:48:06.651 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:06.651 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:06.652 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:48:06.652 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:48:06.653 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:06.653 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:06.654 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:06.655 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 14:48:06.656 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 14:48:06.657 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:48:07.395 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:07.397 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:07.398 [http-nio-10001-exec-5] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.8
2020-11-16 14:48:07.398 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:07.399 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:07.399 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:48:07.399 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:48:07.400 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:07.400 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:07.400 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:07.401 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ?)) table_count 
2020-11-16 14:48:07.401 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 3(String)
2020-11-16 14:48:07.402 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:48:09.652 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:09.652 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:09.653 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.8181818181818182
2020-11-16 14:48:09.654 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:09.654 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:09.654 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:48:09.654 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:48:09.655 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:09.655 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:09.656 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:09.657 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 14:48:09.657 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 14:48:09.659 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:48:13.008 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:13.008 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:13.008 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.8333333333333334
2020-11-16 14:48:13.009 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:13.009 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:13.010 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:48:13.010 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:48:13.010 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:13.011 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ?)) table_count 
2020-11-16 14:48:13.012 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:13.012 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:13.012 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 3(String)
2020-11-16 14:48:13.013 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:48:19.336 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:19.336 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:19.337 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:19.337 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:19.337 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.8461538461538461
2020-11-16 14:48:19.337 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:48:19.337 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:48:19.339 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:19.339 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:19.340 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:19.341 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 14:48:19.342 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 14:48:19.343 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:48:30.675 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=6, active=0, idle=6, waiting=0)
2020-11-16 14:48:30.677 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:48:30.678 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@305ac983: (connection has passed idleTimeout)
2020-11-16 14:48:41.386 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:41.386 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:41.386 [http-nio-10001-exec-8] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.8571428571428571
2020-11-16 14:48:41.387 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:41.387 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:41.387 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:48:41.387 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:48:41.388 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:41.389 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:41.389 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:41.389 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ?)) table_count 
2020-11-16 14:48:41.389 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 3(String)
2020-11-16 14:48:41.391 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:48:42.393 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:42.393 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:42.394 [http-nio-10001-exec-10] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.8666666666666667
2020-11-16 14:48:42.394 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:42.394 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:48:42.394 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:48:42.394 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:48:42.396 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:42.396 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:48:42.396 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:48:42.397 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 14:48:42.397 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 14:48:42.398 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:49:00.000 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 14:49:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 14:49:00.004 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:49:00.005 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:49:00.006 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:49:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 14:49:00.012 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:49:00.012 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 14:49:00.679 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:49:00.679 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:49:30.681 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:49:30.681 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:49:45.043 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:49:45.043 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:49:45.043 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.875
2020-11-16 14:49:45.044 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:49:45.044 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:49:45.044 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:49:45.044 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:49:45.044 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:49:45.045 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ?)) table_count 
2020-11-16 14:49:45.046 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:49:45.046 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 3(String)
2020-11-16 14:49:45.046 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:49:45.047 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:49:46.779 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:49:46.779 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:49:46.779 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.8823529411764706
2020-11-16 14:49:46.780 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:49:46.780 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:49:46.781 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:49:46.781 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:49:46.782 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:49:46.782 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:49:46.782 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:49:46.783 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 14:49:46.783 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 14:49:46.785 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:49:48.041 [http-nio-10001-exec-2] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.8888888888888888
2020-11-16 14:49:48.044 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:49:48.044 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 14:49:48.044 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 14:49:48.045 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:49:49.843 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.8947368421052632
2020-11-16 14:49:49.845 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:49:49.846 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 14:49:49.846 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 14:49:49.848 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:49:52.008 [http-nio-10001-exec-6] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9
2020-11-16 14:49:52.017 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:49:52.020 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 14:49:52.020 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 14:49:52.023 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:49:52.747 [http-nio-10001-exec-5] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9047619047619048
2020-11-16 14:49:52.755 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:49:52.758 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 14:49:52.759 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 14:49:52.761 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:49:58.334 [http-nio-10001-exec-8] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9090909090909091
2020-11-16 14:49:58.336 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:49:58.337 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 14:49:58.337 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 14:49:58.338 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:50:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 14:50:00.001 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 14:50:00.002 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 14:50:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 14:50:00.011 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 14:50:00.012 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:00.012 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:00.014 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:50:00.014 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:50:00.016 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:50:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 14:50:00.016 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:50:00.011(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 14:50:00.017 [Thread-19] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 14:50:00.020 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:50:00.021 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 14:50:00.021 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:50:00.021 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 14:50:00.029 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:00.029 [taskScheduler-5] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 14:50:00.029 [taskScheduler-5] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 14:50:00.033 [taskScheduler-5] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 14:50:00.035 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:00.035 [taskScheduler-5] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 14:50:00.036 [taskScheduler-5] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 14:50:00.039 [taskScheduler-5] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 14:50:00.040 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:00.040 [taskScheduler-5] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 14:50:00.041 [taskScheduler-5] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 14:50:00.044 [taskScheduler-5] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 14:50:00.045 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:00.046 [taskScheduler-5] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 14:50:00.046 [taskScheduler-5] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 14:50:00.048 [taskScheduler-5] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 14:50:00.049 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:00.049 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:50:00.049 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:50:00.049(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 14:50:00.051 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:50:00.683 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:50:00.684 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:50:03.259 [http-nio-10001-exec-9] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9130434782608695
2020-11-16 14:50:03.261 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:03.262 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 14:50:03.262 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 14:50:03.268 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:50:03.269 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord:143] - ==>  Preparing: select DISTINCT vf.*,ca.* from video_file vf left join camera ca on vf.IPCID=ca.device_id WHERE ( vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? ) LIMIT ? 
2020-11-16 14:50:03.269 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord:143] - ==> Parameters: 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String), 20(Integer)
2020-11-16 14:50:03.273 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord:143] - <==      Total: 12
2020-11-16 14:50:03.275 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:03.275 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFileId:143] - ==>  Preparing: select vf.id, vt.id video_fag,vt.ipcid ipcid_fag,d.DESCS tag ,vt.rktime,vt.video_file_id from video_file vf left join video_tag vt on vf.id=vt.video_file_id left join dictionary d on d.id=vt.tag where vt.video_file_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) 
2020-11-16 14:50:03.275 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFileId:143] - ==> Parameters: 2020111317070923591886-8123-4f99-b27e-419853294ad6(String), 202011131707098bff6ed4-a7fd-4bce-ad4e-4e5d8977dd8b(String), 20201113170709ae64156a-eff5-4ca7-bfac-95180241f09f(String), 20201113170709af72b5b4-3ca4-458e-91b4-d725ab6aefe8(String), 20201113170709cd3f1fbd-3d86-41d4-829f-25422fc49e6f(String), 20201113170709fd1044ed-e328-4ffe-b558-d59b73fbcd29(String), 2020111417290618d78dd7-70ce-4600-b0ad-0fbcf230da4b(String), 2020111417290648004d90-fde2-416b-906b-93140f9ee342(String), 20201114172906a7ec99dc-be03-4ca1-832b-6189ee267b7e(String), 20201114172906b2870127-abc7-4ec9-8420-3a9cc7bd00b2(String), 20201114172906d9e589e4-8460-4c56-b270-043083a1007e(String), 20201114172906f8e7fa01-4276-47cc-933b-9c1c2dfe2284(String)
2020-11-16 14:50:03.284 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFileId:143] - <==      Total: 24
2020-11-16 14:50:03.284 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:03.284 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFag:143] - ==>  Preparing: select vf.id, it.id video_ipc_id,it.ipcid ipcid_video_tag, it.tag tag_video_tag,it.rktime rktime_video_tag from video_file vf left join ipc_tag it on vf.IPCID=it.ipcid where it.ipcid in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) 
2020-11-16 14:50:03.285 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFag:143] - ==> Parameters: 21AC001203000003(String), 21AC171203000015(String), 21AC001203000009(String), 21AC001203000013(String), 21AC001203000011(String), 21AC001204010019(String), 21AC001203000013(String), 21AC001204010019(String), 21AC001203000009(String), 21AC001203000011(String), 21AC001203000003(String), 21AC171203000015(String)
2020-11-16 14:50:03.295 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFag:143] - <==      Total: 60
2020-11-16 14:50:15.698 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:15.700 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:15.700 [http-nio-10001-exec-4] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9166666666666666
2020-11-16 14:50:15.701 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:50:15.701 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:50:15.701 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:50:15.701 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:50:15.702 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:15.702 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:50:15.702 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:50:15.702 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ?)) table_count 
2020-11-16 14:50:15.703 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 3(String)
2020-11-16 14:50:15.704 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:50:17.312 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.92
2020-11-16 14:50:17.314 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:17.315 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ?)) table_count 
2020-11-16 14:50:17.315 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 3(String)
2020-11-16 14:50:17.316 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 14:50:25.084 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:25.084 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:25.086 [http-nio-10001-exec-6] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9230769230769231
2020-11-16 14:50:25.086 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:50:25.086 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:50:25.086 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:50:25.086 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:50:25.086 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:25.088 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 14:50:25.088 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:50:25.088 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:25.088 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 14:50:25.088 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:50:25.088 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:25.088 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:50:25.089 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:50:25.089 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:50:25.089 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 14:50:25.089 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:50:25.090 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 14:50:25.090 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 14:50:25.091 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:50:25.091 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:50:25.092 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 14:50:28.058 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.8888888888888888
2020-11-16 14:50:28.064 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:50:28.067 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - ==>  Preparing: SELECT count(0) FROM ipc_tag it WHERE it.ipcid = ? 
2020-11-16 14:50:28.067 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - ==> Parameters: 21AC001203000003(String)
2020-11-16 14:50:28.069 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - <==      Total: 1
2020-11-16 14:50:28.070 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - ==>  Preparing: select it.id,it.ipcid, it.tag,it.rktime from ipc_tag it WHERE it.ipcid=? LIMIT ? 
2020-11-16 14:50:28.070 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - ==> Parameters: 21AC001203000003(String), 100(Integer)
2020-11-16 14:50:28.071 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - <==      Total: 5
2020-11-16 14:50:28.072 [http-nio-10001-exec-7] INFO  [com.data.big.service.impl.ServiceImpl:2651] - 调用getIpcTag 查询摄像机标签
2020-11-16 14:50:28.196 [http-nio-10001-exec-9] INFO  [com.data.big.service.impl.ServiceImpl:2463] - urlhttp://127.0.0.1:10001/fdCon/queryCurrentDayWarningData
2020-11-16 14:50:30.684 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:50:30.685 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:51:00.000 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 14:51:00.000 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 14:51:00.004 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:51:00.006 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:51:00.007 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:51:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 14:51:00.016 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:51:00.016 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 14:51:00.019 [Thread-20] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 14:51:00.687 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:51:00.688 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:51:20.677 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:51:20.677 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:51:20.680 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.8928571428571429
2020-11-16 14:51:20.680 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:51:20.680 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:51:20.680 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:51:20.680 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:51:20.680 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:51:20.680 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:51:20.681 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:51:20.681 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:51:20.681 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:51:20.682 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:51:20.682 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:51:20.682 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:51:20.682 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 14:51:20.683 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:51:20.683 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 14:51:20.683 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:51:20.684 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:51:20.684 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 14:51:20.685 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 14:51:20.685 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 14:51:20.686 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 14:51:21.735 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:51:21.736 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:51:21.738 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:51:21.739 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:51:21.739 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:51:21.739 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 14:51:21.740 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:51:21.740 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 14:51:28.330 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:51:28.330 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:51:28.331 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:51:28.331 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:51:28.331 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:51:28.331 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 14:51:28.332 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 14:51:28.332 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:51:30.689 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:51:30.690 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:51:43.453 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.896551724137931
2020-11-16 14:51:43.455 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:51:43.456 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - ==>  Preparing: SELECT count(0) FROM ipc_tag it WHERE it.ipcid = ? 
2020-11-16 14:51:43.456 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - ==> Parameters: 21AC001203000003(String)
2020-11-16 14:51:43.457 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - <==      Total: 1
2020-11-16 14:51:43.458 [http-nio-10001-exec-9] INFO  [com.data.big.service.impl.ServiceImpl:2463] - urlhttp://127.0.0.1:10001/fdCon/queryCurrentDayWarningData
2020-11-16 14:51:43.458 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - ==>  Preparing: select it.id,it.ipcid, it.tag,it.rktime from ipc_tag it WHERE it.ipcid=? LIMIT ? 
2020-11-16 14:51:43.459 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - ==> Parameters: 21AC001203000003(String), 100(Integer)
2020-11-16 14:51:43.460 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - <==      Total: 5
2020-11-16 14:51:43.460 [http-nio-10001-exec-1] INFO  [com.data.big.service.impl.ServiceImpl:2651] - 调用getIpcTag 查询摄像机标签
2020-11-16 14:51:46.597 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:51:46.598 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:51:46.599 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:51:46.599 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:51:46.599 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 14:51:46.599 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 14:51:46.600 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:51:46.600 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 14:52:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 14:52:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 14:52:00.004 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:52:00.006 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:52:00.006 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:52:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 14:52:00.012 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:52:00.012 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 14:52:00.692 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:52:00.693 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:52:30.694 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:52:30.694 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:53:00.002 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 14:53:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 14:53:00.005 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:53:00.007 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:53:00.008 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:53:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 14:53:00.012 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:53:00.012 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 14:53:00.696 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:53:00.697 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:53:30.698 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:53:30.699 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:54:00.000 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 14:54:00.000 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 14:54:00.005 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:54:00.006 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:54:00.007 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:54:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 14:54:00.013 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:54:00.013 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 14:54:00.700 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:54:00.701 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:54:12.184 [Thread-19] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 14:54:30.701 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:54:30.702 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:55:00.002 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 14:55:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 14:55:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 14:55:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 14:55:00.004 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 14:55:00.004 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:55:00.004 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:55:00.005 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:55:00.005 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:55:00.005 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:55:00.006 [Thread-21] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 14:55:00.006 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 14:55:00.006 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:55:00.004(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 14:55:00.006 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:55:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 14:55:00.007 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 14:55:00.010 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 14:55:00.011 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:55:00.011 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 14:55:00.011 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 14:55:00.012 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:55:00.012 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 14:55:00.013 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:55:00.013 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 14:55:00.014 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 14:55:00.015 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:55:00.015 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 14:55:00.016 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 14:55:00.018 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 14:55:00.019 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:55:00.019 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 14:55:00.019 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 14:55:00.021 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 14:55:00.022 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:55:00.022 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:55:00.023 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:55:00.021(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 14:55:00.026 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:55:00.704 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:55:00.704 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:55:30.706 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:55:30.707 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:56:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 14:56:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 14:56:00.004 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:56:00.007 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:56:00.007 [Thread-22] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 14:56:00.009 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:56:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 14:56:00.014 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:56:00.014 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 14:56:00.707 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:56:00.708 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:56:30.709 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:56:30.709 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:57:00.001 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 14:57:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 14:57:00.004 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:57:00.006 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:57:00.007 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:57:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 14:57:00.013 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:57:00.014 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 14:57:00.711 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:57:00.711 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:57:17.125 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:57:17.126 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:57:17.127 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 14:57:17.128 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 14:57:17.131 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:57:17.133 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9
2020-11-16 14:57:17.134 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:57:17.134 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:57:17.135 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:57:17.135 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 14:57:17.135 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 14:57:17.135 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:57:17.137 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 14:57:17.137 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:57:17.138 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 14:57:17.138 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 14:57:17.139 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 14:57:17.142 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:57:17.142 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@55b6cc7b: (connection is dead)
2020-11-16 14:57:17.142 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:57:17.143 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:57:17.166 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@21229af
2020-11-16 14:57:17.172 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:57:17.172 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 14:57:17.172 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 14:57:17.174 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 14:57:19.656 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9032258064516129
2020-11-16 14:57:19.658 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:57:19.659 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - ==>  Preparing: SELECT count(0) FROM ipc_tag it WHERE it.ipcid = ? 
2020-11-16 14:57:19.659 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - ==> Parameters: 21AC001203000011(String)
2020-11-16 14:57:19.660 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - <==      Total: 1
2020-11-16 14:57:19.661 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - ==>  Preparing: select it.id,it.ipcid, it.tag,it.rktime from ipc_tag it WHERE it.ipcid=? LIMIT ? 
2020-11-16 14:57:19.661 [http-nio-10001-exec-6] INFO  [com.data.big.service.impl.ServiceImpl:2463] - urlhttp://127.0.0.1:10001/fdCon/queryCurrentDayWarningData
2020-11-16 14:57:19.662 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - ==> Parameters: 21AC001203000011(String), 100(Integer)
2020-11-16 14:57:19.663 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - <==      Total: 5
2020-11-16 14:57:19.663 [http-nio-10001-exec-7] INFO  [com.data.big.service.impl.ServiceImpl:2651] - 调用getIpcTag 查询摄像机标签
2020-11-16 14:57:21.974 [http-nio-10001-exec-8] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.90625
2020-11-16 14:57:21.975 [http-nio-10001-exec-4] INFO  [com.data.big.service.impl.ServiceImpl:2463] - urlhttp://127.0.0.1:10001/fdCon/queryCurrentDayWarningData
2020-11-16 14:57:21.976 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:57:21.976 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - ==>  Preparing: SELECT count(0) FROM ipc_tag it WHERE it.ipcid = ? 
2020-11-16 14:57:21.977 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - ==> Parameters: 21AC001203000013(String)
2020-11-16 14:57:21.978 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - <==      Total: 1
2020-11-16 14:57:21.979 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - ==>  Preparing: select it.id,it.ipcid, it.tag,it.rktime from ipc_tag it WHERE it.ipcid=? LIMIT ? 
2020-11-16 14:57:21.979 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - ==> Parameters: 21AC001203000013(String), 100(Integer)
2020-11-16 14:57:21.980 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - <==      Total: 5
2020-11-16 14:57:21.980 [http-nio-10001-exec-8] INFO  [com.data.big.service.impl.ServiceImpl:2651] - 调用getIpcTag 查询摄像机标签
2020-11-16 14:57:30.712 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:57:30.713 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:58:00.000 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 14:58:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 14:58:00.005 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:58:00.007 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:58:00.008 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:58:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 14:58:00.011 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:58:00.011 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 14:58:00.714 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:58:00.714 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:58:30.715 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:58:30.716 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:59:00.000 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 14:59:00.000 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 14:59:00.004 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 14:59:00.006 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 14:59:00.007 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 14:59:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 14:59:00.013 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 14:59:00.013 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 14:59:00.716 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:59:00.717 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:59:12.102 [Thread-21] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 14:59:30.718 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 14:59:30.718 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:00:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 15:00:00.002 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:00:00.003 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:00:00.003 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 15:00:00.005 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:00:00.006 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:00:00.006 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 15:00:00.008 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:00:00.008 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:00:00.008 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:00:00.010 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:00:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:00:00.010 [Thread-23] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 15:00:00.010 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:00:00.004(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 15:00:00.010 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:00:00.011 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:00:00.014 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:00:00.015 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:00:00.015 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 15:00:00.016 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:00:00.016 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:00:00.016 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:00:00.017 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:00:00.017 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:00:00.019 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:00:00.021 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:00:00.021 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:00:00.021 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:00:00.023 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:00:00.025 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:00:00.025 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:00:00.025 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:00:00.027 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:00:00.027 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:00:00.027 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:00:00.028 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:00:00.027(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 15:00:00.030 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:00:00.719 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:00:00.720 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:00:30.720 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:00:30.721 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:01:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:01:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:01:00.002 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:01:00.003 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:01:00.005 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:01:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:01:00.009 [Thread-24] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 15:01:00.010 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:01:00.011 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:01:00.723 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:01:00.723 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:01:30.725 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:01:30.725 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:01:57.843 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:01:57.843 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:01:57.844 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9090909090909091
2020-11-16 15:01:57.845 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:01:57.845 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:01:57.845 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:01:57.846 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:01:57.846 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:01:57.846 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:01:57.846 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:01:57.847 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:01:57.847 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:01:57.847 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:01:57.848 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:01:57.848 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:01:57.850 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:01:57.862 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:01:57.862 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:01:57.863 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:01:57.863 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:01:57.863 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:01:57.863 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:01:57.864 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:01:57.864 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:01:59.372 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:01:59.372 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:01:59.374 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:01:59.374 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:01:59.375 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:01:59.375 [http-nio-10001-exec-10] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9117647058823529
2020-11-16 15:01:59.375 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:01:59.375 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:01:59.376 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:01:59.376 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:01:59.377 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:01:59.377 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:01:59.377 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:01:59.379 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:01:59.379 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:01:59.379 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7d477f68: (connection is dead)
2020-11-16 15:01:59.379 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:01:59.380 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:01:59.381 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:01:59.382 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:01:59.383 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:01:59.387 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:01:59.387 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:01:59.388 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:01:59.389 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:01:59.406 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@7926f92c
2020-11-16 15:02:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:02:00.003 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:02:00.005 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:02:00.006 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:02:00.007 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:02:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:02:00.011 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:02:00.012 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:02:00.727 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:02:00.727 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:02:01.169 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9142857142857143
2020-11-16 15:02:01.173 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:02:01.176 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - ==>  Preparing: SELECT count(0) FROM ipc_tag it WHERE it.ipcid = ? 
2020-11-16 15:02:01.177 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - ==> Parameters: 21AC001203000013(String)
2020-11-16 15:02:01.180 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc_COUNT:143] - <==      Total: 1
2020-11-16 15:02:01.182 [http-nio-10001-exec-5] INFO  [com.data.big.service.impl.ServiceImpl:2463] - urlhttp://127.0.0.1:10001/fdCon/queryCurrentDayWarningData
2020-11-16 15:02:01.183 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - ==>  Preparing: select it.id,it.ipcid, it.tag,it.rktime from ipc_tag it WHERE it.ipcid=? LIMIT ? 
2020-11-16 15:02:01.184 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - ==> Parameters: 21AC001203000013(String), 100(Integer)
2020-11-16 15:02:01.186 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.IpcTagMapper.selectIpc:143] - <==      Total: 5
2020-11-16 15:02:01.186 [http-nio-10001-exec-7] INFO  [com.data.big.service.impl.ServiceImpl:2651] - 调用getIpcTag 查询摄像机标签
2020-11-16 15:02:17.852 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:02:17.852 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:02:17.855 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:02:17.855 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:02:17.855 [http-nio-10001-exec-9] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9166666666666666
2020-11-16 15:02:17.855 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:02:17.855 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:02:17.855 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:02:17.855 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:02:17.864 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:02:17.864 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:02:17.866 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:02:17.867 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:02:17.867 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:02:17.867 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:02:17.867 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:02:17.868 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:02:17.868 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:02:17.868 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@21229af: (connection is dead)
2020-11-16 15:02:17.869 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:02:17.870 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:02:17.870 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:02:17.871 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:02:17.871 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:02:17.872 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:02:17.895 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@189dd60d
2020-11-16 15:02:30.729 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:02:30.729 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:02:37.991 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:02:37.991 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:02:37.993 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:02:37.994 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:02:37.994 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:02:37.994 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:02:37.995 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:02:37.995 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:03:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:03:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:03:00.003 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:03:00.005 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:03:00.005 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:03:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:03:00.009 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:03:00.010 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:03:00.731 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:03:00.732 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:03:13.501 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:03:13.501 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:03:13.504 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:03:13.504 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:03:13.504 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.918918918918919
2020-11-16 15:03:13.504 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:03:13.504 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:03:13.504 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:03:13.504 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:03:13.504 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:03:13.507 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:03:13.507 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:03:13.507 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:03:13.507 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:03:13.507 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:03:13.507 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:03:13.507 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:03:13.507 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:03:13.509 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:03:13.510 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:03:13.510 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:03:13.511 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:03:13.512 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:03:13.513 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:03:15.789 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:03:15.790 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:03:15.791 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9210526315789473
2020-11-16 15:03:15.791 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:03:15.791 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:03:15.791 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:03:15.791 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:03:15.791 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:03:15.791 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:03:15.791 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:03:15.792 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:03:15.792 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:03:15.792 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:03:15.792 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:03:15.792 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:03:15.792 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:03:15.792 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:03:15.793 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:03:15.793 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:03:15.794 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:03:15.794 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:03:15.795 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:03:15.795 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:03:15.796 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:03:30.732 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:03:30.733 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:04:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:04:00.001 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:04:00.004 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:04:00.006 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:04:00.006 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:04:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:04:00.012 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:04:00.012 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:04:00.734 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:04:00.735 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:04:12.114 [Thread-23] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 15:04:30.736 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:04:30.737 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:04:36.970 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:04:36.973 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:04:36.973 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:04:36.974 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:05:00.003 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 15:05:00.003 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:05:00.003 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:05:00.003 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 15:05:00.005 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 15:05:00.005 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:05:00.006 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:05:00.006 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:05:00.006 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:05:00.006 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:05:00.007 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:05:00.004(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 15:05:00.007 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:05:00.003(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:05:00.007 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:05:00.008 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:05:00.008 [Thread-25] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 15:05:00.010 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:05:00.012 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:05:00.012 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:05:00.012 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:05:00.013 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:05:00.014 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:05:00.014 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:05:00.014 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:05:00.014 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 15:05:00.015 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:05:00.015 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:05:00.016 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:05:00.017 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:05:00.018 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:05:00.018 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:05:00.018 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:05:00.019 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:05:00.020 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:05:00.020 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:05:00.020 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:05:00.019(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 15:05:00.022 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:05:00.738 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:05:00.738 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:05:30.740 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:05:30.741 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:06:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:06:00.001 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:06:00.003 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:06:00.007 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:06:00.008 [Thread-26] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 15:06:00.009 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:06:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:06:00.014 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:06:00.014 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:06:00.741 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:06:00.741 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:06:30.743 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:06:30.744 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:07:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:07:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:07:00.004 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:07:00.006 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:07:00.007 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:07:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:07:00.012 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:07:00.012 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:07:00.745 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:07:00.745 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:07:30.746 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:07:30.747 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:07:35.502 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:07:35.505 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:07:35.506 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:07:35.510 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:07:43.537 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:07:43.539 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:07:43.540 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:07:43.542 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:07:43.545 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:07:43.547 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@189dd60d: (connection is dead)
2020-11-16 15:07:43.548 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:07:43.549 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:07:43.552 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:07:43.585 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@397a1508
2020-11-16 15:07:47.970 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:07:47.970 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:07:47.972 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:07:47.972 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:07:47.973 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:07:47.973 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:07:47.974 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:07:47.974 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:07:52.153 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:07:52.155 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:07:52.155 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:07:52.156 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:07:52.156 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9230769230769231
2020-11-16 15:07:52.156 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:07:52.157 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:07:52.157 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:07:52.158 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:07:52.158 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:07:52.158 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:07:52.158 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:07:52.159 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:07:52.159 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:07:52.159 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:07:52.159 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:07:52.159 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:07:52.160 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:07:52.160 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:07:52.161 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:07:52.161 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:07:52.161 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:07:52.161 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:07:52.162 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:07:56.541 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:07:56.541 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:07:56.542 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:07:56.542 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:07:56.543 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:07:56.543 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:07:56.544 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:07:56.544 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:08:00.000 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:08:00.000 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:08:00.003 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:08:00.005 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:08:00.006 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:08:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:08:00.010 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:08:00.010 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:08:00.747 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:08:00.748 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:08:30.750 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:08:30.751 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:09:00.000 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:09:00.000 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:09:00.003 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:09:00.005 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:09:00.006 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:09:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:09:00.011 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:09:00.011 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:09:00.751 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:09:00.751 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:09:12.107 [Thread-25] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 15:09:30.752 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:09:30.753 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:10:00.004 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 15:10:00.004 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 15:10:00.004 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:10:00.004 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:10:00.005 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:00.005 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:00.005 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 15:10:00.006 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:00.006 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:10:00.006 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:10:00.007 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:10:00.007 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:10:00.005(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 15:10:00.007 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:10:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:10:00.007 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:10:00.007 [Thread-27] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 15:10:00.010 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:10:00.011 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:00.011 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:10:00.012 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:10:00.013 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:10:00.013 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 15:10:00.013 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:10:00.013 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:10:00.014 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:10:00.014 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:00.014 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:10:00.014 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:10:00.015 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:10:00.016 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:00.016 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:10:00.016 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:10:00.018 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:10:00.018 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:00.018 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:10:00.018 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:10:00.018(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 15:10:00.021 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:10:00.754 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:10:00.754 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:10:02.752 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:02.754 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:10:02.755 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:10:02.758 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:10:05.107 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:05.108 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:05.109 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:10:05.111 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:10:05.111 [http-nio-10001-exec-2] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.925
2020-11-16 15:10:05.112 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:10:05.112 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:10:05.112 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:05.113 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:10:05.113 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:10:05.113 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:10:05.114 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:10:05.115 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:10:05.116 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:05.116 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:10:05.116 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:10:05.116 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:10:05.116 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:10:05.116 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:05.116 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:10:05.117 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:10:05.117 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:10:05.117 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:10:05.118 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:10:12.310 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:12.311 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:12.312 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:10:12.312 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:10:12.312 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:10:12.312 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:10:12.313 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:10:12.313 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:10:30.755 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:10:30.756 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:10:47.335 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:47.338 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:10:47.339 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:10:47.342 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:10:52.206 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:52.206 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:10:52.208 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:10:52.208 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:10:52.209 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:10:52.209 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:10:52.211 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:10:52.211 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:11:00.000 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:11:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:11:00.003 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:11:00.006 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:11:00.007 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:11:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:11:00.010 [Thread-28] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 15:11:00.015 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:11:00.015 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:11:00.757 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:11:00.757 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:11:30.759 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:11:30.760 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:12:00.000 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:12:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:12:00.003 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:12:00.005 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:12:00.006 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:12:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:12:00.012 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:12:00.012 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:12:00.762 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:12:00.762 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:12:30.764 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:12:30.765 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:13:00.000 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:13:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:13:00.004 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:13:00.005 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:13:00.006 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:13:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:13:00.012 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:13:00.012 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:13:00.766 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:13:00.767 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:13:04.371 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:13:04.373 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:13:04.374 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:13:04.377 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:13:04.409 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:13:04.411 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:13:04.412 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:13:04.415 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:13:30.768 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:13:30.769 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:14:00.001 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:14:00.001 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:14:00.003 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:00.004 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:14:00.005 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:14:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:14:00.009 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:14:00.009 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:14:00.771 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:14:00.771 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:14:09.709 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:09.711 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:14:09.712 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:14:09.716 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:14:12.119 [Thread-27] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 15:14:27.030 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:27.030 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:27.031 [http-nio-10001-exec-4] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.926829268292683
2020-11-16 15:14:27.031 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:14:27.031 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:14:27.031 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:27.032 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:14:27.032 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:14:27.033 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:14:27.033 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:14:27.034 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:14:27.034 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3146913f: (connection is dead)
2020-11-16 15:14:27.035 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:27.035 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:14:27.035 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:14:27.035 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:14:27.036 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:14:27.036 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:27.037 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:14:27.037 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:14:27.037 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:14:27.037 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:14:27.037 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:14:27.039 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:14:27.039 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:14:27.062 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@8ced967
2020-11-16 15:14:30.772 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:14:30.773 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:14:43.930 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:43.931 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:43.931 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:14:43.932 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:14:43.933 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:14:43.933 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:14:43.933 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:14:43.934 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:14:52.428 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:52.428 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:52.429 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:14:52.429 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:14:52.430 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:14:52.430 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:14:52.430 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:14:52.430 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:14:57.099 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:57.101 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:57.101 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:14:57.101 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:14:57.101 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:14:57.102 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:14:57.102 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:14:57.102 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:14:59.485 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:59.486 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:14:59.487 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:14:59.487 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:14:59.488 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:14:59.489 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:14:59.490 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:14:59.491 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:15:00.002 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 15:15:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 15:15:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:15:00.002 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:15:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 15:15:00.003 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:15:00.003 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:15:00.004 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:15:00.004 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:15:00.004 [Thread-29] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 15:15:00.004 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:15:00.005 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:15:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:15:00.005 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:15:00.002(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 15:15:00.005 [taskScheduler-8] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:15:00.006 [taskScheduler-8] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:15:00.007 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:15:00.007 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:15:00.008 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:15:00.008 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 15:15:00.009 [taskScheduler-8] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:15:00.010 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:15:00.010 [taskScheduler-8] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:15:00.011 [taskScheduler-8] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:15:00.013 [taskScheduler-8] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:15:00.014 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:15:00.014 [taskScheduler-8] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:15:00.014 [taskScheduler-8] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:15:00.016 [taskScheduler-8] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:15:00.018 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:15:00.018 [taskScheduler-8] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:15:00.018 [taskScheduler-8] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:15:00.020 [taskScheduler-8] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:15:00.020 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:15:00.020 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:15:00.021 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:15:00.02(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 15:15:00.024 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:15:00.774 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:15:00.775 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:15:30.776 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:15:30.776 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:15:35.070 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:15:35.071 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:15:35.071 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:15:35.072 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:15:35.080 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:15:35.080 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:15:35.080 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:15:35.081 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:15:47.063 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:15:47.063 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:15:47.065 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:15:47.065 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:15:47.065 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:15:47.065 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:15:47.067 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:15:47.067 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:16:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:16:00.002 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:16:00.010 [Thread-30] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 15:16:00.010 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:16:00.014 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:16:00.017 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:16:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:16:00.024 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:16:00.024 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:16:00.778 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:16:00.778 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:16:20.562 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@499cab1a: (connection has passed maxLifetime)
2020-11-16 15:16:20.610 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@6d3f270b
2020-11-16 15:16:30.779 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:16:30.780 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:16:33.629 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:16:33.631 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:16:33.632 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:16:33.633 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:16:33.634 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:16:33.637 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:16:33.638 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:16:33.639 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:16:37.506 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:16:37.507 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:16:37.509 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:16:37.509 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:16:37.509 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:16:37.509 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:16:37.511 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:16:37.511 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:16:37.598 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@146be299: (connection has passed maxLifetime)
2020-11-16 15:16:37.649 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@1693242
2020-11-16 15:17:00.002 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:17:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:17:00.005 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:17:00.007 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:17:00.009 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:17:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:17:00.023 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:17:00.023 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:17:00.781 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:17:00.781 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:17:18.360 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:17:18.361 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:17:18.366 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:17:18.368 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:17:18.370 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@397a1508: (connection is dead)
2020-11-16 15:17:18.371 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:17:18.371 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:17:18.371 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:17:18.373 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:17:18.396 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@44359303
2020-11-16 15:17:18.424 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:17:18.424 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:17:18.425 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:17:18.425 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:17:18.426 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:17:18.426 [http-nio-10001-exec-6] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9285714285714286
2020-11-16 15:17:18.426 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:17:18.428 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:17:18.433 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:17:18.433 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:17:18.433 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:17:18.434 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:17:18.437 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:17:18.439 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:17:18.439 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:17:18.441 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:17:21.839 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:17:21.839 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:17:21.841 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:17:21.841 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:17:21.841 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:17:21.841 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:17:21.843 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:17:21.843 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:17:21.845 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9302325581395349
2020-11-16 15:17:21.845 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:17:21.845 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:17:21.845 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:17:21.845 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:17:21.846 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:17:21.846 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:17:21.846 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:17:21.847 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:17:21.847 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:17:21.847 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:17:21.847 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:17:21.848 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:17:21.848 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:17:21.849 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:17:21.849 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:17:30.783 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:17:30.783 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:18:00.000 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:18:00.000 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:18:00.003 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:18:00.005 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:18:00.005 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:18:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:18:00.009 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:18:00.010 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:18:00.785 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:18:00.785 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:18:02.894 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:18:02.894 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:18:02.895 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:18:02.895 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:18:02.895 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:18:02.895 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:18:02.897 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:18:02.897 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:18:10.955 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:18:10.956 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:18:10.957 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:18:10.958 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:18:10.958 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:18:10.959 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:18:10.961 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:18:10.962 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:18:18.936 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:18:18.936 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:18:18.938 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:18:18.938 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:18:18.938 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:18:18.938 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:18:18.939 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:18:18.939 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:18:30.787 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:18:30.788 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:19:00.002 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:19:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:19:00.005 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:00.006 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:19:00.006 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:19:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:19:00.010 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:19:00.011 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:19:00.789 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:19:00.789 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:19:12.080 [Thread-29] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 15:19:23.901 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:23.902 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:19:23.902 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:19:23.902 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:23.903 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:19:23.903 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:19:23.903 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:19:23.904 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:19:30.790 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:19:30.790 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:19:34.886 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:34.886 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:34.886 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:34.886 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:34.886 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:34.889 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, `status`, video_type ) values ( ?, ?, ?, ? ) 
2020-11-16 15:19:34.889 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, `status`, video_type ) values ( ?, ?, ?, ? ) 
2020-11-16 15:19:34.889 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, `status`, video_type ) values ( ?, ?, ?, ? ) 
2020-11-16 15:19:34.889 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, `status`, video_type ) values ( ?, ?, ?, ? ) 
2020-11-16 15:19:34.889 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, `status`, video_type ) values ( ?, ?, ?, ? ) 
2020-11-16 15:19:34.890 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 20201116151934107f21d8-dc22-4a07-9b69-7d4a5afc5f49(String), 21AC001203000013(String), 0(String), zidingyi(String)
2020-11-16 15:19:34.890 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 202011161519347ec51bf7-ccf6-4ce8-b76c-1b8d8f19646a(String), 21AC001203000009(String), 0(String), zidingyi(String)
2020-11-16 15:19:34.890 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 202011161519342ba324f5-d4b0-4abd-805d-e208fde54c52(String), 21AC001204010019(String), 0(String), zidingyi(String)
2020-11-16 15:19:34.890 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 2020111615193423230f7d-c952-425e-a443-c88d48e4e2e8(String), 21AC001203000003(String), 0(String), zidingyi(String)
2020-11-16 15:19:34.891 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:34.890 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 202011161519345046ed7a-7325-4297-ba65-6c27b63bb8eb(String), 21AC001203000011(String), 0(String), zidingyi(String)
2020-11-16 15:19:34.897 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 15:19:34.897 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 15:19:34.897 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 15:19:34.897 [http-nio-10001-exec-8] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 1827443042, id=202011161519342ba324f5-d4b0-4abd-805d-e208fde54c52, ipcid=21AC001204010019, kssj=null, jssj=null, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 15:19:34.897 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, `status`, video_type ) values ( ?, ?, ?, ? ) 
2020-11-16 15:19:34.898 [http-nio-10001-exec-10] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 723291289, id=202011161519347ec51bf7-ccf6-4ce8-b76c-1b8d8f19646a, ipcid=21AC001203000009, kssj=null, jssj=null, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 15:19:34.898 [http-nio-10001-exec-1] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 395446040, id=20201116151934107f21d8-dc22-4a07-9b69-7d4a5afc5f49, ipcid=21AC001203000013, kssj=null, jssj=null, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 15:19:34.898 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 15:19:34.899 [http-nio-10001-exec-9] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 1730846186, id=2020111615193423230f7d-c952-425e-a443-c88d48e4e2e8, ipcid=21AC001203000003, kssj=null, jssj=null, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 15:19:34.898 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 15:19:34.899 [http-nio-10001-exec-6] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 402682166, id=202011161519345046ed7a-7325-4297-ba65-6c27b63bb8eb, ipcid=21AC001203000011, kssj=null, jssj=null, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 15:19:34.900 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 20201116151934db12c5d4-d5bd-44fa-890f-97542c92559c(String), 21AC171203000015(String), 0(String), zidingyi(String)
2020-11-16 15:19:34.905 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 15:19:34.905 [http-nio-10001-exec-2] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 732549690, id=20201116151934db12c5d4-d5bd-44fa-890f-97542c92559c, ipcid=21AC171203000015, kssj=null, jssj=null, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 15:19:34.915 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:34.916 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==>  Preparing: insert into video_tag ( id, ipcid, tag, rktime, video_file_id ) values 
2020-11-16 15:19:34.918 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==> Parameters: 
2020-11-16 15:19:34.926 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@53ad9562
2020-11-16 15:19:34.936 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:34.936 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==>  Preparing: insert into video_tag ( id, ipcid, tag, rktime, video_file_id ) values 
2020-11-16 15:19:34.937 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==> Parameters: 
2020-11-16 15:19:34.944 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:34.945 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==>  Preparing: insert into video_tag ( id, ipcid, tag, rktime, video_file_id ) values 
2020-11-16 15:19:34.945 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==> Parameters: 
2020-11-16 15:19:34.953 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:34.953 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==>  Preparing: insert into video_tag ( id, ipcid, tag, rktime, video_file_id ) values 
2020-11-16 15:19:34.953 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==> Parameters: 
2020-11-16 15:19:34.962 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:34.962 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==>  Preparing: insert into video_tag ( id, ipcid, tag, rktime, video_file_id ) values 
2020-11-16 15:19:34.963 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==> Parameters: 
2020-11-16 15:19:34.970 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.support.SQLErrorCodesFactory:203] - Looking up default SQLErrorCodes for DataSource [com.zaxxer.hikari.HikariDataSource@3434a4f0]
2020-11-16 15:19:34.973 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:34.975 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.support.SQLErrorCodesFactory:179] - SQL error codes for 'MySQL' found
2020-11-16 15:19:34.975 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.support.SQLErrorCodesFactory:247] - Caching SQL error codes for DataSource [com.zaxxer.hikari.HikariDataSource@3434a4f0]: database product name is 'MySQL'
2020-11-16 15:19:34.975 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator:403] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7] for task [
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
### The error may exist in file [D:\workspace\bigWorkspace\big\target\classes\mapping\VideoTagMapper.xml]
### The error may involve com.data.big.mapper.VideoTagMapper.saveAll-Inline
### The error occurred while setting parameters
### SQL: insert into video_tag      ( id,         ipcid,         tag,         rktime,         video_file_id )      values
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
]
2020-11-16 15:19:34.975 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator:403] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7] for task [
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
### The error may exist in file [D:\workspace\bigWorkspace\big\target\classes\mapping\VideoTagMapper.xml]
### The error may involve com.data.big.mapper.VideoTagMapper.saveAll-Inline
### The error occurred while setting parameters
### SQL: insert into video_tag      ( id,         ipcid,         tag,         rktime,         video_file_id )      values
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
]
2020-11-16 15:19:34.975 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator:403] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7] for task [
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
### The error may exist in file [D:\workspace\bigWorkspace\big\target\classes\mapping\VideoTagMapper.xml]
### The error may involve com.data.big.mapper.VideoTagMapper.saveAll-Inline
### The error occurred while setting parameters
### SQL: insert into video_tag      ( id,         ipcid,         tag,         rktime,         video_file_id )      values
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
]
2020-11-16 15:19:34.975 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator:403] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7] for task [
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
### The error may exist in file [D:\workspace\bigWorkspace\big\target\classes\mapping\VideoTagMapper.xml]
### The error may involve com.data.big.mapper.VideoTagMapper.saveAll-Inline
### The error occurred while setting parameters
### SQL: insert into video_tag      ( id,         ipcid,         tag,         rktime,         video_file_id )      values
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
]
2020-11-16 15:19:34.975 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator:403] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7] for task [
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
### The error may exist in file [D:\workspace\bigWorkspace\big\target\classes\mapping\VideoTagMapper.xml]
### The error may involve com.data.big.mapper.VideoTagMapper.saveAll-Inline
### The error occurred while setting parameters
### SQL: insert into video_tag      ( id,         ipcid,         tag,         rktime,         video_file_id )      values
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
]
2020-11-16 15:19:35.008 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:19:35.008 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==>  Preparing: insert into video_tag ( id, ipcid, tag, rktime, video_file_id ) values 
2020-11-16 15:19:35.008 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==> Parameters: 
2020-11-16 15:19:35.010 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator:403] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7] for task [
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
### The error may exist in file [D:\workspace\bigWorkspace\big\target\classes\mapping\VideoTagMapper.xml]
### The error may involve com.data.big.mapper.VideoTagMapper.saveAll-Inline
### The error occurred while setting parameters
### SQL: insert into video_tag      ( id,         ipcid,         tag,         rktime,         video_file_id )      values
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
]
2020-11-16 15:20:00.002 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 15:20:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:20:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 15:20:00.002 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:20:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 15:20:00.003 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:00.003 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:00.004 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:00.004 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:20:00.004 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:20:00.004 [taskScheduler-1] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:20:00.004 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:20:00.002(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 15:20:00.004 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:20:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:20:00.005 [taskScheduler-1] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:20:00.006 [Thread-31] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 15:20:00.008 [taskScheduler-1] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:20:00.009 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:00.010 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:20:00.010 [taskScheduler-1] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:20:00.010 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 15:20:00.010 [taskScheduler-1] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:20:00.011 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:20:00.011 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:20:00.013 [taskScheduler-1] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:20:00.014 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:00.014 [taskScheduler-1] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:20:00.014 [taskScheduler-1] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:20:00.016 [taskScheduler-1] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:20:00.018 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:00.018 [taskScheduler-1] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:20:00.018 [taskScheduler-1] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:20:00.020 [taskScheduler-1] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:20:00.021 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:00.021 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:20:00.021 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:20:00.021(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 15:20:00.024 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:20:00.791 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=6, active=0, idle=6, waiting=0)
2020-11-16 15:20:00.791 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=6, active=0, idle=6, waiting=0)
2020-11-16 15:20:30.792 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=6, active=0, idle=6, waiting=0)
2020-11-16 15:20:30.793 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:20:30.794 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@53ad9562: (connection has passed idleTimeout)
2020-11-16 15:20:33.814 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:33.816 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:20:33.816 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:20:33.817 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:33.818 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:20:33.818 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:20:33.818 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:20:33.819 [http-nio-10001-exec-10] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9318181818181818
2020-11-16 15:20:33.820 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:20:33.822 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:33.823 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 15:20:33.823 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 15:20:33.825 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 15:20:35.484 [http-nio-10001-exec-2] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9333333333333333
2020-11-16 15:20:35.487 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:35.487 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 15:20:35.488 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 15:20:35.489 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 15:20:39.469 [http-nio-10001-exec-4] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9347826086956522
2020-11-16 15:20:39.473 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:39.474 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 15:20:39.474 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 15:20:39.475 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 15:20:41.482 [http-nio-10001-exec-8] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9361702127659575
2020-11-16 15:20:41.485 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:41.486 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 15:20:41.487 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 15:20:41.488 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 15:20:41.488 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord:143] - ==>  Preparing: select DISTINCT vf.*,ca.* from video_file vf left join camera ca on vf.IPCID=ca.device_id WHERE ( vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? ) LIMIT ? 
2020-11-16 15:20:41.488 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord:143] - ==> Parameters: 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String), 20(Integer)
2020-11-16 15:20:41.492 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord:143] - <==      Total: 18
2020-11-16 15:20:41.492 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:41.492 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFileId:143] - ==>  Preparing: select vf.id, vt.id video_fag,vt.ipcid ipcid_fag,d.DESCS tag ,vt.rktime,vt.video_file_id from video_file vf left join video_tag vt on vf.id=vt.video_file_id left join dictionary d on d.id=vt.tag where vt.video_file_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) 
2020-11-16 15:20:41.493 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFileId:143] - ==> Parameters: 2020111317070923591886-8123-4f99-b27e-419853294ad6(String), 202011131707098bff6ed4-a7fd-4bce-ad4e-4e5d8977dd8b(String), 20201113170709ae64156a-eff5-4ca7-bfac-95180241f09f(String), 20201113170709af72b5b4-3ca4-458e-91b4-d725ab6aefe8(String), 20201113170709cd3f1fbd-3d86-41d4-829f-25422fc49e6f(String), 20201113170709fd1044ed-e328-4ffe-b558-d59b73fbcd29(String), 2020111417290618d78dd7-70ce-4600-b0ad-0fbcf230da4b(String), 2020111417290648004d90-fde2-416b-906b-93140f9ee342(String), 20201114172906a7ec99dc-be03-4ca1-832b-6189ee267b7e(String), 20201114172906b2870127-abc7-4ec9-8420-3a9cc7bd00b2(String), 20201114172906d9e589e4-8460-4c56-b270-043083a1007e(String), 20201114172906f8e7fa01-4276-47cc-933b-9c1c2dfe2284(String), 20201116151934107f21d8-dc22-4a07-9b69-7d4a5afc5f49(String), 2020111615193423230f7d-c952-425e-a443-c88d48e4e2e8(String), 202011161519342ba324f5-d4b0-4abd-805d-e208fde54c52(String), 202011161519345046ed7a-7325-4297-ba65-6c27b63bb8eb(String), 202011161519347ec51bf7-ccf6-4ce8-b76c-1b8d8f19646a(String), 20201116151934db12c5d4-d5bd-44fa-890f-97542c92559c(String)
2020-11-16 15:20:41.495 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFileId:143] - <==      Total: 24
2020-11-16 15:20:41.496 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:41.496 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFag:143] - ==>  Preparing: select vf.id, it.id video_ipc_id,it.ipcid ipcid_video_tag, it.tag tag_video_tag,it.rktime rktime_video_tag from video_file vf left join ipc_tag it on vf.IPCID=it.ipcid where it.ipcid in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) 
2020-11-16 15:20:41.496 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFag:143] - ==> Parameters: 21AC001203000003(String), 21AC171203000015(String), 21AC001203000009(String), 21AC001203000013(String), 21AC001203000011(String), 21AC001204010019(String), 21AC001203000013(String), 21AC001204010019(String), 21AC001203000009(String), 21AC001203000011(String), 21AC001203000003(String), 21AC171203000015(String), 21AC001203000013(String), 21AC001203000003(String), 21AC001204010019(String), 21AC001203000011(String), 21AC001203000009(String), 21AC171203000015(String)
2020-11-16 15:20:41.501 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFag:143] - <==      Total: 90
2020-11-16 15:20:59.947 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:59.948 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.deleteByExample:143] - ==>  Preparing: DELETE FROM video_file WHERE ( id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ) 
2020-11-16 15:20:59.948 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.deleteByExample:143] - ==> Parameters: 2020111317070923591886-8123-4f99-b27e-419853294ad6(String), 202011131707098bff6ed4-a7fd-4bce-ad4e-4e5d8977dd8b(String), 20201113170709ae64156a-eff5-4ca7-bfac-95180241f09f(String), 20201113170709af72b5b4-3ca4-458e-91b4-d725ab6aefe8(String), 20201113170709cd3f1fbd-3d86-41d4-829f-25422fc49e6f(String), 20201113170709fd1044ed-e328-4ffe-b558-d59b73fbcd29(String), 2020111417290618d78dd7-70ce-4600-b0ad-0fbcf230da4b(String), 2020111417290648004d90-fde2-416b-906b-93140f9ee342(String), 20201114172906a7ec99dc-be03-4ca1-832b-6189ee267b7e(String), 20201114172906b2870127-abc7-4ec9-8420-3a9cc7bd00b2(String), 20201114172906d9e589e4-8460-4c56-b270-043083a1007e(String), 20201114172906f8e7fa01-4276-47cc-933b-9c1c2dfe2284(String), 20201116151934107f21d8-dc22-4a07-9b69-7d4a5afc5f49(String), 2020111615193423230f7d-c952-425e-a443-c88d48e4e2e8(String), 202011161519342ba324f5-d4b0-4abd-805d-e208fde54c52(String), 202011161519345046ed7a-7325-4297-ba65-6c27b63bb8eb(String), 202011161519347ec51bf7-ccf6-4ce8-b76c-1b8d8f19646a(String), 20201116151934db12c5d4-d5bd-44fa-890f-97542c92559c(String)
2020-11-16 15:20:59.954 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.deleteByExample:143] - <==    Updates: 18
2020-11-16 15:20:59.995 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:20:59.995 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:20:59.996 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:20:59.954(Timestamp), (String), 调用deleteVideoRecord 删除视频任务(String), 0(String), deleteVideoRecord(String), {"data":["2020111317070923591886-8123-4f99-b27e-419853294ad6","202011131707098bff6ed4-a7fd-4bce-ad4e-4e5d8977dd8b","20201113170709ae64156a-eff5-4ca7-bfac-95180241f09f","20201113170709af72b5b4-3ca4-458e-91b4-d725ab6aefe8","20201113170709cd3f1fbd-3d86-41d4-829f-25422fc49e6f","20201113170709fd1044ed-e328-4ffe-b558-d59b73fbcd29","2020111417290618d78dd7-70ce-4600-b0ad-0fbcf230da4b","2020111417290648004d90-fde2-416b-906b-93140f9ee342","20201114172906a7ec99dc-be03-4ca1-832b-6189ee267b7e","20201114172906b2870127-abc7-4ec9-8420-3a9cc7bd00b2","20201114172906d9e589e4-8460-4c56-b270-043083a1007e","20201114172906f8e7fa01-4276-47cc-933b-9c1c2dfe2284","20201116151934107f21d8-dc22-4a07-9b69-7d4a5afc5f49","2020111615193423230f7d-c952-425e-a443-c88d48e4e2e8","202011161519342ba324f5-d4b0-4abd-805d-e208fde54c52","202011161519345046ed7a-7325-4297-ba65-6c27b63bb8eb","202011161519347ec51bf7-ccf6-4ce8-b76c-1b8d8f19646a","20201116151934db12c5d4-d5bd-44fa-890f-97542c92559c"]}(String)
2020-11-16 15:20:59.998 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:20:59.998 [http-nio-10001-exec-5] INFO  [com.data.big.service.impl.ServiceImpl:2680] - 调用deleteVideoRecord 删除视频任务 id=[2020111317070923591886-8123-4f99-b27e-419853294ad6, 202011131707098bff6ed4-a7fd-4bce-ad4e-4e5d8977dd8b, 20201113170709ae64156a-eff5-4ca7-bfac-95180241f09f, 20201113170709af72b5b4-3ca4-458e-91b4-d725ab6aefe8, 20201113170709cd3f1fbd-3d86-41d4-829f-25422fc49e6f, 20201113170709fd1044ed-e328-4ffe-b558-d59b73fbcd29, 2020111417290618d78dd7-70ce-4600-b0ad-0fbcf230da4b, 2020111417290648004d90-fde2-416b-906b-93140f9ee342, 20201114172906a7ec99dc-be03-4ca1-832b-6189ee267b7e, 20201114172906b2870127-abc7-4ec9-8420-3a9cc7bd00b2, 20201114172906d9e589e4-8460-4c56-b270-043083a1007e, 20201114172906f8e7fa01-4276-47cc-933b-9c1c2dfe2284, 20201116151934107f21d8-dc22-4a07-9b69-7d4a5afc5f49, 2020111615193423230f7d-c952-425e-a443-c88d48e4e2e8, 202011161519342ba324f5-d4b0-4abd-805d-e208fde54c52, 202011161519345046ed7a-7325-4297-ba65-6c27b63bb8eb, 202011161519347ec51bf7-ccf6-4ce8-b76c-1b8d8f19646a, 20201116151934db12c5d4-d5bd-44fa-890f-97542c92559c]
2020-11-16 15:21:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:21:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:21:00.003 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:00.004 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:21:00.006 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:21:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:21:00.006 [Thread-32] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 15:21:00.009 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:21:00.009 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:21:00.036 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9375
2020-11-16 15:21:00.037 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:00.038 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 15:21:00.038 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 15:21:00.039 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 15:21:00.794 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:21:00.795 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:21:12.036 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:12.037 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:12.037 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:12.037 [http-nio-10001-exec-9] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9387755102040817
2020-11-16 15:21:12.037 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:21:12.037 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:12.037 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:21:12.038 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:12.038 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:21:12.038 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:21:12.038 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:21:12.038 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:21:12.039 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:21:12.040 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:21:12.040 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:21:12.041 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:21:12.048 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:12.048 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:12.048 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:12.048 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:21:12.049 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:12.049 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:21:12.049 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:21:12.051 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:21:14.181 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:14.182 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:14.182 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:21:14.183 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:14.183 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:14.184 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:21:14.184 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:21:14.184 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:21:20.748 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:20.749 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:20.749 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:20.749 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:21:20.750 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:20.750 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:21:20.750 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:21:20.751 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:21:26.676 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:26.677 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, kssj, jssj, `status`, video_type ) values ( ?, ?, ?, ?, ?, ? ) 
2020-11-16 15:21:26.677 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 20201116152126c48197c0-d036-4b5f-b53b-b52ce4c48249(String), 21AC001203000003(String), 2020-11-10 00:00:00(String), 2020-12-16 00:00:00(String), 0(String), zidingyi(String)
2020-11-16 15:21:26.677 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:26.677 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, kssj, jssj, `status`, video_type ) values ( ?, ?, ?, ?, ?, ? ) 
2020-11-16 15:21:26.677 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 2020111615212666f8111f-0c80-46e9-81b8-bf6f7b6e2135(String), 21AC001203000009(String), 2020-11-10 00:00:00(String), 2020-12-16 00:00:00(String), 0(String), zidingyi(String)
2020-11-16 15:21:26.679 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:26.679 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:26.680 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, kssj, jssj, `status`, video_type ) values ( ?, ?, ?, ?, ?, ? ) 
2020-11-16 15:21:26.680 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, kssj, jssj, `status`, video_type ) values ( ?, ?, ?, ?, ?, ? ) 
2020-11-16 15:21:26.680 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 20201116152126caa8e794-4c2a-4714-b24a-3ad04d42f306(String), 21AC001203000013(String), 2020-11-10 00:00:00(String), 2020-12-16 00:00:00(String), 0(String), zidingyi(String)
2020-11-16 15:21:26.680 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 20201116152126cf2ece63-17a3-469a-adb4-fbaa2e02865f(String), 21AC001203000011(String), 2020-11-10 00:00:00(String), 2020-12-16 00:00:00(String), 0(String), zidingyi(String)
2020-11-16 15:21:26.681 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 15:21:26.681 [http-nio-10001-exec-7] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 1371725509, id=20201116152126c48197c0-d036-4b5f-b53b-b52ce4c48249, ipcid=21AC001203000003, kssj=2020-11-10 00:00:00, jssj=2020-12-16 00:00:00, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 15:21:26.681 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:26.682 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, kssj, jssj, `status`, video_type ) values ( ?, ?, ?, ?, ?, ? ) 
2020-11-16 15:21:26.682 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 15:21:26.683 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 2020111615212650a7c748-4337-4050-a42b-a71a50104dc0(String), 21AC001204010019(String), 2020-11-10 00:00:00(String), 2020-12-16 00:00:00(String), 0(String), zidingyi(String)
2020-11-16 15:21:26.683 [http-nio-10001-exec-3] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 1803241659, id=2020111615212666f8111f-0c80-46e9-81b8-bf6f7b6e2135, ipcid=21AC001203000009, kssj=2020-11-10 00:00:00, jssj=2020-12-16 00:00:00, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 15:21:26.683 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 15:21:26.683 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 15:21:26.684 [http-nio-10001-exec-6] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 246472789, id=20201116152126cf2ece63-17a3-469a-adb4-fbaa2e02865f, ipcid=21AC001203000011, kssj=2020-11-10 00:00:00, jssj=2020-12-16 00:00:00, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 15:21:26.684 [http-nio-10001-exec-9] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 1218207779, id=20201116152126caa8e794-4c2a-4714-b24a-3ad04d42f306, ipcid=21AC001203000013, kssj=2020-11-10 00:00:00, jssj=2020-12-16 00:00:00, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 15:21:26.685 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 15:21:26.686 [http-nio-10001-exec-1] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 1850478055, id=2020111615212650a7c748-4337-4050-a42b-a71a50104dc0, ipcid=21AC001204010019, kssj=2020-11-10 00:00:00, jssj=2020-12-16 00:00:00, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 15:21:26.697 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:26.698 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, kssj, jssj, `status`, video_type ) values ( ?, ?, ?, ?, ?, ? ) 
2020-11-16 15:21:26.698 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 20201116152126b3e6f7ba-f4a6-464f-bfc8-a320c274aba0(String), 21AC171203000015(String), 2020-11-10 00:00:00(String), 2020-12-16 00:00:00(String), 0(String), zidingyi(String)
2020-11-16 15:21:26.700 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 15:21:26.700 [http-nio-10001-exec-10] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 106592952, id=20201116152126b3e6f7ba-f4a6-464f-bfc8-a320c274aba0, ipcid=21AC171203000015, kssj=2020-11-10 00:00:00, jssj=2020-12-16 00:00:00, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 15:21:30.795 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:21:30.795 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:21:33.782 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:33.783 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:33.783 [http-nio-10001-exec-8] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.94
2020-11-16 15:21:33.784 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:33.784 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:33.784 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:21:33.784 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:21:33.785 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:21:33.785 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:21:33.786 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:33.786 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 15:21:33.787 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 15:21:33.788 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 15:21:35.752 [http-nio-10001-exec-5] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9411764705882353
2020-11-16 15:21:35.755 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:35.756 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 15:21:35.756 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 15:21:35.757 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 15:21:37.585 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9423076923076923
2020-11-16 15:21:37.592 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:37.594 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 15:21:37.594 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 15:21:37.596 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 15:21:37.598 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord:143] - ==>  Preparing: select DISTINCT vf.*,ca.* from video_file vf left join camera ca on vf.IPCID=ca.device_id WHERE ( vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? ) LIMIT ? 
2020-11-16 15:21:37.598 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord:143] - ==> Parameters: 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String), 20(Integer)
2020-11-16 15:21:37.601 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord:143] - <==      Total: 6
2020-11-16 15:21:37.602 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:37.602 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFileId:143] - ==>  Preparing: select vf.id, vt.id video_fag,vt.ipcid ipcid_fag,d.DESCS tag ,vt.rktime,vt.video_file_id from video_file vf left join video_tag vt on vf.id=vt.video_file_id left join dictionary d on d.id=vt.tag where vt.video_file_id in ( ? , ? , ? , ? , ? , ? ) 
2020-11-16 15:21:37.603 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFileId:143] - ==> Parameters: 2020111615212650a7c748-4337-4050-a42b-a71a50104dc0(String), 2020111615212666f8111f-0c80-46e9-81b8-bf6f7b6e2135(String), 20201116152126b3e6f7ba-f4a6-464f-bfc8-a320c274aba0(String), 20201116152126c48197c0-d036-4b5f-b53b-b52ce4c48249(String), 20201116152126caa8e794-4c2a-4714-b24a-3ad04d42f306(String), 20201116152126cf2ece63-17a3-469a-adb4-fbaa2e02865f(String)
2020-11-16 15:21:37.609 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFileId:143] - <==      Total: 0
2020-11-16 15:21:37.610 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:37.610 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFag:143] - ==>  Preparing: select vf.id, it.id video_ipc_id,it.ipcid ipcid_video_tag, it.tag tag_video_tag,it.rktime rktime_video_tag from video_file vf left join ipc_tag it on vf.IPCID=it.ipcid where it.ipcid in ( ? , ? , ? , ? , ? , ? ) 
2020-11-16 15:21:37.611 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFag:143] - ==> Parameters: 21AC001204010019(String), 21AC001203000009(String), 21AC171203000015(String), 21AC001203000003(String), 21AC001203000013(String), 21AC001203000011(String)
2020-11-16 15:21:37.616 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFag:143] - <==      Total: 30
2020-11-16 15:21:50.133 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:50.133 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:50.134 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:50.134 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:50.134 [http-nio-10001-exec-9] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9433962264150944
2020-11-16 15:21:50.135 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:21:50.135 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:21:50.135 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:50.136 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:21:50.136 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:21:50.137 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:21:50.137 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:21:50.138 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:21:50.139 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:50.139 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:50.139 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:50.139 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:50.140 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:21:50.140 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:21:50.140 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:21:50.140 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:21:50.141 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:21:50.141 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:21:50.141 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:21:57.187 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:57.188 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:21:57.188 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:57.189 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:21:57.189 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:21:57.189 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 15:21:57.189 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:21:57.189 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 15:22:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:22:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:22:00.004 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:22:00.006 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:22:00.012 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:22:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:22:00.019 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:22:00.020 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:22:00.797 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:22:00.797 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:22:30.798 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:22:30.798 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:22:32.981 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:22:32.982 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, `status`, video_type ) values ( ?, ?, ?, ? ) 
2020-11-16 15:22:32.982 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 20201116152232a47ca8a9-d56e-4c26-974f-92740f463a2f(String), 21AC001203000003(String), 0(String), zidingyi(String)
2020-11-16 15:22:32.987 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 15:22:32.988 [http-nio-10001-exec-5] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 1695690917, id=20201116152232a47ca8a9-d56e-4c26-974f-92740f463a2f, ipcid=21AC001203000003, kssj=null, jssj=null, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 15:22:44.318 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:22:44.318 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:22:44.320 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:22:44.320 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9444444444444444
2020-11-16 15:22:44.320 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:22:44.320 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:22:44.320 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:22:44.322 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:22:44.322 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:22:44.323 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:22:44.324 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 15:22:44.324 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 15:22:44.325 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 15:22:46.212 [http-nio-10001-exec-10] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9454545454545454
2020-11-16 15:22:46.215 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:22:46.216 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 15:22:46.216 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 15:22:46.217 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 15:22:46.217 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord:143] - ==>  Preparing: select DISTINCT vf.*,ca.* from video_file vf left join camera ca on vf.IPCID=ca.device_id WHERE ( vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? or vf.`status` = ? ) LIMIT ? 
2020-11-16 15:22:46.217 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord:143] - ==> Parameters: 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String), 20(Integer)
2020-11-16 15:22:46.219 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord:143] - <==      Total: 7
2020-11-16 15:22:46.219 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:22:46.220 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFileId:143] - ==>  Preparing: select vf.id, vt.id video_fag,vt.ipcid ipcid_fag,d.DESCS tag ,vt.rktime,vt.video_file_id from video_file vf left join video_tag vt on vf.id=vt.video_file_id left join dictionary d on d.id=vt.tag where vt.video_file_id in ( ? , ? , ? , ? , ? , ? , ? ) 
2020-11-16 15:22:46.220 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFileId:143] - ==> Parameters: 2020111615212650a7c748-4337-4050-a42b-a71a50104dc0(String), 2020111615212666f8111f-0c80-46e9-81b8-bf6f7b6e2135(String), 20201116152126b3e6f7ba-f4a6-464f-bfc8-a320c274aba0(String), 20201116152126c48197c0-d036-4b5f-b53b-b52ce4c48249(String), 20201116152126caa8e794-4c2a-4714-b24a-3ad04d42f306(String), 20201116152126cf2ece63-17a3-469a-adb4-fbaa2e02865f(String), 20201116152232a47ca8a9-d56e-4c26-974f-92740f463a2f(String)
2020-11-16 15:22:46.221 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFileId:143] - <==      Total: 0
2020-11-16 15:22:46.222 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:22:46.222 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFag:143] - ==>  Preparing: select vf.id, it.id video_ipc_id,it.ipcid ipcid_video_tag, it.tag tag_video_tag,it.rktime rktime_video_tag from video_file vf left join ipc_tag it on vf.IPCID=it.ipcid where it.ipcid in ( ? , ? , ? , ? , ? , ? , ? ) 
2020-11-16 15:22:46.222 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFag:143] - ==> Parameters: 21AC001204010019(String), 21AC001203000009(String), 21AC171203000015(String), 21AC001203000003(String), 21AC001203000013(String), 21AC001203000011(String), 21AC001203000003(String)
2020-11-16 15:22:46.225 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.selectByVideoFag:143] - <==      Total: 35
2020-11-16 15:23:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:23:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:23:00.003 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:23:00.005 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:23:00.006 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:23:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:23:00.010 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:23:00.010 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:23:00.800 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:23:00.800 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:23:26.239 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:23:26.240 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:23:26.240 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:23:26.240 [http-nio-10001-exec-8] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9464285714285714
2020-11-16 15:23:26.240 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:23:26.240 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:23:26.241 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:23:26.241 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:23:26.241 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:23:26.241 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:23:26.241 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:23:26.242 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:23:26.242 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:23:26.243 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:23:26.244 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:23:26.245 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:23:26.250 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:23:26.250 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:23:26.250 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:23:26.250 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:23:26.250 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:23:26.250 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:23:26.251 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:23:26.251 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:23:30.802 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:23:30.802 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:24:00.000 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:24:00.000 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:24:00.003 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:24:00.005 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:24:00.007 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:24:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:24:00.012 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:24:00.012 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:24:00.803 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:24:00.803 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:24:12.097 [Thread-31] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 15:24:30.805 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:24:30.805 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:24:53.501 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:24:53.501 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:24:53.501 [http-nio-10001-exec-8] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9473684210526315
2020-11-16 15:24:53.502 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:24:53.502 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:24:53.502 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:24:53.502 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:24:53.502 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:24:53.502 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:24:53.503 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:24:53.503 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:24:53.503 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:24:53.503 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:24:53.505 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:24:53.505 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:24:53.506 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:24:53.539 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:24:53.539 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:24:53.539 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:24:53.539 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:24:53.539 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:24:53.539 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:24:53.541 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:24:53.541 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:25:00.001 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 15:25:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 15:25:00.001 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:25:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:25:00.001 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 15:25:00.001 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:25:00.001 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:25:00.002 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:25:00.002 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:25:00.002 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:25:00.003 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:25:00.001(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 15:25:00.003 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:25:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:25:00.003 [taskScheduler-3] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:25:00.004 [taskScheduler-3] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:25:00.004 [Thread-33] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 15:25:00.007 [taskScheduler-3] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:25:00.008 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:25:00.009 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:25:00.009 [taskScheduler-3] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:25:00.009 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 15:25:00.009 [taskScheduler-3] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:25:00.010 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:25:00.010 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:25:00.011 [taskScheduler-3] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:25:00.013 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:25:00.013 [taskScheduler-3] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:25:00.014 [taskScheduler-3] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:25:00.016 [taskScheduler-3] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:25:00.017 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:25:00.017 [taskScheduler-3] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:25:00.017 [taskScheduler-3] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:25:00.019 [taskScheduler-3] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:25:00.019 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:25:00.019 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:25:00.020 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:25:00.019(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 15:25:00.022 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:25:00.806 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:25:00.806 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:25:30.808 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:25:30.809 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:26:00.001 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:26:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:26:00.005 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:26:00.010 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:26:00.010 [Thread-34] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 15:26:00.011 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:26:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:26:00.017 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:26:00.017 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:26:00.811 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:26:00.811 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:26:06.730 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:26:06.730 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:26:06.733 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:26:06.733 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:26:06.734 [http-nio-10001-exec-8] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9482758620689655
2020-11-16 15:26:06.734 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:26:06.734 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:26:06.736 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:26:06.738 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:26:06.738 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:26:06.739 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:26:06.739 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:26:06.741 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:26:06.742 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:26:06.742 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:26:06.743 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:26:06.743 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:26:06.744 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:26:06.744 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:26:06.744 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:26:06.744 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:26:06.746 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:26:06.746 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:26:06.747 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:26:30.812 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:26:30.812 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:27:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:27:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:27:00.003 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:27:00.004 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:27:00.005 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:27:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:27:00.009 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:27:00.009 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:27:00.814 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:27:00.815 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:27:30.818 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:27:30.818 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:28:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:28:00.001 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:28:00.003 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:28:00.005 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:28:00.006 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:28:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:28:00.010 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:28:00.010 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:28:00.820 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:28:00.820 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:28:30.822 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:28:30.822 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:29:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:29:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:29:00.004 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:29:00.005 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:29:00.006 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:29:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:29:00.012 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:29:00.012 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:29:00.823 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:29:00.823 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:29:12.101 [Thread-33] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 15:29:30.825 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:29:30.825 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:30:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:30:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 15:30:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 15:30:00.004 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:30:00.004 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 15:30:00.005 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:30:00.003 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:30:00.006 [Thread-35] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 15:30:00.006 [taskScheduler-6] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:30:00.006 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:30:00.006 [taskScheduler-6] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:30:00.008 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:30:00.008 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:30:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:30:00.008 [taskScheduler-6] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:30:00.009 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:30:00.010 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:30:00.010 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:30:00.004(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 15:30:00.013 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:30:00.013 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@8ced967: (connection is dead)
2020-11-16 15:30:00.013 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:30:00.015 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1693242: (connection is dead)
2020-11-16 15:30:00.016 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:30:00.016 [taskScheduler-6] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:30:00.017 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 15:30:00.018 [taskScheduler-6] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:30:00.021 [taskScheduler-6] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:30:00.023 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:30:00.023 [taskScheduler-6] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:30:00.024 [taskScheduler-6] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:30:00.026 [taskScheduler-6] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:30:00.028 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:30:00.028 [taskScheduler-6] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:30:00.029 [taskScheduler-6] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:30:00.031 [taskScheduler-6] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:30:00.033 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:30:00.033 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:30:00.034 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:30:00.031(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 15:30:00.036 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:30:00.057 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@722a6bfc
2020-11-16 15:30:00.083 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@4a007646
2020-11-16 15:30:00.826 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:30:00.826 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:30:30.828 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:30:30.828 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:30:51.186 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:30:51.187 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:30:51.187 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:30:51.188 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:30:51.193 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:30:51.194 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:30:51.194 [http-nio-10001-exec-5] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9491525423728814
2020-11-16 15:30:51.194 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:30:51.195 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:30:51.195 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:30:51.196 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:30:51.196 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:30:51.197 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:30:51.197 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:30:51.198 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:30:51.198 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@44359303: (connection is dead)
2020-11-16 15:30:51.198 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:30:51.199 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:30:51.200 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:30:51.200 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:30:51.201 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:30:51.202 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:30:51.203 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:30:51.203 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:30:51.204 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:30:51.225 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@7954eedf
2020-11-16 15:31:00.001 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:31:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:31:00.004 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:31:00.010 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:31:00.012 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:31:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:31:00.012 [Thread-36] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 15:31:00.020 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:31:00.020 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:31:00.830 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:31:00.831 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:31:30.831 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:31:30.832 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:31:31.362 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:31:31.362 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:31:31.364 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:31:31.364 [http-nio-10001-exec-9] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.95
2020-11-16 15:31:31.364 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:31:31.364 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:31:31.364 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:31:31.365 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:31:31.367 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:31:31.367 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:31:31.368 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:31:31.368 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:31:31.368 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:31:31.368 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:31:31.369 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:31:31.369 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:31:31.369 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:31:31.369 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:31:31.370 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:31:31.370 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:31:31.370 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:31:31.382 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:31:31.382 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:31:31.383 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:31:48.210 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7926f92c: (connection has passed maxLifetime)
2020-11-16 15:31:48.262 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@24e6d406
2020-11-16 15:32:00.000 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:32:00.002 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:32:00.003 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:32:00.004 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:32:00.005 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:32:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:32:00.009 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:32:00.009 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:32:00.833 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:32:00.833 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:32:30.834 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:32:30.834 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:33:00.000 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:33:00.000 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:33:00.002 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:33:00.004 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:33:00.005 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:33:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:33:00.010 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:33:00.010 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:33:00.836 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:33:00.836 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:33:09.315 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:33:09.315 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:33:09.318 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:33:09.318 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:33:09.319 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:33:09.319 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:33:09.320 [http-nio-10001-exec-10] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9508196721311475
2020-11-16 15:33:09.322 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:33:09.325 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:33:09.333 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:33:09.333 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:33:09.334 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:33:09.335 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:33:09.335 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:33:09.336 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:33:09.336 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:33:09.336 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:33:09.336 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:33:09.336 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:33:09.337 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:33:09.337 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:33:09.337 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:33:09.337 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:33:09.340 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:33:30.837 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:33:30.837 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:33:51.377 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:33:51.377 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:33:51.378 [http-nio-10001-exec-2] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9516129032258065
2020-11-16 15:33:51.378 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:33:51.378 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:33:51.378 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:33:51.378 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:33:51.381 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:33:51.381 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:33:51.382 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:33:51.382 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:33:51.382 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:33:51.383 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:33:51.383 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:33:51.384 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:33:51.384 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:33:51.385 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:33:51.385 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:33:51.386 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:33:51.386 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:33:51.388 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:33:51.395 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:33:51.396 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:33:51.397 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:33:51.423 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@77155dca
2020-11-16 15:34:00.000 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:34:00.001 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:34:00.002 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:34:00.004 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:34:00.006 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:34:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:34:00.017 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:34:00.017 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:34:00.838 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=6, active=0, idle=6, waiting=0)
2020-11-16 15:34:00.838 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=6, active=0, idle=6, waiting=0)
2020-11-16 15:34:12.106 [Thread-35] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 15:34:30.840 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=6, active=0, idle=6, waiting=0)
2020-11-16 15:34:30.840 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:34:30.840 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@77155dca: (connection has passed idleTimeout)
2020-11-16 15:35:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 15:35:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 15:35:00.003 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:35:00.003 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:35:00.003 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:35:00.003 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:35:00.004 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 15:35:00.004 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:35:00.005 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:35:00.005 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:35:00.005 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:35:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:35:00.005 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:35:00.003(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 15:35:00.005 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:35:00.006 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:35:00.008 [Thread-37] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 15:35:00.008 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:35:00.009 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:35:00.010 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 15:35:00.010 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:35:00.010 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:35:00.010 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:35:00.011 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:35:00.011 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:35:00.014 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:35:00.017 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:35:00.017 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:35:00.018 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:35:00.021 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:35:00.023 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:35:00.024 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:35:00.024 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:35:00.027 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:35:00.028 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:35:00.028 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:35:00.029 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:35:00.027(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 15:35:00.032 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:35:00.841 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:35:00.841 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:35:30.843 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:35:30.843 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:36:00.000 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:36:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:36:00.004 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:36:00.008 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:36:00.009 [Thread-38] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 15:36:00.010 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:36:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:36:00.014 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:36:00.014 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:36:00.845 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:36:00.845 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:36:30.846 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:36:30.846 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:37:00.001 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:37:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:37:00.004 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:37:00.006 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:37:00.006 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:37:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:37:00.011 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:37:00.012 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:37:00.847 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:37:00.847 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:37:30.848 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:37:30.849 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:38:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:38:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:38:00.003 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:38:00.006 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:38:00.007 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:38:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:38:00.012 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:38:00.013 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:38:00.850 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:38:00.850 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:38:30.851 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:38:30.851 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:39:00.001 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:39:00.002 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:39:00.005 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:39:00.010 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6d3f270b: (connection is dead)
2020-11-16 15:39:00.011 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:39:00.011 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:39:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:39:00.016 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:39:00.017 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:39:00.038 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@1ef51d64
2020-11-16 15:39:00.853 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:39:00.854 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:39:12.111 [Thread-37] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 15:39:23.221 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:39:23.221 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:39:23.223 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:39:23.223 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:39:23.224 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:39:23.224 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:39:23.227 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:39:23.228 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:39:23.246 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:39:23.247 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9523809523809523
2020-11-16 15:39:23.249 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:39:23.250 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:39:23.251 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:39:23.252 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:39:23.253 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7954eedf: (connection is dead)
2020-11-16 15:39:23.253 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:39:23.253 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:39:23.256 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:39:23.256 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:39:23.257 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:39:23.259 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:39:23.262 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:39:23.264 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@24e6d406: (connection is dead)
2020-11-16 15:39:23.264 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:39:23.265 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:39:23.266 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:39:23.288 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@560b82d7
2020-11-16 15:39:23.313 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@22d0e376
2020-11-16 15:39:30.855 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:39:30.855 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:40:00.000 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 15:40:00.001 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:40:00.003 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:40:00.003 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 15:40:00.003 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:00.003 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:00.004 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 15:40:00.004 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:40:00.005 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:40:00.005 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:00.007 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:40:00.003(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 15:40:00.007 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:40:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:40:00.007 [Thread-39] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 15:40:00.008 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:40:00.008 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:40:00.011 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:40:00.011 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:40:00.011 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:40:00.011 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 15:40:00.011 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:40:00.012 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:00.012 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:40:00.012 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:40:00.014 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:40:00.015 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:00.015 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:40:00.016 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:40:00.017 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:40:00.019 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:00.019 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:40:00.019 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:40:00.022 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:40:00.022 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:00.022 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:40:00.022 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:40:00.022(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 15:40:00.025 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:40:00.856 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:40:00.857 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:40:04.382 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:04.383 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:04.384 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:40:04.385 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:40:04.385 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 15:40:04.385 [http-nio-10001-exec-6] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.953125
2020-11-16 15:40:04.385 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:40:04.385 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:40:04.385 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:40:04.387 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:04.387 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 15:40:04.387 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 15:40:04.389 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 15:40:07.569 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:07.570 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:07.570 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:40:07.571 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 15:40:07.571 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:40:07.571 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:40:07.572 [http-nio-10001-exec-4] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9538461538461539
2020-11-16 15:40:07.572 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 15:40:07.573 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:07.573 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:40:07.573 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 15:40:07.573 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 15:40:07.575 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 15:40:07.575 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:07.575 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:40:07.575 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:40:07.575 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:40:07.576 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 15:40:07.576 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 15:40:07.576 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 15:40:07.576 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 15:40:07.577 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:40:07.577 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 15:40:07.577 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 15:40:30.858 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:40:30.859 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:41:00.001 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:41:00.002 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:41:00.005 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:41:00.008 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:41:00.008 [Thread-40] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 15:41:00.009 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:41:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:41:00.015 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:41:00.015 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:41:00.859 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:41:00.860 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:41:30.861 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:41:30.861 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:42:00.001 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:42:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:42:00.005 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:42:00.006 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:42:00.007 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:42:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:42:00.012 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:42:00.012 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:42:00.864 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:42:00.864 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:42:30.865 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:42:30.865 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:43:00.002 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:43:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:43:00.005 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:43:00.006 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:43:00.007 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:43:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:43:00.012 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:43:00.012 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:43:00.867 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:43:00.867 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:43:30.869 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:43:30.870 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:44:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:44:00.001 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:44:00.004 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:44:00.005 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:44:00.005 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:44:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:44:00.011 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:44:00.011 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:44:00.872 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:44:00.872 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:44:12.115 [Thread-39] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 15:44:30.874 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:44:30.874 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:45:00.001 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 15:45:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:45:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:45:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 15:45:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 15:45:00.002 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:45:00.002 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:45:00.003 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:45:00.003 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:45:00.003 [Thread-41] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 15:45:00.003 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:45:00.004 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:45:00.002(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 15:45:00.005 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:45:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:45:00.010 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1ef51d64: (connection is dead)
2020-11-16 15:45:00.010 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:45:00.011 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:45:00.014 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:45:00.014 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@560b82d7: (connection is dead)
2020-11-16 15:45:00.014 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:45:00.014 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 15:45:00.014 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:45:00.016 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:45:00.018 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:45:00.019 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:45:00.019 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:45:00.021 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:45:00.022 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:45:00.022 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:45:00.023 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:45:00.025 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:45:00.026 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:45:00.026 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:45:00.027 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:45:00.028 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:45:00.028 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:45:00.029 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:45:00.029 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:45:00.028(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 15:45:00.031 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:45:00.039 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@5be60870
2020-11-16 15:45:00.062 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@2fb01003
2020-11-16 15:45:00.875 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:45:00.875 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:45:30.877 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:45:30.877 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:46:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:46:00.002 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:46:00.003 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:46:00.006 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:46:00.007 [Thread-42] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 15:46:00.008 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:46:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:46:00.016 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:46:00.016 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:46:00.878 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:46:00.878 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:46:30.879 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:46:30.879 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:47:00.000 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:47:00.000 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:47:00.001 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:47:00.003 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:47:00.004 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:47:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:47:00.012 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:47:00.012 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:47:00.881 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:47:00.881 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:47:30.882 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:47:30.882 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:48:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:48:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:48:00.006 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:48:00.008 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:48:00.008 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:48:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:48:00.013 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:48:00.013 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:48:00.884 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:48:00.884 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:48:30.886 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:48:30.886 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:49:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:49:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:49:00.004 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:49:00.007 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4a007646: (connection is dead)
2020-11-16 15:49:00.008 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:49:00.008 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:49:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:49:00.012 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:49:00.012 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:49:00.036 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@742a8de1
2020-11-16 15:49:00.888 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:49:00.889 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:49:12.074 [Thread-41] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 15:49:30.889 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:49:30.889 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:50:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 15:50:00.003 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:50:00.003 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 15:50:00.003 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:50:00.003 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 15:50:00.003 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:50:00.003 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:50:00.006 [Thread-43] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 15:50:00.007 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:50:00.008 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:50:00.010 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:50:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:50:00.014 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@22d0e376: (connection is dead)
2020-11-16 15:50:00.015 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:50:00.015 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5be60870: (connection is dead)
2020-11-16 15:50:00.016 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:50:00.016 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:50:00.016 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:50:00.017 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2fb01003: (connection is dead)
2020-11-16 15:50:00.017 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:50:00.018 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:50:00.003(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 15:50:00.018 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:50:00.020 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:50:00.020 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:50:00.020 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 15:50:00.020 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:50:00.020 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:50:00.023 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:50:00.024 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:50:00.024 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:50:00.024 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:50:00.026 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:50:00.027 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:50:00.027 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:50:00.028 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:50:00.029 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:50:00.030 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:50:00.030 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:50:00.030 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:50:00.029(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 15:50:00.032 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:50:00.045 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@29851942
2020-11-16 15:50:00.068 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d218e0f
2020-11-16 15:50:00.091 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@34b974bb
2020-11-16 15:50:00.891 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:50:00.891 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:50:30.891 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:50:30.892 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:51:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:51:00.001 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:51:00.008 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:51:00.009 [Thread-44] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 15:51:00.011 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:51:00.013 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:51:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:51:00.020 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:51:00.020 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:51:00.893 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:51:00.893 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:51:30.894 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:51:30.894 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:52:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:52:00.002 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:52:00.003 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:52:00.005 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:52:00.005 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:52:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:52:00.011 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:52:00.011 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:52:00.896 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:52:00.896 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:52:30.897 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:52:30.897 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:53:00.000 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:53:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:53:00.001 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:53:00.003 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:53:00.003 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:53:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:53:00.008 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:53:00.009 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:53:00.898 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:53:00.899 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:53:30.899 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:53:30.899 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:54:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:54:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:54:00.003 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:54:00.005 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:54:00.005 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:54:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:54:00.008 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:54:00.008 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:54:00.901 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:54:00.901 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:54:12.144 [Thread-43] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 15:54:30.902 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:54:30.902 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:55:00.000 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:55:00.003 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:55:00.004 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 15:55:00.004 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 15:55:00.006 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:55:00.006 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 15:55:00.007 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:55:00.009 [Thread-45] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 15:55:00.010 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:55:00.012 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:55:00.012 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:55:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:55:00.020 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:55:00.021 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:55:00.021 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:55:00.022 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@742a8de1: (connection is dead)
2020-11-16 15:55:00.024 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@29851942: (connection is dead)
2020-11-16 15:55:00.024 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:55:00.006(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 15:55:00.026 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5d218e0f: (connection is dead)
2020-11-16 15:55:00.028 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:55:00.029 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 15:55:00.031 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@34b974bb: (connection is dead)
2020-11-16 15:55:00.031 [taskScheduler-5] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:55:00.031 [taskScheduler-5] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:55:00.034 [taskScheduler-5] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:55:00.035 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:55:00.035 [taskScheduler-5] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:55:00.035 [taskScheduler-5] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:55:00.037 [taskScheduler-5] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:55:00.038 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:55:00.038 [taskScheduler-5] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:55:00.038 [taskScheduler-5] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:55:00.040 [taskScheduler-5] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:55:00.041 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:55:00.041 [taskScheduler-5] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 15:55:00.041 [taskScheduler-5] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 15:55:00.042 [taskScheduler-5] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 15:55:00.043 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:55:00.043 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:55:00.043 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:55:00.043(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 15:55:00.045 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:55:00.053 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@6a4f4628
2020-11-16 15:55:00.076 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@1e28c881
2020-11-16 15:55:00.099 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@761050c7
2020-11-16 15:55:00.121 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@4b2c8181
2020-11-16 15:55:00.121 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After adding stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:55:00.904 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:55:00.904 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:55:30.905 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:55:30.906 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:56:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:56:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:56:00.004 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:56:00.005 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:56:00.006 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:56:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:56:00.010 [Thread-46] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 15:56:00.011 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:56:00.012 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:56:00.907 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:56:00.907 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:56:30.907 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:56:30.907 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:57:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:57:00.001 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:57:00.002 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:57:00.003 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:57:00.004 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:57:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:57:00.011 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:57:00.012 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:57:00.909 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:57:00.909 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:57:30.910 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:57:30.911 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:58:00.000 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:58:00.000 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:58:00.003 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:58:00.005 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:58:00.006 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:58:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:58:00.009 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:58:00.009 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:58:00.912 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:58:00.912 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:58:30.915 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:58:30.917 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:59:00.000 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 15:59:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 15:59:00.004 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 15:59:00.006 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 15:59:00.007 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 15:59:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 15:59:00.011 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 15:59:00.011 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 15:59:00.918 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:59:00.919 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:59:12.112 [Thread-45] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 15:59:25.163 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@722a6bfc: (connection has passed maxLifetime)
2020-11-16 15:59:25.201 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@13ffd7f7
2020-11-16 15:59:30.922 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 15:59:30.922 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:00:00.003 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:00:00.003 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 16:00:00.003 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 16:00:00.004 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:00:00.006 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 16:00:00.006 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:00:00.008 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:00:00.013 [Thread-47] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 16:00:00.022 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:00:00.029 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6a4f4628: (connection is dead)
2020-11-16 16:00:00.032 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1e28c881: (connection is dead)
2020-11-16 16:00:00.033 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@761050c7: (connection is dead)
2020-11-16 16:00:00.033 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:00:00.034 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:00:00.005(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 16:00:00.034 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4b2c8181: (connection is dead)
2020-11-16 16:00:00.037 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:00:00.037 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 16:00:00.037 [taskScheduler-9] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:00:00.038 [taskScheduler-9] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:00:00.040 [taskScheduler-9] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:00:00.040 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:00:00.040 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:00:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:00:00.041 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:00:00.043 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:00:00.043 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:00:00.043 [taskScheduler-9] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:00:00.043 [taskScheduler-9] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:00:00.045 [taskScheduler-9] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:00:00.046 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:00:00.046 [taskScheduler-9] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:00:00.046 [taskScheduler-9] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:00:00.048 [taskScheduler-9] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:00:00.048 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:00:00.048 [taskScheduler-9] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:00:00.049 [taskScheduler-9] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:00:00.050 [taskScheduler-9] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:00:00.050 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:00:00.050 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:00:00.050 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:00:00.05(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 16:00:00.053 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:00:00.059 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@5af89ae6
2020-11-16 16:00:00.081 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e2f1522
2020-11-16 16:00:00.106 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@39bd28e4
2020-11-16 16:00:00.129 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@7b9bebee
2020-11-16 16:00:00.129 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After adding stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:00:00.924 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:00:00.924 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:00:30.925 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:00:30.925 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:01:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:01:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:01:00.003 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:01:00.007 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:01:00.019 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:01:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:01:00.021 [Thread-48] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 16:01:00.036 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:01:00.039 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:01:00.927 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:01:00.928 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:01:30.930 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:01:30.930 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:02:00.000 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:02:00.000 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:02:00.006 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:02:00.009 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:02:00.010 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:02:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:02:00.015 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:02:00.015 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:02:00.931 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:02:00.931 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:02:30.933 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:02:30.934 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:03:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:03:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:03:00.003 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:03:00.005 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:03:00.006 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:03:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:03:00.008 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:03:00.008 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:03:00.935 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:03:00.935 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:03:30.936 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:03:30.937 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:04:00.001 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:04:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:04:00.003 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:04:00.004 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:04:00.005 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:04:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:04:00.011 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:04:00.011 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:04:00.937 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:04:00.938 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:04:12.105 [Thread-47] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 16:04:30.939 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:04:30.939 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:05:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:05:00.002 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:05:00.003 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:05:00.004 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:05:00.005 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 16:05:00.005 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 16:05:00.006 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:05:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:05:00.006 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:05:00.008 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 16:05:00.009 [Thread-49] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 16:05:00.013 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:05:00.013 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5af89ae6: (connection is dead)
2020-11-16 16:05:00.013 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:05:00.015 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2e2f1522: (connection is dead)
2020-11-16 16:05:00.015 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:05:00.016 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:05:00.005(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 16:05:00.018 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:05:00.018 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 16:05:00.023 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:05:00.023 [taskScheduler-10] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:05:00.023 [taskScheduler-10] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:05:00.024 [taskScheduler-10] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:05:00.031 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:05:00.031 [taskScheduler-10] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:05:00.031 [taskScheduler-10] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:05:00.032 [taskScheduler-10] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:05:00.039 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:05:00.039 [taskScheduler-10] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:05:00.039 [taskScheduler-10] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:05:00.040 [taskScheduler-10] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:05:00.041 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@43c6bf2f
2020-11-16 16:05:00.046 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:05:00.046 [taskScheduler-10] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:05:00.046 [taskScheduler-10] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:05:00.047 [taskScheduler-10] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:05:00.047 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:05:00.048 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:05:00.048 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:05:00.047(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 16:05:00.049 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:05:00.064 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@37889ccf
2020-11-16 16:05:00.065 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After adding stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:05:00.941 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:05:00.941 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:05:30.942 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:05:30.942 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:06:00.000 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:06:00.000 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:06:00.004 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:06:00.005 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:06:00.006 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:06:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:06:00.011 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:06:00.011 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:06:00.011 [Thread-50] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 16:06:00.943 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:06:00.943 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:06:30.945 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:06:30.946 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:07:00.000 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:07:00.001 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:07:00.003 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:07:00.005 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:07:00.006 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:07:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:07:00.010 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:07:00.010 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:07:00.947 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:07:00.948 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:07:17.702 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:07:17.702 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:07:17.704 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:07:17.704 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:07:17.707 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@39bd28e4: (connection is dead)
2020-11-16 16:07:17.708 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:07:17.709 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7b9bebee: (connection is dead)
2020-11-16 16:07:17.709 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:07:17.710 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:07:17.711 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:07:17.727 [http-nio-10001-exec-8] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9545454545454546
2020-11-16 16:07:17.728 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:07:17.728 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:07:17.729 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:07:17.730 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:07:17.730 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:07:17.731 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:07:17.731 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:07:17.732 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:07:17.732 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:07:17.733 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:07:17.733 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@285fba44
2020-11-16 16:07:17.734 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:07:17.739 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:07:17.739 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:07:17.739 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:07:17.740 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:07:17.756 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@5c7a7e53
2020-11-16 16:07:30.949 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:07:30.949 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:07:42.543 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:07:42.544 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:07:42.546 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:07:42.546 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:07:42.546 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9552238805970149
2020-11-16 16:07:42.546 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:07:42.546 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:07:42.547 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:07:42.547 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:07:42.548 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:07:42.550 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:07:42.551 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:07:42.551 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:07:42.551 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:07:42.551 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:07:42.552 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:07:42.552 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:07:42.552 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:07:42.553 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:07:42.554 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:07:42.554 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:07:42.554 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:07:42.555 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:07:42.556 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:08:00.002 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:08:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:08:00.004 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:08:00.006 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:08:00.007 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:08:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:08:00.012 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:08:00.013 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:08:00.950 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:08:00.950 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:08:22.895 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:08:22.896 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:08:22.896 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:08:22.896 [http-nio-10001-exec-5] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9558823529411765
2020-11-16 16:08:22.897 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:08:22.897 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:08:22.897 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:08:22.897 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:08:22.900 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:08:22.901 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:08:22.900 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:08:22.901 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:08:22.901 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:08:22.902 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:08:22.901 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:08:22.903 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:08:22.903 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:08:22.903 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:08:22.903 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:08:22.904 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:08:22.904 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:08:22.904 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:08:22.905 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:08:22.906 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:08:30.951 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:08:30.951 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:08:39.663 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:08:39.664 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:08:39.665 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:08:39.665 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:08:39.665 [http-nio-10001-exec-2] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9565217391304348
2020-11-16 16:08:39.665 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:08:39.665 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:08:39.666 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:08:39.667 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:08:39.667 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:08:39.667 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:08:39.667 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:08:39.668 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:08:39.668 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:08:39.668 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:08:39.668 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:08:39.669 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:08:39.669 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:08:39.669 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:08:39.670 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:08:39.670 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:08:39.670 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:08:39.670 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:08:39.671 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:09:00.000 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:09:00.000 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:09:00.003 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:09:00.005 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:09:00.006 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:09:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:09:00.011 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:09:00.012 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:09:00.954 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:09:00.954 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:09:12.112 [Thread-49] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 16:09:30.956 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:09:30.957 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:10:00.000 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:10:00.000 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:10:00.004 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 16:10:00.004 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 16:10:00.005 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:10:00.005 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:10:00.006 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 16:10:00.006 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:10:00.006 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:10:00.006 [Thread-51] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 16:10:00.007 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:10:00.005(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 16:10:00.007 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:10:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:10:00.007 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:10:00.009 [taskScheduler-6] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:10:00.009 [taskScheduler-6] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:10:00.011 [taskScheduler-6] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:10:00.011 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:10:00.011 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:10:00.012 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:10:00.012 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 16:10:00.012 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:10:00.012 [taskScheduler-6] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:10:00.012 [taskScheduler-6] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:10:00.014 [taskScheduler-6] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:10:00.015 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:10:00.015 [taskScheduler-6] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:10:00.016 [taskScheduler-6] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:10:00.017 [taskScheduler-6] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:10:00.018 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:10:00.018 [taskScheduler-6] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:10:00.018 [taskScheduler-6] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:10:00.020 [taskScheduler-6] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:10:00.020 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:10:00.020 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:10:00.020 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:10:00.02(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 16:10:00.022 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:10:00.958 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:10:00.959 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:10:09.327 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:10:09.327 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:10:09.328 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9571428571428572
2020-11-16 16:10:09.328 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:10:09.328 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:10:09.328 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:10:09.328 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:10:09.328 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:10:09.329 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:10:09.329 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:10:09.329 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:10:09.329 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:10:09.330 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:10:09.331 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:10:09.331 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:10:09.333 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:10:09.335 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:10:09.336 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:10:09.337 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:10:09.338 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:10:09.339 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:10:09.340 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:10:09.340 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:10:09.341 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:10:30.960 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:10:30.960 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:11:00.002 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:11:00.002 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:11:00.003 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:11:00.004 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:11:00.004 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:11:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:11:00.009 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:11:00.009 [Thread-52] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 16:11:00.009 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:11:00.962 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:11:00.962 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:11:30.964 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:11:30.964 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:12:00.000 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:12:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:12:00.002 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:12:00.003 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:12:00.004 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:12:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:12:00.015 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:12:00.016 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:12:00.964 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:12:00.965 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:12:30.966 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:12:30.967 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:13:00.000 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:13:00.000 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:13:00.003 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:13:00.004 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:13:00.005 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:13:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:13:00.011 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:13:00.011 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:13:00.969 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:13:00.970 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:13:30.971 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:13:30.972 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:14:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:14:00.001 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:14:00.003 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:14:00.005 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:14:00.005 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:14:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:14:00.011 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:14:00.011 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:14:00.974 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:14:00.975 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:14:12.102 [Thread-51] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 16:14:30.975 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:14:30.975 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:15:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:15:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 16:15:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:15:00.002 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 16:15:00.003 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:15:00.004 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:15:00.004 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 16:15:00.060 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:15:00.061 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:15:00.065 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:15:00.003(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 16:15:00.071 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:15:00.071 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 16:15:00.071 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:15:00.072 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:15:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:15:00.074 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:15:00.074 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:15:00.074 [taskScheduler-9] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:15:00.074 [taskScheduler-9] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:15:00.075 [taskScheduler-9] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:15:00.076 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:15:00.076 [taskScheduler-9] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:15:00.076 [taskScheduler-9] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:15:00.077 [taskScheduler-9] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:15:00.079 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:15:00.079 [taskScheduler-9] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:15:00.079 [taskScheduler-9] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:15:00.080 [taskScheduler-9] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:15:00.081 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:15:00.081 [taskScheduler-9] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:15:00.081 [taskScheduler-9] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:15:00.082 [taskScheduler-9] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:15:00.083 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:15:00.083 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:15:00.083 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:15:00.082(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 16:15:00.083 [Thread-53] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 16:15:00.083 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@43c6bf2f: (connection is dead)
2020-11-16 16:15:00.083 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@37889ccf: (connection is dead)
2020-11-16 16:15:00.083 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@285fba44: (connection is dead)
2020-11-16 16:15:00.084 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5c7a7e53: (connection is dead)
2020-11-16 16:15:00.085 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:15:00.106 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@4794880c
2020-11-16 16:15:00.129 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@335e7d13
2020-11-16 16:15:00.151 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@115431f7
2020-11-16 16:15:00.172 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@66f7ffd5
2020-11-16 16:15:00.976 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:15:00.976 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:15:30.977 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:15:30.978 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:16:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:16:00.002 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:16:00.004 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:00.006 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:16:00.006 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:16:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:16:00.011 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:16:00.011 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:16:00.061 [Thread-54] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 16:16:00.979 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:16:00.979 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:16:02.414 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:02.414 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:02.417 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:16:02.417 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:16:02.417 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:16:02.417 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:16:02.418 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9577464788732394
2020-11-16 16:16:02.418 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:16:02.419 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:16:02.419 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:02.419 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:16:02.419 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:16:02.420 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:16:02.421 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:16:02.421 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:16:02.422 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:16:02.424 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:02.424 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:02.424 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:16:02.424 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:16:02.424 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:16:02.424 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:16:02.425 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:16:02.425 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:16:19.076 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:19.076 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:19.078 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:16:19.078 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:16:19.078 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:16:19.078 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:16:19.078 [http-nio-10001-exec-5] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9583333333333334
2020-11-16 16:16:19.079 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:16:19.079 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:19.079 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:16:19.079 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:16:19.079 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:16:19.081 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:16:19.081 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:19.081 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:16:19.081 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:16:19.082 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:16:19.082 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:16:19.083 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:19.084 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:16:19.085 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:16:19.085 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:16:19.085 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:16:19.086 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:16:30.981 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:16:30.981 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:16:39.337 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:39.338 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:39.338 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:16:39.339 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:16:39.339 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:16:39.339 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:16:39.339 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:16:39.340 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.958904109589041
2020-11-16 16:16:39.340 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:39.340 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:16:39.341 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:16:39.341 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:16:39.342 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:16:39.342 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:16:39.342 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:39.343 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:16:39.343 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:16:39.343 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:16:39.344 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:16:39.344 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:16:39.344 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:16:39.345 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:16:39.345 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:16:39.346 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:17:00.000 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:17:00.003 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:17:00.004 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:17:00.005 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:17:00.006 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:17:00.003(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:17:00.009 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:17:00.010 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:17:00.983 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:17:00.983 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:17:06.956 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:17:06.957 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:17:06.957 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:17:06.958 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:17:06.958 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:17:06.958 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:17:06.959 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:17:06.959 [http-nio-10001-exec-4] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9594594594594594
2020-11-16 16:17:06.959 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:17:06.960 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:17:06.960 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:17:06.960 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:17:06.963 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:17:06.966 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:17:06.969 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:17:06.970 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:17:06.970 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:17:06.970 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:17:06.970 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:17:06.971 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:17:06.971 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:17:06.971 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:17:06.971 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:17:06.972 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:17:30.985 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:17:30.985 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:18:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:18:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:18:00.003 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:18:00.004 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:18:00.005 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:18:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:18:00.009 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:18:00.009 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:18:00.986 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:18:00.986 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:18:01.068 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:18:01.069 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:18:01.069 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 16:18:01.069 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:18:01.070 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:18:01.070 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:18:01.070 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 16:18:01.071 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 16:18:30.988 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:18:30.988 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:19:00.000 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:19:00.000 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:19:00.002 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:19:00.004 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:19:00.005 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:19:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:19:00.009 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:19:00.009 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:19:00.990 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:19:00.990 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:19:12.145 [Thread-53] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 16:19:30.991 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:19:30.992 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:20:00.000 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:20:00.002 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 16:20:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:20:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 16:20:00.003 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:20:00.004 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 16:20:00.004 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:20:00.005 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:20:00.005 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:20:00.005 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:20:00.005 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:20:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:20:00.005 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:20:00.003(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 16:20:00.006 [taskScheduler-6] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:20:00.007 [taskScheduler-6] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:20:00.007 [Thread-55] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 16:20:00.009 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:20:00.009 [taskScheduler-6] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:20:00.010 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 16:20:00.010 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:20:00.011 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:20:00.011 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:20:00.011 [taskScheduler-6] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:20:00.011 [taskScheduler-6] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:20:00.013 [taskScheduler-6] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:20:00.014 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:20:00.015 [taskScheduler-6] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:20:00.015 [taskScheduler-6] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:20:00.016 [taskScheduler-6] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:20:00.017 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:20:00.018 [taskScheduler-6] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:20:00.018 [taskScheduler-6] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:20:00.019 [taskScheduler-6] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:20:00.020 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:20:00.020 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:20:00.020 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:20:00.019(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 16:20:00.022 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:20:00.994 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:20:00.994 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:20:30.995 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:20:30.995 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:21:00.000 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:21:00.002 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:21:00.002 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:00.003 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:21:00.004 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:21:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:21:00.007 [Thread-56] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 16:21:00.009 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:21:00.009 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:21:00.996 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:21:00.996 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:21:19.893 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:19.896 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:21:19.897 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 16:21:19.900 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:21:19.912 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:19.914 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:21:19.914 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:21:19.917 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:21:19.924 [http-nio-10001-exec-9] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.96
2020-11-16 16:21:19.929 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:19.930 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 16:21:19.930 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 16:21:19.932 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 16:21:21.693 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:21.694 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:21:21.694 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 16:21:21.696 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:21:21.697 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:21.698 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:21:21.699 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: playbackTag(String)
2020-11-16 16:21:21.700 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 7
2020-11-16 16:21:29.238 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:29.238 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:29.239 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:21:29.239 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:21:29.239 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:21:29.239 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:21:29.240 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:21:29.240 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:21:30.924 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9605263157894737
2020-11-16 16:21:30.925 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:30.926 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:21:30.926 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:21:30.927 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:21:30.928 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:21:30.928 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 100(Integer)
2020-11-16 16:21:30.929 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:21:30.997 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:21:30.997 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:21:35.270 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:35.271 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:35.271 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, kssj, jssj, `status`, video_type ) values ( ?, ?, ?, ?, ?, ? ) 
2020-11-16 16:21:35.271 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 20201116162135b6f6aa48-cac3-4d70-81d2-78b0a4358794(String), 21AC001203000003(String), 2020-11-14 00:00:00(String), 2020-11-23 00:00:00(String), 0(String), zidingyi(String)
2020-11-16 16:21:35.271 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, kssj, jssj, `status`, video_type ) values ( ?, ?, ?, ?, ?, ? ) 
2020-11-16 16:21:35.272 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 20201116162135cdbad33b-83fb-48c4-9463-44c0baffa77a(String), 21AC001203000009(String), 2020-11-14 00:00:00(String), 2020-11-23 00:00:00(String), 0(String), zidingyi(String)
2020-11-16 16:21:35.274 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:35.274 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:35.279 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, kssj, jssj, `status`, video_type ) values ( ?, ?, ?, ?, ?, ? ) 
2020-11-16 16:21:35.279 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 16:21:35.279 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 16:21:35.280 [http-nio-10001-exec-10] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 250551414, id=20201116162135cdbad33b-83fb-48c4-9463-44c0baffa77a, ipcid=21AC001203000009, kssj=2020-11-14 00:00:00, jssj=2020-11-23 00:00:00, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 16:21:35.280 [http-nio-10001-exec-8] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 1529845675, id=20201116162135b6f6aa48-cac3-4d70-81d2-78b0a4358794, ipcid=21AC001203000003, kssj=2020-11-14 00:00:00, jssj=2020-11-23 00:00:00, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 16:21:35.280 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 202011161621358366dc30-6265-4d50-a50e-0a36e1ddc649(String), 21AC001203000011(String), 2020-11-14 00:00:00(String), 2020-11-23 00:00:00(String), 0(String), zidingyi(String)
2020-11-16 16:21:35.281 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:35.281 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:35.281 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, kssj, jssj, `status`, video_type ) values ( ?, ?, ?, ?, ?, ? ) 
2020-11-16 16:21:35.281 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, kssj, jssj, `status`, video_type ) values ( ?, ?, ?, ?, ?, ? ) 
2020-11-16 16:21:35.281 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 202011161621357a0c4b92-dbcf-42d3-9e10-28e6d82ece55(String), 21AC001204010019(String), 2020-11-14 00:00:00(String), 2020-11-23 00:00:00(String), 0(String), zidingyi(String)
2020-11-16 16:21:35.281 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 20201116162135f4dfec21-9a29-430b-96c9-57b20236f484(String), 21AC171203000015(String), 2020-11-14 00:00:00(String), 2020-11-23 00:00:00(String), 0(String), zidingyi(String)
2020-11-16 16:21:35.282 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@115431f7: (connection is dead)
2020-11-16 16:21:35.283 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 16:21:35.283 [http-nio-10001-exec-5] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 434636656, id=202011161621358366dc30-6265-4d50-a50e-0a36e1ddc649, ipcid=21AC001203000011, kssj=2020-11-14 00:00:00, jssj=2020-11-23 00:00:00, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 16:21:35.284 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 16:21:35.285 [http-nio-10001-exec-9] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 1032856996, id=202011161621357a0c4b92-dbcf-42d3-9e10-28e6d82ece55, ipcid=21AC001204010019, kssj=2020-11-14 00:00:00, jssj=2020-11-23 00:00:00, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 16:21:35.285 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 16:21:35.285 [http-nio-10001-exec-6] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 280144061, id=20201116162135f4dfec21-9a29-430b-96c9-57b20236f484, ipcid=21AC171203000015, kssj=2020-11-14 00:00:00, jssj=2020-11-23 00:00:00, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 16:21:35.286 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@66f7ffd5: (connection is dead)
2020-11-16 16:21:35.286 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==>  Preparing: insert into video_file ( ID, IPCID, kssj, jssj, `status`, video_type ) values ( ?, ?, ?, ?, ?, ? ) 
2020-11-16 16:21:35.286 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - ==> Parameters: 2020111616213565b70878-40be-4809-b047-17dc9bc3af31(String), 21AC001203000013(String), 2020-11-14 00:00:00(String), 2020-11-23 00:00:00(String), 0(String), zidingyi(String)
2020-11-16 16:21:35.288 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.VideoFileMapper.insertSelective:143] - <==    Updates: 1
2020-11-16 16:21:35.288 [http-nio-10001-exec-4] INFO  [com.data.big.service.impl.ServiceImpl:2721] - 调用addVideoRecord 保存视频任务 VideoFile [Hash = 1555344883, id=2020111616213565b70878-40be-4809-b047-17dc9bc3af31, ipcid=21AC001203000013, kssj=2020-11-14 00:00:00, jssj=2020-11-23 00:00:00, status=0, loadtime=null, path=null, filename=null, fileid=null, uptime=null, bz=null, videoType=zidingyi, alarmId=null, serialVersionUID=1]
2020-11-16 16:21:35.296 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:35.297 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==>  Preparing: insert into video_tag ( id, ipcid, tag, rktime, video_file_id ) values 
2020-11-16 16:21:35.297 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==> Parameters: 
2020-11-16 16:21:35.298 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator:403] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7] for task [
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
### The error may exist in file [D:\workspace\bigWorkspace\big\target\classes\mapping\VideoTagMapper.xml]
### The error may involve com.data.big.mapper.VideoTagMapper.saveAll-Inline
### The error occurred while setting parameters
### SQL: insert into video_tag      ( id,         ipcid,         tag,         rktime,         video_file_id )      values
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
]
2020-11-16 16:21:35.300 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:35.300 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==>  Preparing: insert into video_tag ( id, ipcid, tag, rktime, video_file_id ) values 
2020-11-16 16:21:35.300 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==> Parameters: 
2020-11-16 16:21:35.301 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator:403] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7] for task [
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
### The error may exist in file [D:\workspace\bigWorkspace\big\target\classes\mapping\VideoTagMapper.xml]
### The error may involve com.data.big.mapper.VideoTagMapper.saveAll-Inline
### The error occurred while setting parameters
### SQL: insert into video_tag      ( id,         ipcid,         tag,         rktime,         video_file_id )      values
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
]
2020-11-16 16:21:35.303 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:35.304 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==>  Preparing: insert into video_tag ( id, ipcid, tag, rktime, video_file_id ) values 
2020-11-16 16:21:35.304 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==> Parameters: 
2020-11-16 16:21:35.306 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator:403] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7] for task [
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
### The error may exist in file [D:\workspace\bigWorkspace\big\target\classes\mapping\VideoTagMapper.xml]
### The error may involve com.data.big.mapper.VideoTagMapper.saveAll-Inline
### The error occurred while setting parameters
### SQL: insert into video_tag      ( id,         ipcid,         tag,         rktime,         video_file_id )      values
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
]
2020-11-16 16:21:35.306 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:35.307 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==>  Preparing: insert into video_tag ( id, ipcid, tag, rktime, video_file_id ) values 
2020-11-16 16:21:35.307 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==> Parameters: 
2020-11-16 16:21:35.309 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator:403] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7] for task [
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
### The error may exist in file [D:\workspace\bigWorkspace\big\target\classes\mapping\VideoTagMapper.xml]
### The error may involve com.data.big.mapper.VideoTagMapper.saveAll-Inline
### The error occurred while setting parameters
### SQL: insert into video_tag      ( id,         ipcid,         tag,         rktime,         video_file_id )      values
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
]
2020-11-16 16:21:35.311 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:35.311 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==>  Preparing: insert into video_tag ( id, ipcid, tag, rktime, video_file_id ) values 
2020-11-16 16:21:35.312 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==> Parameters: 
2020-11-16 16:21:35.313 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@72cb8d25
2020-11-16 16:21:35.313 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator:403] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7] for task [
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
### The error may exist in file [D:\workspace\bigWorkspace\big\target\classes\mapping\VideoTagMapper.xml]
### The error may involve com.data.big.mapper.VideoTagMapper.saveAll-Inline
### The error occurred while setting parameters
### SQL: insert into video_tag      ( id,         ipcid,         tag,         rktime,         video_file_id )      values
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
]
2020-11-16 16:21:35.327 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:35.327 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==>  Preparing: insert into video_tag ( id, ipcid, tag, rktime, video_file_id ) values 
2020-11-16 16:21:35.328 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoTagMapper.saveAll:143] - ==> Parameters: 
2020-11-16 16:21:35.329 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator:403] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7] for task [
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
### The error may exist in file [D:\workspace\bigWorkspace\big\target\classes\mapping\VideoTagMapper.xml]
### The error may involve com.data.big.mapper.VideoTagMapper.saveAll-Inline
### The error occurred while setting parameters
### SQL: insert into video_tag      ( id,         ipcid,         tag,         rktime,         video_file_id )      values
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
]
2020-11-16 16:21:35.334 [http-nio-10001-exec-5] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.961038961038961
2020-11-16 16:21:35.336 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:21:35.336 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 16:21:35.337 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 16:21:35.338 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 16:21:35.339 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@6b49cd3
2020-11-16 16:22:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:22:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:22:00.005 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:22:00.007 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:22:00.014 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:22:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:22:00.019 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:22:00.019 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:22:00.998 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:22:00.999 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:22:31.001 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:22:31.001 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:23:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:23:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:23:00.004 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:23:00.006 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:23:00.008 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:23:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:23:00.016 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:23:00.016 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:23:01.003 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:23:01.004 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:23:31.005 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:23:31.005 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:24:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:24:00.002 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:24:00.003 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:24:00.004 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:24:00.005 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:24:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:24:00.010 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:24:00.010 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:24:01.007 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:24:01.007 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:24:12.132 [Thread-55] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 16:24:31.008 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:24:31.009 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:25:00.002 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:25:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 16:25:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 16:25:00.002 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:25:00.004 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:25:00.004 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:25:00.004 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 16:25:00.006 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:25:00.006 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:25:00.007 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:25:00.003(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 16:25:00.010 [Thread-57] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 16:25:00.016 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4794880c: (connection is dead)
2020-11-16 16:25:00.018 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:25:00.019 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 16:25:00.020 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@335e7d13: (connection is dead)
2020-11-16 16:25:00.023 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@72cb8d25: (connection is dead)
2020-11-16 16:25:00.023 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:25:00.023 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6b49cd3: (connection is dead)
2020-11-16 16:25:00.024 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:25:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:25:00.026 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:25:00.026 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:25:00.026 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:25:00.027 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:25:00.028 [taskScheduler-7] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:25:00.030 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:25:00.031 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:25:00.031 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:25:00.032 [taskScheduler-7] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:25:00.033 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:25:00.034 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:25:00.034 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:25:00.035 [taskScheduler-7] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:25:00.036 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:25:00.036 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:25:00.036 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:25:00.037 [taskScheduler-7] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:25:00.037 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:25:00.037 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:25:00.037 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:25:00.037(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 16:25:00.039 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:25:00.051 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@3557aa23
2020-11-16 16:25:00.075 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@41efe085
2020-11-16 16:25:00.100 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@2f7341f8
2020-11-16 16:25:00.126 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@1434b171
2020-11-16 16:25:00.126 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After adding stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:25:01.010 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:25:01.010 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:25:31.011 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:25:31.012 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:26:00.001 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:26:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:26:00.003 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:26:00.004 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:26:00.007 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:26:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:26:00.011 [Thread-58] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 16:26:00.012 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:26:00.012 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:26:01.012 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:26:01.013 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:26:31.014 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:26:31.014 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:27:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:27:00.003 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:27:00.004 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:27:00.006 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:27:00.007 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:27:00.003(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:27:00.012 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:27:00.012 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:27:01.016 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:27:01.016 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:27:31.018 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:27:31.019 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:28:00.000 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:28:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:28:00.004 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:28:00.006 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:28:00.007 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:28:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:28:00.013 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:28:00.013 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:28:01.019 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:28:01.019 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:28:31.020 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:28:31.021 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:29:00.001 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:29:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:29:00.002 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:29:00.003 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:29:00.004 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:29:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:29:00.009 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:29:00.009 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:29:01.022 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:29:01.022 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:29:12.134 [Thread-57] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 16:29:12.358 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@13ffd7f7: (connection has passed maxLifetime)
2020-11-16 16:29:12.394 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@6baadb12
2020-11-16 16:29:31.024 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:29:31.024 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:30:00.002 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 16:30:00.002 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:30:00.003 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 16:30:00.003 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 16:30:00.003 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:30:00.003 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:30:00.003 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:30:00.005 [Thread-59] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 16:30:00.005 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:30:00.014 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2f7341f8: (connection is dead)
2020-11-16 16:30:00.017 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@41efe085: (connection is dead)
2020-11-16 16:30:00.017 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3557aa23: (connection is dead)
2020-11-16 16:30:00.017 [taskScheduler-10] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:30:00.018 [taskScheduler-10] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:30:00.018 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1434b171: (connection is dead)
2020-11-16 16:30:00.021 [taskScheduler-10] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:30:00.021 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:30:00.022 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:30:00.003(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 16:30:00.024 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:30:00.026 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:30:00.026 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 16:30:00.026 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:30:00.027 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:30:00.003(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:30:00.033 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:30:00.034 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:30:00.034 [taskScheduler-10] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:30:00.034 [taskScheduler-10] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:30:00.036 [taskScheduler-10] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:30:00.038 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:30:00.038 [taskScheduler-10] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:30:00.038 [taskScheduler-10] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:30:00.040 [taskScheduler-10] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:30:00.041 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:30:00.042 [taskScheduler-10] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:30:00.042 [taskScheduler-10] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:30:00.043 [taskScheduler-10] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:30:00.044 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:30:00.044 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:30:00.044 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:30:00.043(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 16:30:00.050 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:30:00.059 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@680b4b68
2020-11-16 16:30:00.094 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@1cee13c0
2020-11-16 16:30:00.142 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@158da3cc
2020-11-16 16:30:00.177 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@49681ecd
2020-11-16 16:30:01.025 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:30:01.025 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:30:31.025 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:30:31.025 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:31:00.001 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:31:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:31:00.007 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:31:00.007 [Thread-60] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 16:31:00.008 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:31:00.009 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:31:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:31:00.018 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:31:00.019 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:31:01.027 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:31:01.027 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:31:31.028 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:31:31.028 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:32:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:32:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:32:00.003 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:32:00.006 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:32:00.013 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:32:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:32:00.017 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:32:00.017 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:32:01.029 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:32:01.029 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:32:31.032 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:32:31.032 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:33:00.000 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:33:00.000 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:33:00.003 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:33:00.006 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:33:00.008 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:33:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:33:00.012 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:33:00.012 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:33:01.032 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:33:01.033 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:33:31.035 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:33:31.035 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:34:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:34:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:34:00.003 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:34:00.004 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:34:00.005 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:34:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:34:00.010 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:34:00.010 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:34:01.036 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:34:01.036 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:34:12.100 [Thread-59] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 16:34:31.038 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:34:31.038 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:35:00.002 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 16:35:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:35:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:35:00.002 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 16:35:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 16:35:00.002 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:35:00.002 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:35:00.005 [Thread-61] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 16:35:00.005 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:35:00.006 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:35:00.002(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 16:35:00.006 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:35:00.012 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@680b4b68: (connection is dead)
2020-11-16 16:35:00.012 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:35:00.013 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 16:35:00.014 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1cee13c0: (connection is dead)
2020-11-16 16:35:00.014 [taskScheduler-3] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:35:00.014 [taskScheduler-3] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:35:00.014 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@158da3cc: (connection is dead)
2020-11-16 16:35:00.017 [taskScheduler-3] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:35:00.017 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@49681ecd: (connection is dead)
2020-11-16 16:35:00.017 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:35:00.018 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:35:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:35:00.019 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:35:00.021 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:35:00.021 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:35:00.021 [taskScheduler-3] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:35:00.022 [taskScheduler-3] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:35:00.023 [taskScheduler-3] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:35:00.024 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:35:00.024 [taskScheduler-3] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:35:00.024 [taskScheduler-3] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:35:00.025 [taskScheduler-3] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:35:00.026 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:35:00.026 [taskScheduler-3] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:35:00.027 [taskScheduler-3] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:35:00.027 [taskScheduler-3] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:35:00.028 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:35:00.028 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:35:00.028 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:35:00.028(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 16:35:00.030 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:35:00.041 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@390f93c6
2020-11-16 16:35:00.065 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@4d3b0492
2020-11-16 16:35:00.091 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@7785353b
2020-11-16 16:35:00.091 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After adding stats (total=4, active=0, idle=4, waiting=0)
2020-11-16 16:35:00.113 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@186c1d57
2020-11-16 16:35:01.039 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:35:01.039 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:35:31.041 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:35:31.043 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:36:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:36:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:36:00.005 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:36:00.006 [Thread-62] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 16:36:00.007 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:36:00.008 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:36:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:36:00.010 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:36:00.011 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:36:01.043 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:36:01.043 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:36:31.044 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:36:31.044 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:37:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:37:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:37:00.002 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:37:00.003 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:37:00.004 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:37:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:37:00.008 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:37:00.009 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:37:01.045 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:37:01.046 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:37:31.048 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:37:31.048 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:38:00.001 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:38:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:38:00.002 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:38:00.003 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:38:00.004 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:38:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:38:00.010 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:38:00.010 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:38:01.049 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:38:01.049 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:38:31.050 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:38:31.050 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:39:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:39:00.001 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:39:00.003 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:39:00.005 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:39:00.007 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:39:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:39:00.014 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:39:00.014 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:39:01.052 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:39:01.052 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:39:12.137 [Thread-61] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 16:39:31.054 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:39:31.054 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:40:00.000 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:40:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 16:40:00.005 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:40:00.005 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 16:40:00.006 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:40:00.006 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:40:00.011 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 16:40:00.014 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:40:00.014 [Thread-63] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 16:40:00.016 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:40:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:40:00.017 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:40:00.026 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:40:00.026 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@390f93c6: (connection is dead)
2020-11-16 16:40:00.027 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:40:00.028 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4d3b0492: (connection is dead)
2020-11-16 16:40:00.028 [taskScheduler-6] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:40:00.028 [taskScheduler-6] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:40:00.030 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7785353b: (connection is dead)
2020-11-16 16:40:00.032 [taskScheduler-6] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:40:00.033 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@186c1d57: (connection is dead)
2020-11-16 16:40:00.033 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:40:00.034 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:40:00.006(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 16:40:00.034 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:40:00.036 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:40:00.037 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 16:40:00.037 [taskScheduler-6] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:40:00.037 [taskScheduler-6] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:40:00.038 [taskScheduler-6] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:40:00.039 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:40:00.039 [taskScheduler-6] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:40:00.040 [taskScheduler-6] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:40:00.041 [taskScheduler-6] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:40:00.043 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:40:00.043 [taskScheduler-6] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:40:00.043 [taskScheduler-6] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:40:00.044 [taskScheduler-6] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:40:00.044 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:40:00.044 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:40:00.045 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:40:00.044(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 16:40:00.046 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:40:00.058 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@649fef
2020-11-16 16:40:00.081 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@746955f9
2020-11-16 16:40:00.105 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@14a64934
2020-11-16 16:40:00.105 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After adding stats (total=4, active=0, idle=4, waiting=0)
2020-11-16 16:40:00.130 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@21073728
2020-11-16 16:40:01.055 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:40:01.056 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:40:31.056 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:40:31.056 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:41:00.002 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:41:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:41:00.004 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:41:00.007 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:41:00.008 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:41:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:41:00.016 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:41:00.016 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:41:00.016 [Thread-64] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 16:41:01.058 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:41:01.058 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:41:31.059 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:41:31.059 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:42:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:42:00.002 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:42:00.004 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:42:00.007 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:42:00.008 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:42:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:42:00.015 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:42:00.015 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:42:01.060 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:42:01.060 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:42:31.061 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:42:31.061 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:43:00.000 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:43:00.001 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:43:00.002 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:43:00.002 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:43:00.003 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:43:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:43:00.010 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:43:00.010 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:43:01.063 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:43:01.063 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:43:31.064 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:43:31.064 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:44:00.000 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:44:00.002 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:44:00.004 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:44:00.007 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:44:00.008 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:44:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:44:00.014 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:44:00.015 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:44:01.066 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:44:01.066 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:44:12.125 [Thread-63] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 16:44:31.068 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:44:31.068 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:45:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:45:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:45:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 16:45:00.001 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 16:45:00.005 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:45:00.005 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:45:00.007 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 16:45:00.009 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:45:00.009 [Thread-65] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 16:45:00.010 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:45:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:45:00.010 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:45:00.017 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:45:00.017 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@649fef: (connection is dead)
2020-11-16 16:45:00.018 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:45:00.019 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@746955f9: (connection is dead)
2020-11-16 16:45:00.020 [taskScheduler-5] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:45:00.020 [taskScheduler-5] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:45:00.025 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@14a64934: (connection is dead)
2020-11-16 16:45:00.027 [taskScheduler-5] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:45:00.028 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@21073728: (connection is dead)
2020-11-16 16:45:00.028 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:45:00.028 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:45:00.028 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:45:00.005(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 16:45:00.030 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:45:00.030 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 16:45:00.031 [taskScheduler-5] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:45:00.031 [taskScheduler-5] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:45:00.032 [taskScheduler-5] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:45:00.033 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:45:00.033 [taskScheduler-5] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:45:00.033 [taskScheduler-5] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:45:00.034 [taskScheduler-5] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:45:00.035 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:45:00.036 [taskScheduler-5] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:45:00.036 [taskScheduler-5] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:45:00.037 [taskScheduler-5] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:45:00.037 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:45:00.037 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:45:00.037 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:45:00.037(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 16:45:00.039 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:45:00.052 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@567a80d7
2020-11-16 16:45:00.077 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@22a1801b
2020-11-16 16:45:00.101 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@4b50680c
2020-11-16 16:45:00.101 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After adding stats (total=4, active=0, idle=4, waiting=0)
2020-11-16 16:45:00.127 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@7719f4c5
2020-11-16 16:45:01.070 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:45:01.070 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:45:31.072 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:45:31.072 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:46:00.000 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:46:00.000 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:46:00.003 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:46:00.006 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:46:00.008 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:46:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:46:00.013 [Thread-66] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 16:46:00.017 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:46:00.017 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:46:01.073 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:46:01.073 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:46:31.075 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:46:31.076 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:47:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:47:00.001 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:47:00.003 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:47:00.006 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:47:00.008 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:47:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:47:00.016 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:47:00.016 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:47:01.078 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:47:01.079 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:47:31.080 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:47:31.080 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:48:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:48:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:48:00.002 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:48:00.003 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:48:00.004 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:48:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:48:00.015 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:48:00.015 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:48:01.082 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:48:01.082 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:48:31.083 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:48:31.083 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:49:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:49:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:49:00.002 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:49:00.003 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:49:00.004 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:49:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:49:00.010 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:49:00.010 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:49:01.085 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:49:01.085 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:49:12.078 [Thread-65] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 16:49:31.087 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:49:31.087 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:50:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 16:50:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 16:50:00.002 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:50:00.002 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:50:00.003 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:50:00.003 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 16:50:00.003 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:50:00.006 [Thread-67] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 16:50:00.019 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:50:00.019 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:50:00.002(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 16:50:00.019 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:50:00.027 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@567a80d7: (connection is dead)
2020-11-16 16:50:00.028 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@22a1801b: (connection is dead)
2020-11-16 16:50:00.031 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4b50680c: (connection is dead)
2020-11-16 16:50:00.031 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7719f4c5: (connection is dead)
2020-11-16 16:50:00.043 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:50:00.043 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 16:50:00.043 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:50:00.043 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:50:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:50:00.061 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:50:00.061 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:50:00.061 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:50:00.062 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:50:00.063 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:50:00.064 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:50:00.064 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:50:00.064 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:50:00.065 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:50:00.066 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:50:00.066 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:50:00.066 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:50:00.068 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:50:00.069 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:50:00.069 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:50:00.069 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:50:00.070 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:50:00.071 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@49f30700
2020-11-16 16:50:00.071 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:50:00.071 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:50:00.071 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:50:00.071(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 16:50:00.088 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:50:00.109 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@3db70a3b
2020-11-16 16:50:00.133 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@70698c13
2020-11-16 16:50:00.161 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@6890e77a
2020-11-16 16:50:00.161 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After adding stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:50:01.088 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:50:01.088 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:50:31.089 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:50:31.090 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:51:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:51:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:51:00.003 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:51:00.008 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:51:00.008 [Thread-68] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 16:51:00.009 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:51:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:51:00.013 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:51:00.014 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:51:01.091 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:51:01.091 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:51:31.092 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:51:31.093 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:51:44.340 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:51:44.341 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:51:44.343 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 16:51:44.346 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:51:44.355 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:51:44.355 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:51:44.355 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:51:44.358 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:51:44.368 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9615384615384616
2020-11-16 16:51:44.377 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:51:44.377 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 16:51:44.378 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 16:51:44.381 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 16:51:52.529 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:51:52.530 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:51:52.533 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:51:52.536 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:51:52.536 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:51:52.536 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9620253164556962
2020-11-16 16:51:52.536 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:51:52.537 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:51:52.537 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:51:52.537 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:51:52.538 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:51:52.540 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:51:52.540 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:51:52.540 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:51:52.540 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:51:52.540 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:51:52.540 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:51:52.540 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:51:52.542 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:51:52.542 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:51:52.542 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:51:52.543 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:51:52.543 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:51:52.544 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:52:00.000 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:52:00.000 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:52:00.002 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:52:00.003 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:52:00.003 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:52:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:52:00.007 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:52:00.007 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:52:01.094 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:52:01.094 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:52:31.096 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:52:31.096 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:53:00.000 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:53:00.001 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:53:00.003 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:53:00.006 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:53:00.008 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:53:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:53:00.014 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:53:00.014 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:53:01.097 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:53:01.097 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:53:31.100 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:53:31.100 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:54:00.001 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:54:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:54:00.004 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:54:00.006 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:54:00.007 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:54:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:54:00.013 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:54:00.013 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:54:01.102 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:54:01.102 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:54:12.132 [Thread-67] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 16:54:12.859 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:54:12.861 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:54:12.861 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:54:12.862 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:54:12.863 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:54:12.864 [http-nio-10001-exec-10] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9625
2020-11-16 16:54:12.864 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:54:12.865 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:54:12.866 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:54:12.867 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:54:12.868 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:54:12.868 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:54:12.870 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:54:12.873 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:54:12.873 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:54:12.874 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:54:12.874 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:54:12.874 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:54:12.874 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:54:12.875 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:54:12.876 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:54:12.876 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:54:12.876 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:54:12.878 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:54:30.806 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:54:30.808 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:54:30.810 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:54:30.811 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:54:30.812 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:54:30.812 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:54:30.812 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:54:30.812 [http-nio-10001-exec-5] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9629629629629629
2020-11-16 16:54:30.813 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:54:30.813 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:54:30.813 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:54:30.814 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:54:30.814 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:54:30.814 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:54:30.815 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:54:30.815 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:54:30.816 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:54:30.816 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:54:30.817 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:54:30.817 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:54:30.819 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:54:30.820 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:54:30.821 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:54:30.822 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:54:31.103 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:54:31.103 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:55:00.003 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:55:00.003 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:55:00.003 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 16:55:00.003 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 16:55:00.004 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:00.004 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:00.004 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 16:55:00.005 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:55:00.005 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:55:00.005 [Thread-69] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 16:55:00.006 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:55:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:55:00.006 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:55:00.004(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 16:55:00.009 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:55:00.009 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 16:55:00.010 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:55:00.010 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:55:00.011 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:00.011 [taskScheduler-9] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:55:00.011 [taskScheduler-9] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:55:00.013 [taskScheduler-9] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:55:00.015 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:00.015 [taskScheduler-9] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:55:00.015 [taskScheduler-9] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:55:00.016 [taskScheduler-9] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:55:00.019 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:00.019 [taskScheduler-9] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:55:00.019 [taskScheduler-9] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:55:00.020 [taskScheduler-9] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:55:00.021 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:00.021 [taskScheduler-9] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 16:55:00.021 [taskScheduler-9] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 16:55:00.022 [taskScheduler-9] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 16:55:00.023 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:00.023 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:55:00.023 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:55:00.023(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 16:55:00.027 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:55:01.105 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:55:01.105 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:55:29.700 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:29.700 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:29.700 [http-nio-10001-exec-10] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9634146341463414
2020-11-16 16:55:29.702 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:29.702 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:29.703 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:55:29.702 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 16:55:29.705 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:29.705 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:29.710 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:29.711 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 16:55:29.712 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 16:55:29.714 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 16:55:31.008 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:31.009 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:31.011 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:31.011 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:31.012 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 16:55:31.012 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:55:31.014 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.963855421686747
2020-11-16 16:55:31.015 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:31.015 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:31.020 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:31.022 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ?)) table_count 
2020-11-16 16:55:31.023 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 3(String)
2020-11-16 16:55:31.026 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 16:55:31.106 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:55:31.106 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:55:33.822 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:33.822 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:33.824 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:33.824 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9642857142857143
2020-11-16 16:55:33.824 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:33.825 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:55:33.825 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 16:55:33.828 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:33.832 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:33.834 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:33.836 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 16:55:33.836 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 16:55:33.838 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 16:55:37.592 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:37.593 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:37.593 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:55:37.593 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:37.593 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9647058823529412
2020-11-16 16:55:37.595 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:37.595 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:37.595 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:37.595 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:37.595 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:55:37.595 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:55:37.595 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:37.596 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:55:37.597 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:55:37.597 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:55:37.598 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:55:37.603 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:37.603 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:37.603 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:37.603 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:37.604 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:37.604 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:37.605 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:37.605 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:39.057 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:39.058 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:39.060 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:39.060 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:39.061 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:39.061 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:55:39.061 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:39.061 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:39.062 [http-nio-10001-exec-6] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9651162790697675
2020-11-16 16:55:39.063 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:39.063 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:39.064 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:39.064 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:39.064 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:39.065 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:39.066 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:39.066 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:55:39.067 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:55:39.069 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:39.069 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:39.069 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:55:39.072 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:55:39.072 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:55:39.075 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:55:39.945 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:39.945 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:39.947 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:39.947 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:39.947 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:39.947 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:39.948 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:55:39.949 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:39.949 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9655172413793104
2020-11-16 16:55:39.949 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:39.949 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:39.949 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:39.950 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:39.951 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:39.951 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:39.952 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:55:39.952 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:39.953 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:39.953 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:55:39.953 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:39.954 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:55:39.957 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:55:39.957 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:55:39.959 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:55:51.356 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:51.359 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:51.359 [http-nio-10001-exec-3] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9659090909090909
2020-11-16 16:55:51.360 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:51.360 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:51.361 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:51.361 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:51.362 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:51.362 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:51.363 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:51.364 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:55:51.364 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:51.364 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:55:51.364 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:51.365 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:51.365 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:55:51.366 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:51.367 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:51.368 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:55:51.369 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:51.370 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:51.371 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:55:51.372 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:55:51.374 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:55:53.200 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:53.201 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:53.201 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 16:55:53.202 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:53.202 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9662921348314607
2020-11-16 16:55:53.203 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:53.203 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:53.203 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:55:53.205 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:53.208 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:53.209 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ?)) table_count 
2020-11-16 16:55:53.209 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 3(String)
2020-11-16 16:55:53.211 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 16:55:55.373 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:55.373 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:55.374 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:55.374 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:55.374 [http-nio-10001-exec-9] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9666666666666667
2020-11-16 16:55:55.374 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:55:55.374 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:55.375 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:55.375 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:55.376 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:55:55.376 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:55.376 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:55:55.378 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:55.378 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:55.378 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:55:55.378 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:55.380 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:55:55.380 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:55.380 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:55:55.381 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:55.382 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:55:55.382 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:55.382 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:55.384 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:56.913 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:56.913 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:56.914 [http-nio-10001-exec-2] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.967032967032967
2020-11-16 16:55:56.915 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:56.915 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:56.916 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:55:56.916 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 16:55:56.919 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:56.919 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:56.925 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:56.926 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 16:55:56.927 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 16:55:56.931 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 16:55:57.646 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:57.649 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:57.649 [http-nio-10001-exec-8] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.967391304347826
2020-11-16 16:55:57.649 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:57.650 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:57.650 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:57.651 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:57.652 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:57.652 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:57.652 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:57.653 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:55:57.653 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:57.654 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:57.654 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:55:57.655 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:57.655 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:57.655 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:55:57.656 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:57.658 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:55:57.659 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:57.659 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:57.661 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:55:57.661 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:55:57.664 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:55:59.007 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:59.007 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:59.008 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:59.008 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 16:55:59.008 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:59.009 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:55:59.009 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:59.010 [http-nio-10001-exec-6] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.967741935483871
2020-11-16 16:55:59.010 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:59.012 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:59.013 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ?)) table_count 
2020-11-16 16:55:59.013 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 3(String)
2020-11-16 16:55:59.015 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 16:55:59.827 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:59.830 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:59.830 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9680851063829787
2020-11-16 16:55:59.831 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:55:59.831 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:59.831 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:59.832 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:59.832 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:55:59.833 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:59.833 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:59.834 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:55:59.834 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:59.834 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:59.834 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:55:59.834 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:55:59.835 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:55:59.835 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:55:59.838 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:55:59.839 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:59.840 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:59.840 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:55:59.841 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:55:59.842 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:55:59.844 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:56:00.002 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:56:00.002 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:56:00.004 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:00.004 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:56:00.011 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:56:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:56:00.011 [Thread-70] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 16:56:00.019 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:56:00.019 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:56:00.627 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:00.628 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:00.629 [http-nio-10001-exec-9] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.968421052631579
2020-11-16 16:56:00.629 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:00.629 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:00.629 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:00.630 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:00.630 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:00.630 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:00.630 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:56:00.630 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:56:00.630 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:00.630 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:00.630 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:00.630 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:00.631 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:00.631 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:00.631 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:56:00.631 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:00.632 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:00.632 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:00.632 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:56:00.632 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:56:00.633 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:56:01.107 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:56:01.107 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:56:02.185 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:02.186 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:02.187 [http-nio-10001-exec-5] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.96875
2020-11-16 16:56:02.187 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:02.187 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:02.187 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:02.187 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:02.188 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:02.189 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:56:02.189 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:02.189 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:02.189 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:56:02.190 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:02.190 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:56:02.191 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:02.191 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:02.192 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:56:02.192 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:56:02.193 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:02.193 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:02.193 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:56:02.194 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:02.194 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:02.196 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:03.123 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:03.125 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:03.125 [http-nio-10001-exec-4] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9690721649484536
2020-11-16 16:56:03.126 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:03.127 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:03.127 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:03.128 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:03.129 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:03.129 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:03.130 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:03.130 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:03.130 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:03.130 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:03.131 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:56:03.131 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:03.132 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:56:03.133 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:03.135 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:56:03.135 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:03.136 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:03.136 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:03.138 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:56:03.138 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:56:03.140 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:56:05.101 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:05.101 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:05.103 [http-nio-10001-exec-5] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9693877551020408
2020-11-16 16:56:05.103 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:05.103 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:05.104 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:05.104 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:05.105 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:05.105 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:05.107 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:56:05.107 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:05.108 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:56:05.108 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:05.108 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:05.108 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:05.109 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:05.111 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:56:05.111 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:05.112 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:05.112 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:05.115 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:56:05.115 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:05.115 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:56:05.119 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:56:06.457 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:06.457 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:06.459 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:06.459 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:06.460 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:06.460 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:06.461 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:06.462 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:06.463 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:06.463 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:06.464 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:06.464 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:06.464 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:06.464 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:06.465 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9696969696969697
2020-11-16 16:56:06.467 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:06.467 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:06.468 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:06.468 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:56:06.469 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:56:06.470 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:56:06.472 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:56:06.472 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:56:06.474 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:56:07.051 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:07.051 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:07.053 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:07.053 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:07.054 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:07.054 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:07.055 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.97
2020-11-16 16:56:07.056 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:07.057 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:07.057 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:07.058 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:07.059 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:07.059 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:07.059 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:56:07.059 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:07.060 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:56:07.061 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:07.063 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:56:07.063 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:07.064 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:07.066 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:07.067 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:56:07.067 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:56:07.070 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:56:08.058 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:08.058 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:08.060 [http-nio-10001-exec-4] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9702970297029703
2020-11-16 16:56:08.060 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:08.060 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:08.061 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:08.061 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:08.062 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:08.062 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:08.064 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:08.064 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:08.064 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:56:08.064 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:08.064 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:56:08.064 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:08.065 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:08.066 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:08.066 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:56:08.066 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:08.067 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:08.068 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:56:08.068 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:56:08.069 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:08.070 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:56:31.110 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:56:31.110 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:56:32.339 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:32.339 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:32.340 [http-nio-10001-exec-2] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9705882352941176
2020-11-16 16:56:32.341 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:32.341 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:32.342 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:32.343 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:32.343 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:32.344 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:32.345 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:56:32.345 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:32.346 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:56:32.346 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:32.346 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:32.347 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:32.349 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:56:32.349 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:32.350 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:32.350 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:32.351 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:56:32.351 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:32.352 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:56:32.354 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:56:32.355 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:33.324 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:33.324 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:33.326 [http-nio-10001-exec-6] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.970873786407767
2020-11-16 16:56:33.327 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:33.328 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:33.328 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:33.328 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:33.328 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:33.329 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:56:33.329 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:33.329 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:33.329 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:33.329 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:56:33.329 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:33.329 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:33.329 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:33.329 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:33.330 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:56:33.330 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:33.330 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:33.331 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:33.331 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:56:33.331 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:56:33.332 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:56:34.661 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:34.662 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:34.664 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:34.664 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:34.665 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:34.665 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:34.665 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:34.665 [http-nio-10001-exec-7] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9711538461538461
2020-11-16 16:56:34.668 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:34.668 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:34.668 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:34.669 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:34.670 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:34.670 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:56:34.671 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:34.671 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:56:34.672 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:34.673 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:34.674 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:34.674 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:56:34.677 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:34.677 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:56:34.678 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:56:34.681 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:56:35.381 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:35.381 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9714285714285714
2020-11-16 16:56:35.382 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:35.382 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:35.382 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:35.382 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:35.382 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:35.382 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:35.382 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:35.383 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:35.383 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:56:35.383 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:35.383 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:35.383 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:56:35.383 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:35.383 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:35.383 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:35.384 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:56:35.384 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:35.385 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:35.385 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:56:35.385 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:56:35.385 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:35.386 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:56:36.899 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:36.900 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:36.902 [http-nio-10001-exec-2] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9716981132075472
2020-11-16 16:56:36.902 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:36.902 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:36.902 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:36.902 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:36.902 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:36.902 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:36.902 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:36.903 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:36.903 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:36.903 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:56:36.903 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:56:36.903 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:36.904 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:56:36.904 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:36.904 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:36.905 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:36.905 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:36.905 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:56:36.905 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:56:36.906 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:36.906 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:56:37.616 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:37.616 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:37.618 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:37.619 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:37.619 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:37.620 [http-nio-10001-exec-9] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9719626168224299
2020-11-16 16:56:37.620 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 16:56:37.622 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:37.623 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:37.627 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:37.628 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ?)) table_count 
2020-11-16 16:56:37.629 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 3(String)
2020-11-16 16:56:37.631 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 16:56:38.362 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:38.363 [http-nio-10001-exec-5] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9722222222222222
2020-11-16 16:56:38.364 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:38.365 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:38.366 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:38.367 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:38.368 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:38.369 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoAlarmType(String)
2020-11-16 16:56:38.371 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:38.372 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:38.373 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT vf.*, ca.* FROM video_file vf LEFT JOIN camera ca ON vf.IPCID = ca.device_id WHERE vf.kssj >= ? AND vf.jssj <= ? AND (vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ? OR vf.`status` = ?)) table_count 
2020-11-16 16:56:38.373 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - ==> Parameters: 2020-11-02 00:00:00(String), 2020-11-16 00:00:00(String), 0(String), 1(String), 2(String), 3(String), 4(String), 6(String), 7(String)
2020-11-16 16:56:38.377 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.VideoFileMapper.getVideoRecord_COUNT:143] - <==      Total: 1
2020-11-16 16:56:40.224 [http-nio-10001-exec-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:40.224 [http-nio-10001-exec-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:40.225 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:40.225 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:40.225 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:56:40.225 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:40.226 [http-nio-10001-exec-3] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:56:40.226 [http-nio-10001-exec-7] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:40.227 [http-nio-10001-exec-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:40.228 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:40.228 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:40.228 [http-nio-10001-exec-10] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9724770642201835
2020-11-16 16:56:40.230 [http-nio-10001-exec-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:40.230 [http-nio-10001-exec-2] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:40.230 [http-nio-10001-exec-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:56:40.230 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:56:40.230 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:56:40.230 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:56:40.231 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:56:40.231 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:56:40.232 [http-nio-10001-exec-6] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:56:40.233 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:56:40.233 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:56:40.236 [http-nio-10001-exec-10] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:57:00.000 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:57:00.001 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:57:00.003 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:57:00.005 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:57:00.007 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:57:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:57:00.015 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:57:00.016 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:57:01.111 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:57:01.111 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:57:24.006 [http-nio-10001-exec-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:57:24.006 [http-nio-10001-exec-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:57:24.008 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:57:24.008 [http-nio-10001-exec-1] DEBUG [SQL_CACHE:60] - Cache Hit Ratio [SQL_CACHE]: 0.9727272727272728
2020-11-16 16:57:24.008 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:57:24.009 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: cameraType(String)
2020-11-16 16:57:24.010 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:57:24.011 [http-nio-10001-exec-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:57:24.012 [http-nio-10001-exec-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:57:24.012 [http-nio-10001-exec-4] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 8
2020-11-16 16:57:24.012 [http-nio-10001-exec-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:57:24.012 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT c.* FROM camera c) table_count 
2020-11-16 16:57:24.013 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - ==> Parameters: 
2020-11-16 16:57:24.013 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:57:24.014 [http-nio-10001-exec-9] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:57:24.014 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==>  Preparing: SELECT id,type,name,descs FROM dictionary WHERE type = ? 
2020-11-16 16:57:24.014 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:57:24.015 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera_COUNT:143] - <==      Total: 1
2020-11-16 16:57:24.015 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - ==> Parameters: videoTag(String)
2020-11-16 16:57:24.016 [http-nio-10001-exec-5] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:57:24.016 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==>  Preparing: select DISTINCT c.* from camera c LIMIT ? 
2020-11-16 16:57:24.016 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - ==> Parameters: 7(Integer)
2020-11-16 16:57:24.017 [http-nio-10001-exec-8] DEBUG [com.data.big.mapper.DictionaryMapper.select:143] - <==      Total: 32
2020-11-16 16:57:24.017 [http-nio-10001-exec-1] DEBUG [com.data.big.mapper.CameraMapper.selectAllCamera:143] - <==      Total: 6
2020-11-16 16:57:31.113 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:57:31.113 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:58:00.000 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:58:00.000 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:58:00.002 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:58:00.003 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:58:00.004 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:58:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:58:00.009 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:58:00.009 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:58:01.115 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:58:01.116 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:58:31.117 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:58:31.117 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:58:57.501 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6baadb12: (connection has passed maxLifetime)
2020-11-16 16:58:57.525 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@2af3ed55
2020-11-16 16:59:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 16:59:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 16:59:00.006 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 16:59:00.011 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 16:59:00.015 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 16:59:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 16:59:00.066 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 16:59:00.066 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 16:59:01.118 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:59:01.119 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:59:12.136 [Thread-69] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 16:59:31.120 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 16:59:31.120 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:00:00.000 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:00:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:00:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 17:00:00.002 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 17:00:00.003 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:00:00.004 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:00:00.004 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:00:00.004 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:00:00.005 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 17:00:00.005 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:00:00.003(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 17:00:00.005 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:00:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:00:00.005 [Thread-71] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 17:00:00.007 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:00:00.008 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:00:00.008 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 17:00:00.008 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:00:00.008 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:00:00.008 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:00:00.009 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:00:00.010 [taskScheduler-2] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:00:00.011 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:00:00.011 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:00:00.012 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:00:00.013 [taskScheduler-2] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:00:00.015 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:00:00.015 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:00:00.015 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:00:00.016 [taskScheduler-2] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:00:00.018 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:00:00.018 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:00:00.018 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:00:00.020 [taskScheduler-2] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:00:00.020 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:00:00.020 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:00:00.020 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:00:00.02(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 17:00:00.023 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:00:01.122 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:00:01.122 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:00:31.124 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:00:31.124 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:01:00.000 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:01:00.000 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:01:00.003 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:01:00.008 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:01:00.008 [Thread-72] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 17:01:00.009 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:01:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:01:00.012 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:01:00.013 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:01:01.125 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:01:01.125 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:01:31.125 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:01:31.125 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:02:00.001 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:02:00.001 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:02:00.005 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:02:00.006 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:02:00.008 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:02:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:02:00.011 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:02:00.012 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:02:01.126 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:02:01.127 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:02:31.129 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:02:31.130 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:03:00.001 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:03:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:03:00.002 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:03:00.003 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:03:00.004 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:03:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:03:00.007 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:03:00.007 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:03:01.131 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:03:01.131 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:03:31.132 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:03:31.132 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:04:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:04:00.002 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:04:00.005 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:04:00.006 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:04:00.007 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:04:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:04:00.009 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:04:00.010 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:04:01.133 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:04:01.134 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:04:12.110 [Thread-71] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 17:04:31.134 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:04:31.134 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:05:00.000 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 17:05:00.001 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:05:00.001 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 17:05:00.002 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:05:00.005 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:05:00.005 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:05:00.006 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:05:00.006 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:05:00.007 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 17:05:00.007 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:05:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:05:00.009 [Thread-73] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 17:05:00.013 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:05:00.014 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@70698c13: (connection is dead)
2020-11-16 17:05:00.014 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:05:00.015 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3db70a3b: (connection is dead)
2020-11-16 17:05:00.016 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6890e77a: (connection is dead)
2020-11-16 17:05:00.017 [taskScheduler-9] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:05:00.017 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2af3ed55: (connection is dead)
2020-11-16 17:05:00.017 [taskScheduler-9] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:05:00.020 [taskScheduler-9] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:05:00.020 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:05:00.021 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:05:00.002(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 17:05:00.022 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:05:00.023 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:05:00.023 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 17:05:00.023 [taskScheduler-9] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:05:00.024 [taskScheduler-9] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:05:00.026 [taskScheduler-9] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:05:00.027 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:05:00.027 [taskScheduler-9] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:05:00.027 [taskScheduler-9] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:05:00.029 [taskScheduler-9] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:05:00.030 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:05:00.031 [taskScheduler-9] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:05:00.031 [taskScheduler-9] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:05:00.032 [taskScheduler-9] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:05:00.032 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:05:00.033 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:05:00.033 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:05:00.032(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 17:05:00.035 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:05:00.044 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@136046b0
2020-11-16 17:05:00.072 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@677e991b
2020-11-16 17:05:00.098 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@5833e074
2020-11-16 17:05:00.124 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@3203ef03
2020-11-16 17:05:00.124 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After adding stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:05:01.136 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:05:01.136 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:05:31.138 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:05:31.139 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:06:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:06:00.001 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:06:00.005 [taskScheduler-5] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:06:00.006 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:06:00.007 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:06:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:06:00.009 [Thread-74] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 17:06:00.011 [taskScheduler-5] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:06:00.011 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:06:01.140 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:06:01.142 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:06:31.142 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:06:31.142 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:07:00.000 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:07:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:07:00.002 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:07:00.006 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:07:00.007 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:07:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:07:00.015 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:07:00.015 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:07:01.143 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:07:01.143 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:07:31.144 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:07:31.144 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:08:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:08:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:08:00.002 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:08:00.003 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:08:00.004 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:08:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:08:00.007 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:08:00.008 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:08:01.145 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:08:01.145 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:08:31.146 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:08:31.146 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:09:00.001 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:09:00.001 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:09:00.003 [taskScheduler-7] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:09:00.005 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:09:00.006 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:09:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:09:00.010 [taskScheduler-7] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:09:00.010 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:09:01.148 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:09:01.148 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:09:12.126 [Thread-73] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 17:09:31.148 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:09:31.148 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:10:00.000 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 17:10:00.000 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:10:00.000 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:10:00.003 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 17:10:00.004 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:10:00.004 [taskScheduler-7] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 17:10:00.005 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:10:00.004 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:10:00.005 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:10:00.009 [Thread-75] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 17:10:00.009 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:10:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:10:00.017 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:10:00.017 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:10:00.017 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@677e991b: (connection is dead)
2020-11-16 17:10:00.018 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@136046b0: (connection is dead)
2020-11-16 17:10:00.018 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5833e074: (connection is dead)
2020-11-16 17:10:00.018 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:10:00.019 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3203ef03: (connection is dead)
2020-11-16 17:10:00.019 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:10:00.004(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 17:10:00.021 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:10:00.021 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 17:10:00.021 [taskScheduler-8] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:10:00.022 [taskScheduler-8] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:10:00.023 [taskScheduler-8] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:10:00.024 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:10:00.024 [taskScheduler-8] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:10:00.024 [taskScheduler-8] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:10:00.025 [taskScheduler-8] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:10:00.026 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:10:00.026 [taskScheduler-8] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:10:00.027 [taskScheduler-8] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:10:00.028 [taskScheduler-8] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:10:00.029 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:10:00.029 [taskScheduler-8] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:10:00.029 [taskScheduler-8] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:10:00.030 [taskScheduler-8] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:10:00.030 [taskScheduler-8] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:10:00.030 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:10:00.030 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:10:00.03(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 17:10:00.032 [taskScheduler-8] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:10:00.047 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@41634001
2020-11-16 17:10:00.072 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@352fc4ef
2020-11-16 17:10:00.096 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@6f5ea385
2020-11-16 17:10:00.121 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@6000a1e1
2020-11-16 17:10:00.121 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After adding stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:10:01.150 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:10:01.150 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:10:31.152 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:10:31.152 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:11:00.001 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:11:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:11:00.004 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:11:00.005 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:11:00.006 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:11:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:11:00.009 [Thread-76] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 17:11:00.011 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:11:00.011 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:11:01.152 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:11:01.153 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:11:31.155 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:11:31.155 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:12:00.001 [taskScheduler-5] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:12:00.002 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:12:00.005 [taskScheduler-2] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:12:00.006 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:12:00.007 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:12:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:12:00.011 [taskScheduler-2] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:12:00.011 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:12:01.156 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:12:01.156 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:12:31.158 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:12:31.158 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:13:00.001 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:13:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:13:00.005 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:13:00.006 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:13:00.007 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:13:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:13:00.009 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:13:00.009 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:13:01.159 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:13:01.159 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:13:31.161 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:13:31.161 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:14:00.000 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:14:00.001 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:14:00.003 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:14:00.005 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:14:00.006 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:14:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:14:00.010 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:14:00.010 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:14:01.162 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:14:01.163 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:14:12.146 [Thread-75] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 17:14:31.165 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:14:31.165 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:15:00.003 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 17:15:00.003 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 17:15:00.003 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:15:00.004 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:15:00.005 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:15:00.006 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 17:15:00.006 [taskScheduler-1] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:15:00.008 [Thread-77] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 17:15:00.008 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:15:00.010 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:15:00.004(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 17:15:00.010 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:15:00.018 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@41634001: (connection is dead)
2020-11-16 17:15:00.018 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:15:00.018 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 17:15:00.019 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@352fc4ef: (connection is dead)
2020-11-16 17:15:00.021 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6f5ea385: (connection is dead)
2020-11-16 17:15:00.021 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:15:00.021 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6000a1e1: (connection is dead)
2020-11-16 17:15:00.021 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:15:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:15:00.023 [taskScheduler-1] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:15:00.023 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:15:00.024 [taskScheduler-4] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:15:00.024 [taskScheduler-4] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:15:00.025 [taskScheduler-4] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:15:00.026 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:15:00.026 [taskScheduler-4] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:15:00.026 [taskScheduler-4] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:15:00.027 [taskScheduler-4] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:15:00.029 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:15:00.029 [taskScheduler-4] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:15:00.029 [taskScheduler-4] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:15:00.030 [taskScheduler-4] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:15:00.031 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:15:00.031 [taskScheduler-4] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:15:00.031 [taskScheduler-4] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:15:00.032 [taskScheduler-4] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:15:00.032 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:15:00.032 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:15:00.033 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:15:00.032(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 17:15:00.034 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:15:00.045 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d207c53
2020-11-16 17:15:00.069 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@2970a44a
2020-11-16 17:15:00.093 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@5357a42a
2020-11-16 17:15:00.118 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c439a60
2020-11-16 17:15:00.118 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After adding stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:15:01.166 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:15:01.166 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:15:31.167 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:15:31.168 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:16:00.002 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:16:00.002 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:16:00.005 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:16:00.007 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:16:00.007 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:16:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:16:00.013 [Thread-78] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 17:16:00.015 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:16:00.015 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:16:01.170 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:16:01.170 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:16:31.174 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:16:31.174 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:17:00.000 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:17:00.000 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:17:00.001 [taskScheduler-4] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:17:00.002 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:17:00.003 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:17:00.0(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:17:00.007 [taskScheduler-4] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:17:00.007 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:17:01.175 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:17:01.175 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:17:31.176 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:17:31.176 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:18:00.001 [taskScheduler-2] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:18:00.001 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:18:00.003 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:18:00.005 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:18:00.006 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:18:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:18:00.010 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:18:00.010 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:18:01.177 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:18:01.177 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:18:31.179 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:18:31.179 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:19:00.001 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:19:00.001 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:19:00.003 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:19:00.006 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:19:00.006 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:19:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:19:00.010 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:19:00.010 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:19:01.181 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:19:01.184 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:19:12.117 [Thread-77] INFO  [com.data.big.util.MyThread:35] - ---------------结束获取公务连接信息---------------------
2020-11-16 17:19:17.850 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@49f30700: (connection has passed maxLifetime)
2020-11-16 17:19:17.891 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@c0066e5
2020-11-16 17:19:31.186 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:19:31.186 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:20:00.002 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:199] - *************开始定时执行防灾任务*************************
2020-11-16 17:20:00.002 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:20:00.002 [taskScheduler-8] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:20:00.003 [taskScheduler-10] INFO  [com.data.big.task.TimingTask:73] - *************定时执行防灾添加到视频任务*************************
2020-11-16 17:20:00.004 [taskScheduler-9] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:20:00.004 [taskScheduler-6] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:20:00.008 [taskScheduler-4] INFO  [com.data.big.task.TimingTask:229] - -------------当前线程个数：38
2020-11-16 17:20:00.017 [Thread-79] INFO  [com.data.big.util.MyThread:20] - ---------------开始获取公务连接信息---------------------
2020-11-16 17:20:00.026 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5d207c53: (connection is dead)
2020-11-16 17:20:00.028 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:20:00.030 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2970a44a: (connection is dead)
2020-11-16 17:20:00.030 [taskScheduler-10] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,dyss,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,xyes,xyesw,xys,xyss,xysw,xyw,videostatus FROM new_wind_speed_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:20:00.032 [taskScheduler-10] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:20:00.032 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5357a42a: (connection is dead)
2020-11-16 17:20:00.032 [DatebookHikariCP connection closer] DEBUG [com.zaxxer.hikari.pool.PoolBase:130] - DatebookHikariCP - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7c439a60: (connection is dead)
2020-11-16 17:20:00.034 [taskScheduler-10] DEBUG [com.data.big.mapper.NewWindSpeedAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:20:00.035 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:20:00.035 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:20:00.003(Timestamp), null, 定时执行防灾任务(String), 0(String), sendFZ(String), null
2020-11-16 17:20:00.036 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:20:00.037 [taskScheduler-9] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:20:00.038 [taskScheduler-9] INFO  [com.data.big.task.TimingTask:223] - *************结束定时执行防灾任务*************************
2020-11-16 17:20:00.038 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:20:00.038 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:20:00.002(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:20:00.040 [taskScheduler-6] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:20:00.040 [taskScheduler-6] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:20:00.040 [taskScheduler-10] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuerainfall,continuousrainfall,cumulativerainfall,dayrainfall,dayrainfall2,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainaccumulation,rainfallintensity,rainfallintensity2,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tenminutefall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_rain_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:20:00.040 [taskScheduler-10] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:20:00.042 [taskScheduler-10] DEBUG [com.data.big.mapper.NewRainAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:20:00.043 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:20:00.044 [taskScheduler-10] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringtime,prosegmenttype,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,snowdepthactual,snowdepthbenchmark,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_snow_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:20:00.044 [taskScheduler-10] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:20:00.045 [taskScheduler-10] DEBUG [com.data.big.mapper.NewSnowAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:20:00.046 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:20:00.046 [taskScheduler-10] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==>  Preparing: SELECT id,actualsnowdepth,alarmbasic,alarmconfirmtime,alarmflag,alarmlevel,alarmresumeconfirmtime,alarmresumetime,alarmstatus,alarmvalue,area,benchmarksnowdepth,bureaucode,bureauname,continuousrainfall,cumulativerainfall,dayrainfall,dbcreatetime,description,devicetype,downtrackcontrolarea,downtrackcontrolnum,dtype,dvalue,endtime,handleaction,hourrainfall,ikm,imeter,km,limitsegment,limitspeed,linecode,linename,monitorpoint,monitortime,monitorunit,monitoringpointstate,monitoringtime,prosegmenttype,railwayadministrator,rainfallintensity,segment,segmenttype,sensorcode,snowdepth,starttime,tenminuterainfall,tweentyfourhourrainfall,uptrackcontrolarea,uptrackcontrolnum,winddirection,winddirection1,winddirection2,windspeed,windspeed1,windspeed2,videostatus FROM new_foreign_body_alarm WHERE alarmstatus = ? AND videostatus = ? 
2020-11-16 17:20:00.047 [taskScheduler-10] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - ==> Parameters: 0(String), 0(String)
2020-11-16 17:20:00.048 [taskScheduler-10] DEBUG [com.data.big.mapper.NewForeignBodyAlarmMapper.select:143] - <==      Total: 0
2020-11-16 17:20:00.049 [taskScheduler-10] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:20:00.049 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:20:00.049 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:20:00.048(Timestamp), null, 定时执行防灾添加到视频任务(String), 0(String), getFZTask(String), null
2020-11-16 17:20:00.051 [taskScheduler-10] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:20:00.058 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@22d07ea
2020-11-16 17:20:00.083 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@76a21e6c
2020-11-16 17:20:00.107 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@2fd5f3a0
2020-11-16 17:20:00.131 [DatebookHikariCP connection adder] DEBUG [com.zaxxer.hikari.pool.HikariPool:722] - DatebookHikariCP - Added connection com.mysql.cj.jdbc.ConnectionImpl@234e3d25
2020-11-16 17:20:01.187 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:20:01.187 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:20:31.188 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:20:31.188 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:21:00.001 [taskScheduler-1] INFO  [com.data.big.task.TimingTask:89] - *************开始定时查询anbao3数据*************************
2020-11-16 17:21:00.001 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:164] - *************开始定时执行查询公务任务*************************
2020-11-16 17:21:00.002 [taskScheduler-3] DEBUG [org.springframework.jdbc.datasource.DataSourceUtils:115] - Fetching JDBC Connection from DataSource
2020-11-16 17:21:00.003 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==>  Preparing: insert into log_rest (lrsj, ip, paramin, `type`, funname, redata ) values (?, ?, ?, ?, ?, ? ) 
2020-11-16 17:21:00.004 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - ==> Parameters: 2020-11-16 17:21:00.001(Timestamp), null, 定时执行查询公务任务(String), 0(String), sendGW(String), 查询到晃车数据个数null  查询到施工计划数据个数null  查询到维修计划数据个数null(String)
2020-11-16 17:21:00.008 [taskScheduler-3] DEBUG [com.data.big.mapper.LogRestMapper.insert:143] - <==    Updates: 1
2020-11-16 17:21:00.008 [taskScheduler-3] INFO  [com.data.big.task.TimingTask:193] - *************结束定时执行查询公务任务*************************
2020-11-16 17:21:00.015 [Thread-80] INFO  [com.data.big.service.impl.ServiceFZImpl:126] - 防灾url：http://172.23.37.61:11021/ws/bigdata?wsdl
2020-11-16 17:21:01.190 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2020-11-16 17:21:01.190 [DatebookHikariCP housekeeper] DEBUG [com.zaxxer.hikari.pool.HikariPool:417] - DatebookHikariCP - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
